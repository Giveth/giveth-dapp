{"version":3,"sources":["../src/generateClass.js"],"names":["checkWeb3","web3","version","startsWith","Error","validOptKeys","filterOpts","opts","validOpts","forEach","key","estimateGas","method","$noEstimateGas","Promise","resolve","$gas","gas","then","$extraGas","Math","floor","execute","txObject","cb","_method","constant","call","defer","relayEvent","args","eventEmitter","emit","event","filteredOpts","Object","assign","send","on","r","verbose","console","log","gasUsed","catch","reject","methodWrapper","length","pop","Array","isArray","abi","bytecode","C","address","$web3","$address","$contract","eth","Contract","$abi","$byteCode","keys","methods","filter","getAccounts","accounts","options","from","undefined","new","deploy","data","arguments","getAccount","params","account","contract"],"mappings":"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","file":"generateClass.js","sourcesContent":["import Web3PromiEvent from 'web3-core-promievent';\n\nfunction checkWeb3(web3) {\n  if (typeof web3.version !== 'string' || !web3.version.startsWith('1.')) {\n    throw new Error('web3 version 1.x is required');\n  }\n}\n\nconst validOptKeys = ['from', 'to', 'gasPrice', 'gas', 'value', 'data', 'nonce'];\nconst filterOpts = (opts) => {\n  const validOpts = {};\n\n  validOptKeys.forEach((key) => {\n    validOpts[key] = opts[key];\n  });\n\n  return validOpts;\n};\n\nconst estimateGas = (web3, method, opts) => {\n  if (opts.$noEstimateGas) return Promise.resolve(4700000);\n  if (opts.$gas || opts.gas) return Promise.resolve(opts.$gas || opts.gas);\n\n  return method.estimateGas(filterOpts(opts))\n    // eslint-disable-next-line no-confusing-arrow\n    .then(gas => opts.$extraGas ? gas + opts.$extraGas : Math.floor(gas * 1.1));\n};\n\n// if constant method, executes a call, otherwise, estimates gas and executes send\nconst execute = (web3, txObject, opts, cb) => {\n  const { _method } = txObject;\n\n  if (_method.constant) return txObject.call(filterOpts(opts));\n\n  // we need to create a new PromiEvent here b/c estimateGas returns a regular promise\n  // however on a 'send' we want to return a PromiEvent\n  const defer = new Web3PromiEvent();\n  const relayEvent = event => (...args) => defer.eventEmitter.emit(event, ...args);\n\n  estimateGas(web3, txObject, opts)\n    .then((gas) => {\n      // 21272 is min gas to work in testrpc\n      const filteredOpts = Object.assign({}, filterOpts(opts), { gas: (gas < 21272) ? 21272 : gas });\n      return (cb) ? txObject.send(filteredOpts, cb) : txObject.send(filteredOpts)\n        // relay all events to our promiEvent\n        .on('transactionHash', relayEvent('transactionHash'))\n        .on('confirmation', relayEvent('confirmation'))\n        .on('receipt', (r) => {\n          if (opts.verbose) {\n            console.log(r.gasUsed);\n          }\n          return relayEvent('receipt')(r);\n        })\n        .on('error', relayEvent('error'));\n    })\n    .then(defer.resolve)\n    .catch(defer.reject);\n\n  return defer.eventEmitter;\n};\n\nconst methodWrapper = (web3, method, ...args) => {\n  let cb;\n  let opts = {};\n\n  if (typeof args[args.length - 1] === 'function') cb = args.pop();\n  if (typeof args[args.length - 1] === 'object' && !Array.isArray(args[args.length - 1])) opts = args.pop();\n\n  const txObject = method(...args);\n\n  return execute(web3, txObject, opts, cb);\n};\n\n\nexport default (abi, bytecode) => {\n  const C = function C(web3, address) {\n    checkWeb3(web3);\n\n    this.$web3 = web3;\n    this.$address = address;\n    this.$contract = new web3.eth.Contract(abi, address);\n    this.$abi = abi;\n    this.$byteCode = bytecode;\n\n\n    Object.keys(this.$contract.methods)\n      .filter(key => !key.startsWith('0x'))\n      .forEach((key) => {\n        this[key] = (...args) => methodWrapper(web3, this.$contract.methods[key], ...args);\n      });\n\n        // set default from address\n    web3.eth.getAccounts()\n      .then((accounts) => {\n        this.$contract.options.from = (accounts.length > 0) ? accounts[0] : undefined;\n      })\n      .catch();\n  };\n\n  C.new = function (web3, ...args) {\n    let opts = {};\n    if (args && args.length > 0 && typeof args[args.length - 1] === 'object') {\n      opts = args.pop();\n    }\n\n    const deploy = new web3.eth.Contract(abi)\n      .deploy({\n        data: bytecode,\n        arguments: args,\n      });\n\n    const getAccount = () => {\n      if (opts.from) return Promise.resolve(opts.from);\n\n      return web3.eth.getAccounts()\n        // eslint-disable-next-line no-confusing-arrow\n        .then(accounts => (accounts.length > 0) ? accounts[0] : undefined);\n    };\n\n    // we need to create a new PromiEvent here b/c getAccount returns a regular promise\n    // however on a 'deploy' we want to return a PromiEvent\n    const defer = new Web3PromiEvent();\n    const relayEvent = event => (...params) => defer.eventEmitter.emit(event, ...params);\n\n    getAccount()\n      .then(account => Object.assign(opts, { from: account }))\n      .then(() => execute(web3, deploy, opts)\n            // relay all events to our promiEvent\n            .on('transactionHash', relayEvent('transactionHash'))\n            .on('confirmation', relayEvent('confirmation'))\n            .on('receipt', relayEvent('receipt'))\n            .on('error', relayEvent('error')),\n      )\n      .then(contract => new C(web3, contract.options.address))\n      .then(defer.resolve)\n      .catch(defer.reject);\n\n    return defer.eventEmitter;\n  };\n\n  return C;\n};\n"]}