"use strict";function _interopDefault(r){return r&&"object"==typeof r&&"default"in r?r.default:r}function extend(){for(var r={},e=0;e<arguments.length;e++){var t=arguments[e];for(var a in t)hasOwnProperty.call(t,a)&&(r[a]=t[a])}return r}function createCommonjsModule(r,e){return e={exports:{}},r(e,e.exports),e.exports}function create(r){function e(e){return e&&(e=formatter.apply(null,arguments)),new r(e)}return e.displayName=r.displayName||r.name,e}function matters$1(r){var e,t=[],a=-1;"string"!=typeof r&&"length"in r||(r=[r]),e=r.length;for(;++a<e;)t[a]=matter(r[a]);return t}function matter(r){var e=r;if("string"==typeof e){if(!own.call(markers,e))throw fault("Missing matter definition for `%s`",e);e={type:e,marker:markers[e]}}else if("object"!=typeof e)throw fault("Expected matter to be an object, not `%j`",e);if(!own.call(e,"type"))throw fault("Missing `type` in matter `%j`",e);if(!own.call(e,"marker"))throw fault("Missing `marker` in matter `%j`",e);return e}function create$1(r){function e(e,t,i){var s,c,l,u,p,d;if(t.charAt(0)===a&&t.charAt(1)===a&&t.charAt(2)===a&&t.charAt(3)===n)for(s=o+n,c="",d="",l=3,u=t.length;++l<u;){if((p=t.charAt(l))===a&&(d||!c)&&t.charAt(l+1)===a&&t.charAt(l+2)===a)return!!i||(s+=d+o,e(s)({type:r.type,value:c}));p===n?d+=p:(s+=d+p,c+=d+p,d="")}}var t=r.type+"FrontMatter",a=r.marker,o=a+a+a,n="\n";return e.displayName=t,e.onlyAtStart=!0,[t,e]}function create$2(r){function e(r){return o+(r.value?"\n"+r.value:"")+"\n"+o}var t=r.type,a=r.marker,o=a+a+a;return e.displayName=t+"FrontMatter",[t,e]}function frontmatter(r){var e=this.Parser,t=this.Compiler,a=matters(r||["yaml"]);isRemarkParser(e)&&attachParser(e,a),isRemarkCompiler(t)&&attachCompiler(t,a)}function attachParser(r,e){var t,a=r.prototype,o=wrap(parse$1,e),n=[];for(t in o)n.push(t);a.blockMethods=n.concat(a.blockMethods),a.blockTokenizers=xtend(o,a.blockTokenizers)}function attachCompiler(r,e){var t=r.prototype;t.visitors=xtend(wrap(compile,e),t.visitors)}function wrap(r,e){for(var t,a={},o=e.length,n=-1;++n<o;)a[(t=r(e[n]))[0]]=t[1];return a}function isRemarkParser(r){return Boolean(r&&r.prototype&&r.prototype.blockTokenizers)}function isRemarkCompiler(r){return Boolean(r&&r.prototype&&r.prototype.visitors)}function unherit$1(r){function e(e){return r.apply(this,e)}function t(){return this instanceof t?r.apply(this,arguments):new e(arguments)}var a,o,n;inherits(t,r),inherits(e,t),a=t.prototype;for(o in a)(n=a[o])&&"object"==typeof n&&(a[o]="concat"in n?n.concat():xtend$2(n));return t}function factory(r,e,t){return function(){var a=t||this,o=a[r];return a[r]=!e,function(){a[r]=o}}}function factory$1(r){var e=indices(String(r));return{toPosition:offsetToPositionFactory(e),toOffset:positionToOffsetFactory(e)}}function offsetToPositionFactory(r){return function(e){var t=-1,a=r.length;if(e<0)return{};for(;++t<a;)if(r[t]>e)return{line:t+1,column:e-(r[t-1]||0)+1,offset:e};return{}}}function positionToOffsetFactory(r){return function(e){var t=e&&e.line,a=e&&e.column;return!isNaN(t)&&!isNaN(a)&&t-1 in r?(r[t-2]||0)+a-1||0:-1}}function indices(r){for(var e=[],t=r.indexOf("\n");-1!==t;)e.push(t+1),t=r.indexOf("\n",t+1);return e.push(r.length+1),e}function factory$2(r,e){return function(t){for(var a,o=0,n=t.indexOf("\\"),i=r[e],s=[];-1!==n;)s.push(t.slice(o,n)),o=n+1,(a=t.charAt(o))&&-1!==i.indexOf(a)||s.push("\\"),n=t.indexOf("\\",o);return s.push(t.slice(o)),s.join("")}}function decimal$1(r){var e="string"==typeof r?r.charCodeAt(0):r;return e>=48&&e<=57}function hexadecimal$1(r){var e="string"==typeof r?r.charCodeAt(0):r;return e>=97&&e<=102||e>=65&&e<=70||e>=48&&e<=57}function alphabetical$1(r){var e="string"==typeof r?r.charCodeAt(0):r;return e>=97&&e<=122||e>=65&&e<=90}function alphanumerical$1(r){return alphabetical(r)||decimal$2(r)}function wrapper(r,e){var t,a,o={};e||(e={});for(a in defaults)t=e[a],o[a]=null===t||void 0===t?defaults[a]:t;return(o.position.indent||o.position.start)&&(o.indent=o.position.indent||[],o.position=o.position.start),parse$5(r,o)}function parse$5(r,e){function t(){return{line:B,column:I,offset:R+(x.offset||0)}}function a(e){return r.charAt(e)}function o(){F&&(P.push(F),$&&$.call(S,F,{start:b,end:t()}),F=EMPTY)}var n,i,s,c,l,u,p,d,f,g,h,m,D,E,b,C,A,w,q=e.additional,v=e.nonTerminated,$=e.text,y=e.reference,L=e.warning,S=e.textContext,T=e.referenceContext,N=e.warningContext,x=e.position,k=e.indent||[],_=r.length,R=0,O=-1,I=x.column||1,B=x.line||1,F=EMPTY,P=[];for(b=t(),p=L?function(r,e){var a=t();a.column+=e,a.offset+=e,L.call(N,MESSAGES[r],a,r)}:noop,R--,_++;++R<_;)if(c===NEWLINE&&(I=k[O]||1),(c=a(R))!==AMPERSAND)c===NEWLINE&&(B++,O++,I=0),c?(F+=c,I++):o();else{if((u=a(R+1))===TAB||u===NEWLINE||u===FORM_FEED||u===SPACE||u===LESS_THAN||u===AMPERSAND||u===EMPTY||q&&u===q){F+=c,I++;continue}for(h=m=R+1,w=m,u!==OCTOTHORP?D=NAMED:(u=a(w=++h))===X_LOWER||u===X_UPPER?(D=HEXADECIMAL,w=++h):D=DECIMAL,n=EMPTY,g=EMPTY,s=EMPTY,E=TESTS[D],w--;++w<_&&(u=a(w),E(u));)s+=u,D===NAMED&&own$1.call(legacy,s)&&(n=s,g=legacy[s]);(i=a(w)===SEMICOLON)&&(w++,D===NAMED&&own$1.call(characterEntities,s)&&(n=s,g=characterEntities[s])),A=1+w-m,(i||v)&&(s?D===NAMED?(i&&!g?p(NAMED_UNKNOWN,1):(n!==s&&(A=1+(w=h+n.length)-h,i=!1),i||(d=n?NAMED_NOT_TERMINATED:NAMED_EMPTY,e.attribute?(u=a(w))===EQUAL?(p(d,A),g=null):alphanumerical(u)?g=null:p(d,A):p(d,A))),l=g):(i||p(NUMERIC_NOT_TERMINATED,A),isProhibited(l=parseInt(s,BASE[D]))?(p(NUMERIC_PROHIBITED,A),l=REPLACEMENT):l in invalid?(p(NUMERIC_DISALLOWED,A),l=invalid[l]):(f=EMPTY,isWarning(l)&&p(NUMERIC_DISALLOWED,A),l>65535&&(f+=fromCharCode((l-=65536)>>>10|55296),l=56320|1023&l),l=f+fromCharCode(l))):D!==NAMED&&p(NUMERIC_EMPTY,A)),l?(o(),b=t(),R=w-1,I+=w-m+1,P.push(l),(C=t()).offset++,y&&y.call(T,l,{start:b,end:C},r.slice(m-1,w)),b=C):(s=r.slice(m-1,w),F+=s,I+=s.length,R=w-1)}return P.join(EMPTY)}function isProhibited(r){return r>=55296&&r<=57343||r>1114111}function isWarning(r){return r>=1&&r<=8||11===r||r>=13&&r<=31||r>=127&&r<=159||r>=64976&&r<=65007||65535==(65535&r)||65534==(65535&r)}function factory$3(r){function e(e){for(var t=r.offset,a=e.line,o=[];++a&&a in t;)o.push((t[a]||0)+1);return{start:e,indent:o}}function t(e,t,a){3!==a&&r.file.message(e,t)}function a(a,o,n){entities(a,{position:e(o),warning:t,text:n,reference:n,textContext:r,referenceContext:r})}return a.raw=function(r,a){return entities(r,{position:e(a),warning:t})},a}function mergeable(r){var e,t;return"text"!==r.type||!r.position||(e=r.position.start,t=r.position.end,e.line!==t.line||t.column-e.column===r.value.length)}function mergeText(r,e){return r.value+=e.value,r}function mergeBlockquote(r,e){return this.options.commonmark?e:(r.children=r.children.concat(e.children),r)}function factory$4(r){return function(e,t){function a(r){for(var e=-1,t=r.indexOf("\n");-1!==t;)w++,e=t,t=r.indexOf("\n",t+1);-1===e?q+=r.length:q=r.length-e,w in E&&(-1!==e?q+=E[w]:q<=E[w]&&(q=E[w]+1))}function o(){var r=[],e=w+1;return function(){for(var t=w+1;e<t;)r.push((E[e]||0)+1),e++;return r}}function n(){var r={line:w,column:q};return r.offset=D.toOffset(r),r}function i(r){this.start=r,this.end=n()}function s(r){e.substring(0,r.length)!==r&&D.file.fail(new Error("Incorrectly eaten value: please report this warning on http://git.io/vg5Ft"),n())}function c(){var r=n();return function(e,t){var a=e.position,o=a?a.start:r,n=[],s=a&&a.end.line,c=r.line;if(e.position=new i(o),a&&t&&a.indent){if(n=a.indent,s<c){for(;++s<c;)n.push((E[s]||0)+1);n.push(r.column)}t=n.concat(t)}return e.position.indent=t||[],e}}function l(r,e){var t=e?e.children:b,a=t[t.length-1];return a&&r.type===a.type&&r.type in MERGEABLE_NODES&&mergeable(a)&&mergeable(r)&&(r=MERGEABLE_NODES[r.type].call(D,a,r)),r!==a&&t.push(r),D.atStart&&0!==b.length&&D.exitStart(),r}function u(r){function t(r,e){return d(l(d(r),e),p)}function i(){var a=t.apply(null,arguments);return w=f.line,q=f.column,e=r+e,a}function u(){var t=d({});return w=f.line,q=f.column,e=r+e,t.position}var p=o(),d=c(),f=n();return s(r),t.reset=i,i.test=u,t.test=u,e=e.substring(r.length),a(r),p=p(),t}var p,d,f,g,h,m,D=this,E=D.offset,b=[],C=D[r+"Methods"],A=D[r+"Tokenizers"],w=t.line,q=t.column;if(!e)return b;for(u.now=n,u.file=D.file,a("");e;){for(p=-1,d=C.length,h=!1;++p<d&&(g=C[p],!(f=A[g])||f.onlyAtStart&&!D.atStart||f.notInList&&D.inList||f.notInBlock&&D.inBlock||f.notInLink&&D.inLink||(m=e.length,f.apply(D,[u,e]),!(h=m!==e.length))););h||D.file.fail(new Error("Infinite loop"),u.now())}return D.eof=n(),b}}function escapes$1(r){var e=r||{};return e.commonmark?commonmark:e.gfm?gfm:defaults$2}function setOptions(r){var e,t,a=this,o=a.options;if(null==r)r={};else{if("object"!=typeof r)throw new Error("Invalid value `"+r+"` for setting `options`");r=xtend$4(r)}for(e in defaults$1){if(null==(t=r[e])&&(t=o[e]),"blocks"!==e&&"boolean"!=typeof t||"blocks"===e&&"object"!=typeof t)throw new Error("Invalid value `"+t+"` for setting `options."+e+"`");r[e]=t}return a.options=r,a.escape=escapes(r),a}function visit$1(r,e,t,a){function o(r,a,o){var i;return a=a||(o?0:null),e&&r.type!==e||(i=t(r,a,o||null)),r.children&&!1!==i?n(r.children,r):i}function n(r,e){for(var t,n=a?-1:1,i=r.length,s=(a?i:-1)+n;s>-1&&s<i;){if((t=r[s])&&!1===o(t,s,e))return!1;s+=n}return!0}"function"==typeof e&&(a=t,t=e,e=null),o(r)}function removePosition$1(r,e){return visit(r,e?hard:soft),r}function hard(r){delete r.position}function soft(r){r.position=void 0}function parse$6(){var r,e=this,t=String(e.file),a={line:1,column:1,offset:0},o=xtend$5(a);return 65279===(t=t.replace(EXPRESSION_LINE_BREAKS,C_NEWLINE)).charCodeAt(0)&&(t=t.slice(1),o.column++,o.offset++),r={type:"root",children:e.tokenizeBlock(t,o),position:{start:a,end:e.eof||xtend$5(a)}},e.options.position||removePosition(r,!0),r}function whitespace$1(r){return re$1.test("number"==typeof r?fromCode(r):r.charAt(0))}function newline(r,e,t){var a,o,n,i,s=e.charAt(0);if("\n"===s){if(t)return!0;for(i=1,a=e.length,o=s,n="";i<a&&(s=e.charAt(i),whitespace(s));)n+=s,"\n"===s&&(o+=n,n=""),i++;r(o)}}function repeat$1(r,e){if("string"!=typeof r)throw new TypeError("expected a string");if(1===e)return r;if(2===e)return r+r;var t=r.length*e;if(cache!==r||void 0===cache)cache=r,res="";else if(res.length>=t)return res.substr(0,t);for(;t>res.length&&e>1;)1&e&&(res+=r),e>>=1,r+=r;return res+=r,res=res.substr(0,t)}function trimTrailingLines(r){for(var e=String(r),t=e.length;e.charAt(--t)===line;);return e.slice(0,t+1)}function indentedCode(r,e,t){for(var a,o,n,i=-1,s=e.length,c="",l="",u="",p="";++i<s;)if(a=e.charAt(i),n)if(n=!1,c+=u,l+=p,u="",p="",a===C_NEWLINE$1)u=a,p=a;else for(c+=a,l+=a;++i<s;){if(!(a=e.charAt(i))||a===C_NEWLINE$1){p=a,u=a;break}c+=a,l+=a}else if(a===C_SPACE&&e.charAt(i+1)===a&&e.charAt(i+2)===a&&e.charAt(i+3)===a)u+=CODE_INDENT,i+=3,n=!0;else if(a===C_TAB)u+=a,n=!0;else{for(o="";a===C_TAB||a===C_SPACE;)o+=a,a=e.charAt(++i);if(a!==C_NEWLINE$1)break;u+=o+a,p+=a}if(l)return!!t||r(c)({type:"code",lang:null,value:trim(l)})}function fencedCode(r,e,t){var a,o,n,i,s,c,l,u,p,d,f,g=this,h=g.options,m=e.length+1,D=0,E="";if(h.gfm){for(;D<m&&((n=e.charAt(D))===C_SPACE$1||n===C_TAB$1);)E+=n,D++;if(d=D,(n=e.charAt(D))===C_TILDE||n===C_TICK){for(D++,o=n,a=1,E+=n;D<m&&(n=e.charAt(D))===o;)E+=n,a++,D++;if(!(a<MIN_FENCE_COUNT)){for(;D<m&&((n=e.charAt(D))===C_SPACE$1||n===C_TAB$1);)E+=n,D++;for(i="",s="";D<m&&(n=e.charAt(D))!==C_NEWLINE$2&&n!==C_TILDE&&n!==C_TICK;)n===C_SPACE$1||n===C_TAB$1?s+=n:(i+=s+n,s=""),D++;if(!(n=e.charAt(D))||n===C_NEWLINE$2){if(t)return!0;for((f=r.now()).column+=E.length,f.offset+=E.length,E+=i,i=g.decode.raw(g.unescape(i),f),s&&(E+=s),s="",u="",p="",c="",l="";D<m;)if(n=e.charAt(D),c+=u,l+=p,u="",p="",n===C_NEWLINE$2){for(c?(u+=n,p+=n):E+=n,s="",D++;D<m&&(n=e.charAt(D))===C_SPACE$1;)s+=n,D++;if(u+=s,p+=s.slice(d),!(s.length>=CODE_INDENT_COUNT$1)){for(s="";D<m&&(n=e.charAt(D))===o;)s+=n,D++;if(u+=s,p+=s,!(s.length<a)){for(s="";D<m&&((n=e.charAt(D))===C_SPACE$1||n===C_TAB$1);)u+=n,p+=n,D++;if(!n||n===C_NEWLINE$2)break}}}else c+=n,p+=n,D++;return E+=c+u,r(E)({type:"code",lang:i||null,value:trim$1(l)})}}}}}function interrupt$1(r,e,t,a){for(var o,n,i,s,c,l,u=["pedantic","commonmark"],p=u.length,d=r.length,f=-1;++f<d;){for(n=(o=r[f])[1]||{},i=o[0],s=-1,l=!1;++s<p;)if(c=u[s],void 0!==n[c]&&n[c]!==t.options[c]){l=!0;break}if(!l&&e[i].apply(t,a))return!0}return!1}function blockquote(r,e,t){for(var a,o,n,i,s,c,l,u,p,d=this,f=d.offset,g=d.blockTokenizers,h=d.interruptBlockquote,m=r.now(),D=m.line,E=e.length,b=[],C=[],A=[],w=0;w<E&&((o=e.charAt(w))===C_SPACE$2||o===C_TAB$2);)w++;if(e.charAt(w)===C_GT){if(t)return!0;for(w=0;w<E;){for(l=w,u=!1,-1===(i=e.indexOf(C_NEWLINE$3,w))&&(i=E);w<E&&((o=e.charAt(w))===C_SPACE$2||o===C_TAB$2);)w++;if(e.charAt(w)===C_GT?(w++,u=!0,e.charAt(w)===C_SPACE$2&&w++):w=l,s=e.slice(w,i),!u&&!trim$2(s)){w=l;break}if(!u&&(n=e.slice(w),interrupt(h,g,d,[r,n,!0])))break;c=l===w?s:e.slice(l,i),A.push(w-l),b.push(c),C.push(s),w=i+1}for(w=-1,E=A.length,a=r(b.join(C_NEWLINE$3));++w<E;)f[D]=(f[D]||0)+A[w],D++;return p=d.enterBlock(),C=d.tokenizeBlock(C.join(C_NEWLINE$3),m),p(),a({type:"blockquote",children:C})}}function atxHeading(r,e,t){for(var a,o,n,i=this,s=i.options,c=e.length+1,l=-1,u=r.now(),p="",d="";++l<c;){if((a=e.charAt(l))!==C_SPACE$3&&a!==C_TAB$3){l--;break}p+=a}for(n=0;++l<=c;){if((a=e.charAt(l))!==C_HASH){l--;break}p+=a,n++}if(!(n>MAX_ATX_COUNT)&&n&&(s.pedantic||e.charAt(l+1)!==C_HASH)){for(c=e.length+1,o="";++l<c;){if((a=e.charAt(l))!==C_SPACE$3&&a!==C_TAB$3){l--;break}o+=a}if(s.pedantic||0!==o.length||!a||a===C_NEWLINE$4){if(t)return!0;for(p+=o,o="",d="";++l<c&&(a=e.charAt(l))&&a!==C_NEWLINE$4;)if(a===C_SPACE$3||a===C_TAB$3||a===C_HASH){for(;a===C_SPACE$3||a===C_TAB$3;)o+=a,a=e.charAt(++l);for(;a===C_HASH;)o+=a,a=e.charAt(++l);for(;a===C_SPACE$3||a===C_TAB$3;)o+=a,a=e.charAt(++l);l--}else d+=o+a,o="";return u.column+=p.length,u.offset+=p.length,p+=d+o,r(p)({type:"heading",depth:n,children:i.tokenizeInline(d,u)})}}}function thematicBreak(r,e,t){for(var a,o,n,i,s=-1,c=e.length+1,l="";++s<c&&((a=e.charAt(s))===C_TAB$4||a===C_SPACE$4);)l+=a;if(a===C_ASTERISK||a===C_DASH||a===C_UNDERSCORE)for(o=a,l+=a,n=1,i="";++s<c;)if((a=e.charAt(s))===o)n++,l+=i+o,i="";else{if(a!==C_SPACE$4)return n>=THEMATIC_BREAK_MARKER_COUNT&&(!a||a===C_NEWLINE$5)?(l+=i,!!t||r(l)({type:"thematicBreak"})):void 0;i+=a}}function indentation(r){for(var e,t=0,a=0,o=r.charAt(t),n={};o in characters;)a+=e=characters[o],e>1&&(a=Math.floor(a/e)*e),n[a]=t,o=r.charAt(++t);return{indent:a,stops:n}}function indentation$1(r,e){var t,a,o,n,i=r.split(C_NEWLINE$7),s=i.length+1,c=1/0,l=[];for(i.unshift(repeat$3(C_SPACE$6,e)+"!");s--;)if(a=getIndent$1(i[s]),l[s]=a.stops,0!==trim$4(i[s]).length){if(!a.indent){c=1/0;break}a.indent>0&&a.indent<c&&(c=a.indent)}if(c!==1/0)for(s=i.length;s--;){for(o=l[s],t=c;t&&!(t in o);)t--;n=0!==trim$4(i[s]).length&&c&&t!==c?C_TAB$6:"",i[s]=n+i[s].slice(t in o?o[t]+1:0)}return i.shift(),i.join(C_NEWLINE$7)}function list(r,e,t){for(var a,o,n,i,s,c,l,u,p,d,f,g,h,m,D,E,b,C,A,w,q,v,$,y,L=this,S=L.options.commonmark,T=L.options.pedantic,N=L.blockTokenizers,x=L.interruptList,k=0,_=e.length,R=null,O=0;k<_;){if((i=e.charAt(k))===C_TAB$5)O+=TAB_SIZE-O%TAB_SIZE;else{if(i!==C_SPACE$5)break;O++}k++}if(!(O>=TAB_SIZE)){if(i=e.charAt(k),a=S?LIST_ORDERED_COMMONMARK_MARKERS:LIST_ORDERED_MARKERS,!0===LIST_UNORDERED_MARKERS[i])s=i,n=!1;else{for(n=!0,o="";k<_&&(i=e.charAt(k),decimal$3(i));)o+=i,k++;if(i=e.charAt(k),!o||!0!==a[i])return;R=parseInt(o,10),s=i}if((i=e.charAt(++k))===C_SPACE$5||i===C_TAB$5){if(t)return!0;for(k=0,m=[],D=[],E=[];k<_;){for(l=k,u=!1,y=!1,-1===(c=e.indexOf(C_NEWLINE$6,k))&&(c=_),$=k+TAB_SIZE,O=0;k<_;){if((i=e.charAt(k))===C_TAB$5)O+=TAB_SIZE-O%TAB_SIZE;else{if(i!==C_SPACE$5)break;O++}k++}if(O>=TAB_SIZE&&(y=!0),b&&O>=b.indent&&(y=!0),i=e.charAt(k),p=null,!y){if(!0===LIST_UNORDERED_MARKERS[i])p=i,k++,O++;else{for(o="";k<_&&(i=e.charAt(k),decimal$3(i));)o+=i,k++;i=e.charAt(k),k++,o&&!0===a[i]&&(p=i,O+=o.length+1)}if(p)if((i=e.charAt(k))===C_TAB$5)O+=TAB_SIZE-O%TAB_SIZE,k++;else if(i===C_SPACE$5){for($=k+TAB_SIZE;k<$&&e.charAt(k)===C_SPACE$5;)k++,O++;k===$&&e.charAt(k)===C_SPACE$5&&(k-=TAB_SIZE-1,O-=TAB_SIZE-1)}else i!==C_NEWLINE$6&&""!==i&&(p=null)}if(p){if(!T&&s!==p)break;u=!0}else S||y||e.charAt(l)!==C_SPACE$5?S&&b&&(y=O>=b.indent||O>TAB_SIZE):y=!0,u=!1,k=l;if(f=e.slice(l,c),d=l===k?f:e.slice(k,c),(p===C_ASTERISK$1||p===C_UNDERSCORE$1||p===C_DASH$1)&&N.thematicBreak.call(L,r,f,!0))break;if(g=h,h=!trim$3(d).length,y&&b)b.value=b.value.concat(E,f),D=D.concat(E,f),E=[];else if(u)0!==E.length&&(b.value.push(""),b.trail=E.concat()),b={value:[f],indent:O,trail:[]},m.push(b),D=D.concat(E,f),E=[];else if(h){if(g)break;E.push(f)}else{if(g)break;if(interrupt$2(x,N,L,[r,f,!0]))break;b.value=b.value.concat(E,f),D=D.concat(E,f),E=[]}k=c+1}for(q=r(D.join(C_NEWLINE$6)).reset({type:"list",ordered:n,start:R,loose:null,children:[]}),C=L.enterList(),A=L.enterBlock(),w=!1,k=-1,_=m.length;++k<_;)b=m[k].value.join(C_NEWLINE$6),v=r.now(),(b=r(b)(listItem(L,b,v),q)).loose&&(w=!0),b=m[k].trail.join(C_NEWLINE$6),k!==_-1&&(b+=C_NEWLINE$6),r(b);return C(),A(),q.loose=w,q}}}function listItem(r,e,t){var a,o,n=r.offset,i=null;return e=(r.options.pedantic?pedanticListItem:normalListItem).apply(null,arguments),r.options.gfm&&(a=e.match(EXPRESSION_TASK_ITEM))&&(o=a[0].length,i=a[1].toLowerCase()===C_X_LOWER,n[t.line]+=o,e=e.slice(o)),{type:"listItem",loose:EXPRESSION_LOOSE_LIST_ITEM.test(e)||e.charAt(e.length-1)===C_NEWLINE$6,checked:i,children:r.tokenizeBlock(e,t)}}function pedanticListItem(r,e,t){function a(r){return o[n]=(o[n]||0)+r.length,n++,""}var o=r.offset,n=t.line;return e=e.replace(EXPRESSION_PEDANTIC_BULLET,a),n=t.line,e.replace(EXPRESSION_INITIAL_INDENT,a)}function normalListItem(r,e,t){var a,o,n,i,s,c,l,u=r.offset,p=t.line;for(i=(e=e.replace(EXPRESSION_BULLET,function(r,e,t,i,s){return o=e+t+i,n=s,Number(t)<10&&o.length%2==1&&(t=C_SPACE$5+t),(a=e+repeat$2(C_SPACE$5,t.length)+i)+n})).split(C_NEWLINE$6),(s=removeIndent(e,getIndent(a).indent).split(C_NEWLINE$6))[0]=n,u[p]=(u[p]||0)+o.length,p++,c=0,l=i.length;++c<l;)u[p]=(u[p]||0)+i[c].length-s[c].length,p++;return s.join(C_NEWLINE$6)}function setextHeading(r,e,t){for(var a,o,n,i,s,c=this,l=r.now(),u=e.length,p=-1,d="";++p<u;){if((n=e.charAt(p))!==C_SPACE$7||p>=MAX_HEADING_INDENT){p--;break}d+=n}for(a="",o="";++p<u;){if((n=e.charAt(p))===C_NEWLINE$8){p--;break}n===C_SPACE$7||n===C_TAB$7?o+=n:(a+=o+n,o="")}if(l.column+=d.length,l.offset+=d.length,d+=a+o,n=e.charAt(++p),i=e.charAt(++p),n===C_NEWLINE$8&&SETEXT_MARKERS[i]){for(d+=n,o=i,s=SETEXT_MARKERS[i];++p<u;){if((n=e.charAt(p))!==i){if(n!==C_NEWLINE$8)return;p--;break}o+=n}return!!t||r(d+o)({type:"heading",depth:s,children:c.tokenizeInline(a,l)})}}function blockHTML(r,e,t){for(var a,o,n,i,s,c,l,u=this.options.blocks,p=e.length,d=0,f=[[/^<(script|pre|style)(?=(\s|>|$))/i,/<\/(script|pre|style)>/i,!0],[/^<!--/,/-->/,!0],[/^<\?/,/\?>/,!0],[/^<![A-Za-z]/,/>/,!0],[/^<!\[CDATA\[/,/\]\]>/,!0],[new RegExp("^</?("+u.join("|")+")(?=(\\s|/?>|$))","i"),/^$/,!0],[new RegExp(openCloseTag.source+"\\s*$"),/^$/,!1]];d<p&&((i=e.charAt(d))===C_TAB$8||i===C_SPACE$8);)d++;if(e.charAt(d)===C_LT){for(a=-1===(a=e.indexOf(C_NEWLINE$9,d+1))?p:a,o=e.slice(d,a),n=-1,s=f.length;++n<s;)if(f[n][0].test(o)){c=f[n];break}if(c){if(t)return c[2];if(d=a,!c[1].test(o))for(;d<p;){if(a=e.indexOf(C_NEWLINE$9,d+1),a=-1===a?p:a,o=e.slice(d+1,a),c[1].test(o)){o&&(d=a);break}d=a}return l=e.slice(0,d),r(l)({type:"html",value:l})}}}function collapse(r){return String(r).replace(/\s+/g," ")}function normalize$1(r){return collapseWhiteSpace(r).toLowerCase()}function footnoteDefinition(r,e,t){var a,o,n,i,s,c,l,u,p,d,f,g,h=this,m=h.offset;if(h.options.footnotes){for(a=0,o=e.length,n="",i=r.now(),s=i.line;a<o&&(p=e.charAt(a),whitespace$2(p));)n+=p,a++;if(e.charAt(a)===C_BRACKET_OPEN&&e.charAt(a+1)===C_CARET){for(a=(n+=C_BRACKET_OPEN+C_CARET).length,l="";a<o&&(p=e.charAt(a))!==C_BRACKET_CLOSE;)p===C_BACKSLASH&&(l+=p,a++,p=e.charAt(a)),l+=p,a++;if(l&&e.charAt(a)===C_BRACKET_CLOSE&&e.charAt(a+1)===C_COLON){if(t)return!0;for(d=normalize(l),a=(n+=l+C_BRACKET_CLOSE+C_COLON).length;a<o&&((p=e.charAt(a))===C_TAB$9||p===C_SPACE$9);)n+=p,a++;for(i.column+=n.length,i.offset+=n.length,l="",c="",u="";a<o;){if((p=e.charAt(a))===C_NEWLINE$10){for(u=p,a++;a<o&&(p=e.charAt(a))===C_NEWLINE$10;)u+=p,a++;for(l+=u,u="";a<o&&(p=e.charAt(a))===C_SPACE$9;)u+=p,a++;if(0===u.length)break;l+=u}l&&(c+=l,l=""),c+=p,a++}return n+=c,c=c.replace(EXPRESSION_INITIAL_TAB,function(r){return m[s]=(m[s]||0)+r.length,s++,""}),f=r(n),g=h.enterBlock(),c=h.tokenizeBlock(c,i),g(),f({type:"footnoteDefinition",identifier:d,children:c})}}}}function definition(r,e,t){for(var a,o,n,i,s,c,l,u,p=this,d=p.options.commonmark,f=0,g=e.length,h="";f<g&&((i=e.charAt(f))===C_SPACE$10||i===C_TAB$10);)h+=i,f++;if((i=e.charAt(f))===C_BRACKET_OPEN$1){for(f++,h+=i,n="";f<g&&(i=e.charAt(f))!==C_BRACKET_CLOSE$1;)i===C_BACKSLASH$1&&(n+=i,f++,i=e.charAt(f)),n+=i,f++;if(n&&e.charAt(f)===C_BRACKET_CLOSE$1&&e.charAt(f+1)===C_COLON$1){for(c=n,f=(h+=n+C_BRACKET_CLOSE$1+C_COLON$1).length,n="";f<g&&((i=e.charAt(f))===C_TAB$10||i===C_SPACE$10||i===C_NEWLINE$11);)h+=i,f++;if(i=e.charAt(f),n="",a=h,i===C_LT$1){for(f++;f<g&&(i=e.charAt(f),isEnclosedURLCharacter(i));)n+=i,f++;if((i=e.charAt(f))===isEnclosedURLCharacter.delimiter)h+=C_LT$1+n+i,f++;else{if(d)return;f-=n.length+1,n=""}}if(!n){for(;f<g&&(i=e.charAt(f),isUnclosedURLCharacter(i));)n+=i,f++;h+=n}if(n){for(l=n,n="";f<g&&((i=e.charAt(f))===C_TAB$10||i===C_SPACE$10||i===C_NEWLINE$11);)n+=i,f++;if(i=e.charAt(f),s=null,i===C_DOUBLE_QUOTE?s=C_DOUBLE_QUOTE:i===C_SINGLE_QUOTE?s=C_SINGLE_QUOTE:i===C_PAREN_OPEN&&(s=C_PAREN_CLOSE$1),s){if(!n)return;for(f=(h+=n+i).length,n="";f<g&&(i=e.charAt(f))!==s;){if(i===C_NEWLINE$11){if(f++,(i=e.charAt(f))===C_NEWLINE$11||i===s)return;n+=C_NEWLINE$11}n+=i,f++}if((i=e.charAt(f))!==s)return;o=h,h+=n+i,f++,u=n,n=""}else n="",f=h.length;for(;f<g&&((i=e.charAt(f))===C_TAB$10||i===C_SPACE$10);)h+=i,f++;return(i=e.charAt(f))&&i!==C_NEWLINE$11?void 0:!!t||(a=r(a).test().end,l=p.decode.raw(p.unescape(l),a),u&&(o=r(o).test().end,u=p.decode.raw(p.unescape(u),o)),r(h)({type:"definition",identifier:normalize$2(c),title:u||null,url:l}))}}}}function isEnclosedURLCharacter(r){return r!==C_GT$1&&r!==C_BRACKET_OPEN$1&&r!==C_BRACKET_CLOSE$1}function isUnclosedURLCharacter(r){return r!==C_BRACKET_OPEN$1&&r!==C_BRACKET_CLOSE$1&&!whitespace$3(r)}function table(r,e,t){var a,o,n,i,s,c,l,u,p,d,f,g,h,m,D,E,b,C,A,w,q,v,$,y,L=this;if(L.options.gfm){for(a=0,C=0,c=e.length+1,l=[];a<c;){if(v=e.indexOf(C_NEWLINE$12,a),$=e.indexOf(C_PIPE,a+1),-1===v&&(v=e.length),-1===$||$>v){if(C<MIN_TABLE_ROWS)return;break}l.push(e.slice(a,v)),C++,a=v+1}for(i=l.join(C_NEWLINE$12),a=0,c=(o=l.splice(1,1)[0]||[]).length,C--,n=!1,f=[];a<c;){if((p=o.charAt(a))===C_PIPE){if(d=null,!1===n){if(!1===y)return}else f.push(n),n=!1;y=!1}else if(p===C_DASH$3)d=!0,n=n||TABLE_ALIGN_NONE;else if(p===C_COLON$2)n=n===TABLE_ALIGN_LEFT?TABLE_ALIGN_CENTER:d&&n===TABLE_ALIGN_NONE?TABLE_ALIGN_RIGHT:TABLE_ALIGN_LEFT;else if(!whitespace$4(p))return;a++}if(!1!==n&&f.push(n),!(f.length<MIN_TABLE_COLUMNS)){if(t)return!0;for(b=-1,w=[],q=r(i).reset({type:"table",align:f,children:w});++b<C;){for(A=l[b],s={type:"tableRow",children:[]},b&&r(C_NEWLINE$12),r(A).reset(s,q),c=A.length+1,a=0,u="",g="",h=!0,m=null,D=null;a<c;)if((p=A.charAt(a))!==C_TAB$11&&p!==C_SPACE$11){if(""===p||p===C_PIPE)if(h)r(p);else{if(p&&D){u+=p,a++;continue}!g&&!p||h||(i=g,u.length>1&&(p?(i+=u.slice(0,u.length-1),u=u.charAt(u.length-1)):(i+=u,u="")),E=r.now(),r(i)({type:"tableCell",children:L.tokenizeInline(g,E)},s)),r(u+p),u="",g=""}else if(u&&(g+=u,u=""),g+=p,p===C_BACKSLASH$2&&a!==c-2&&(g+=A.charAt(a+1),a++),p===C_TICK$1){for(m=1;A.charAt(a+1)===p;)g+=p,a++,m++;D?m>=D&&(D=0):D=m}h=!1,a++}else g?u+=p:r(p),a++;b||r(C_NEWLINE$12+o)}return q}}}function paragraph(r,e,t){for(var a,o,n,i,s,c=this,l=c.options,u=l.commonmark,p=l.gfm,d=c.blockTokenizers,f=c.interruptParagraph,g=e.indexOf(C_NEWLINE$13),h=e.length;g<h;){if(-1===g){g=h;break}if(e.charAt(g+1)===C_NEWLINE$13)break;if(u){for(i=0,a=g+1;a<h;){if((n=e.charAt(a))===C_TAB$12){i=TAB_SIZE$1;break}if(n!==C_SPACE$12)break;i++,a++}if(i>=TAB_SIZE$1){g=e.indexOf(C_NEWLINE$13,g+1);continue}}if(o=e.slice(g+1),interrupt$3(f,d,c,[r,o,!0]))break;if(d.list.call(c,r,o,!0)&&(c.inList||u||p&&!decimal$4(trim$5.left(o).charAt(0))))break;if(a=g,-1!==(g=e.indexOf(C_NEWLINE$13,g+1))&&""===trim$5(e.slice(a,g))){g=a;break}}return o=e.slice(0,g),""===trim$5(o)?(r(o),null):!!t||(s=r.now(),o=trimTrailingLines$1(o),r(o)({type:"paragraph",children:c.tokenizeInline(o,s)}))}function locate$1(r,e){return r.indexOf("\\",e)}function escape(r,e,t){var a,o,n=this;if("\\"===e.charAt(0)&&(a=e.charAt(1),-1!==n.escape.indexOf(a)))return!!t||(o="\n"===a?{type:"break"}:{type:"text",value:a},r("\\"+a)(o))}function locate$3(r,e){return r.indexOf("<",e)}function autoLink(r,e,t){var a,o,n,i,s,c,l,u,p,d,f,g;if(e.charAt(0)===C_LT$2){for(a=this,o="",n=e.length,i=0,s="",l=!1,u="",i++,o=C_LT$2;i<n&&(c=e.charAt(i),!(whitespace$5(c)||c===C_GT$2||c===C_AT_SIGN||":"===c&&e.charAt(i+1)===C_SLASH));)s+=c,i++;if(s){if(u+=s,s="",c=e.charAt(i),u+=c,i++,c===C_AT_SIGN)l=!0;else{if(":"!==c||e.charAt(i+1)!==C_SLASH)return;u+=C_SLASH,i++}for(;i<n&&(c=e.charAt(i),!whitespace$5(c)&&c!==C_GT$2);)s+=c,i++;if(c=e.charAt(i),s&&c===C_GT$2)return!!t||(u+=s,d=u,o+=u+c,p=r.now(),p.column++,p.offset++,l&&(u.slice(0,MAILTO_LENGTH).toLowerCase()===MAILTO?(d=d.substr(MAILTO_LENGTH),p.column+=MAILTO_LENGTH,p.offset+=MAILTO_LENGTH):u=MAILTO+u),f=a.inlineTokenizers.escape,a.inlineTokenizers.escape=null,g=a.enterLink(),d=a.tokenizeInline(d,p),a.inlineTokenizers.escape=f,g(),r(o)({type:"link",title:null,url:decode$3(u),children:d}))}}}function locate$5(r,e){var t,a=PROTOCOLS$1.length,o=-1,n=-1;if(!this.options.gfm)return-1;for(;++o<a;)-1!==(t=r.indexOf(PROTOCOLS$1[o],e))&&(t<n||-1===n)&&(n=t);return n}function url(r,e,t){var a,o,n,i,s,c,l,u,p,d,f,g,h=this;if(h.options.gfm){for(a="",i=-1,u=PROTOCOLS_LENGTH;++i<u;)if(c=PROTOCOLS[i],(l=e.slice(0,c.length)).toLowerCase()===c){a=l;break}if(a){for(i=a.length,u=e.length,p="",d=0;i<u&&(n=e.charAt(i),!whitespace$6(n)&&n!==C_LT$3)&&("."!==n&&","!==n&&":"!==n&&";"!==n&&'"'!==n&&"'"!==n&&")"!==n&&"]"!==n||(f=e.charAt(i+1))&&!whitespace$6(f))&&(n!==C_PAREN_OPEN$1&&n!==C_BRACKET_OPEN$2||d++,n!==C_PAREN_CLOSE$2&&n!==C_BRACKET_CLOSE$2||!(--d<0));)p+=n,i++;if(p){if(a+=p,o=a,c===MAILTO_PROTOCOL){if(-1===(s=p.indexOf(C_AT_SIGN$1))||s===u-1)return;o=o.substr(MAILTO_PROTOCOL.length)}return!!t||(g=h.enterLink(),o=h.tokenizeInline(o,r.now()),g(),r(a)({type:"link",title:null,url:decode$4(a),children:o}))}}}}function inlineHTML(r,e,t){var a,o,n=this,i=e.length;if(!("<"!==e.charAt(0)||i<3)&&(a=e.charAt(1),(alphabetical$2(a)||"?"===a||"!"===a||"/"===a)&&(o=e.match(tag$3))))return!!t||(o=o[0],!n.inLink&&EXPRESSION_HTML_LINK_OPEN.test(o)?n.inLink=!0:n.inLink&&EXPRESSION_HTML_LINK_CLOSE.test(o)&&(n.inLink=!1),r(o)({type:"html",value:o}))}function locate$8(r,e){var t=r.indexOf("[",e),a=r.indexOf("![",e);return-1===a?t:t<a?t:a}function link(r,e,t){var a,o,n,i,s,c,l,u,p,d,f,g,h,m,D,E,b,C,A,w=this,q="",v=0,$=e.charAt(0),y=w.options.pedantic,L=w.options.commonmark,S=w.options.gfm;if("!"===$&&(p=!0,q=$,$=e.charAt(++v)),$===C_BRACKET_OPEN$3&&(p||!w.inLink)){for(q+=$,D="",v++,g=e.length,m=0,(b=r.now()).column+=v,b.offset+=v;v<g;){if($=e.charAt(v),c=$,$===C_TICK$2){for(o=1;e.charAt(v+1)===C_TICK$2;)c+=$,v++,o++;n?o>=n&&(n=0):n=o}else if($===C_BACKSLASH$3)v++,c+=e.charAt(v);else if(n&&!S||$!==C_BRACKET_OPEN$3){if((!n||S)&&$===C_BRACKET_CLOSE$3){if(!m){if(!y)for(;v<g&&($=e.charAt(v+1),whitespace$7($));)c+=$,v++;if(e.charAt(v+1)!==C_PAREN_OPEN$2)return;c+=C_PAREN_OPEN$2,a=!0,v++;break}m--}}else m++;D+=c,c="",v++}if(a){for(d=D,q+=D+c,v++;v<g&&($=e.charAt(v),whitespace$7($));)q+=$,v++;if($=e.charAt(v),u=L?COMMONMARK_LINK_MARKERS:LINK_MARKERS,D="",i=q,$===C_LT$4){for(v++,i+=C_LT$4;v<g&&($=e.charAt(v))!==C_GT$3;){if(L&&"\n"===$)return;D+=$,v++}if(e.charAt(v)!==C_GT$3)return;q+=C_LT$4+D+C_GT$3,E=D,v++}else{for($=null,c="";v<g&&($=e.charAt(v),!c||!own$2.call(u,$));){if(whitespace$7($)){if(!y)break;c+=$}else{if($===C_PAREN_OPEN$2)m++;else if($===C_PAREN_CLOSE$3){if(0===m)break;m--}D+=c,c="",$===C_BACKSLASH$3&&(D+=C_BACKSLASH$3,$=e.charAt(++v)),D+=$}v++}E=D,v=(q+=D).length}for(D="";v<g&&($=e.charAt(v),whitespace$7($));)D+=$,v++;if($=e.charAt(v),q+=D,D&&own$2.call(u,$))if(v++,q+=$,D="",f=u[$],s=q,L){for(;v<g&&($=e.charAt(v))!==f;)$===C_BACKSLASH$3&&(D+=C_BACKSLASH$3,$=e.charAt(++v)),v++,D+=$;if(($=e.charAt(v))!==f)return;for(h=D,q+=D+$,v++;v<g&&($=e.charAt(v),whitespace$7($));)q+=$,v++}else for(c="";v<g;){if(($=e.charAt(v))===f)l&&(D+=f+c,c=""),l=!0;else if(l){if($===C_PAREN_CLOSE$3){q+=D+f+c,h=D;break}whitespace$7($)?c+=$:(D+=f+c+$,c="",l=!1)}else D+=$;v++}if(e.charAt(v)===C_PAREN_CLOSE$3)return!!t||(q+=C_PAREN_CLOSE$3,E=w.decode.raw(w.unescape(E),r(i).test().end),h&&(s=r(s).test().end,h=w.decode.raw(w.unescape(h),s)),A={type:p?"image":"link",title:h||null,url:E},p?A.alt=w.decode.raw(w.unescape(d),b)||null:(C=w.enterLink(),A.children=w.tokenizeInline(d,b),C()),r(q)(A))}}}function reference(r,e,t){var a,o,n,i,s,c,l,u,p=this,d=e.charAt(0),f=0,g=e.length,h="",m="",D=T_LINK,E=REFERENCE_TYPE_SHORTCUT;if("!"===d&&(D=T_IMAGE,m=d,d=e.charAt(++f)),d===C_BRACKET_OPEN$4){for(f++,m+=d,c="",p.options.footnotes&&D===T_LINK&&e.charAt(f)===C_CARET$1&&(m+=C_CARET$1,f++,D=T_FOOTNOTE),u=0;f<g;){if((d=e.charAt(f))===C_BRACKET_OPEN$4)l=!0,u++;else if(d===C_BRACKET_CLOSE$4){if(!u)break;u--}d===C_BACKSLASH$4&&(c+=C_BACKSLASH$4,d=e.charAt(++f)),c+=d,f++}if(h=c,a=c,(d=e.charAt(f))===C_BRACKET_CLOSE$4){for(f++,h+=d,c="";f<g&&(d=e.charAt(f),whitespace$8(d));)c+=d,f++;if(d=e.charAt(f),D!==T_FOOTNOTE&&d===C_BRACKET_OPEN$4){for(o="",c+=d,f++;f<g&&(d=e.charAt(f))!==C_BRACKET_OPEN$4&&d!==C_BRACKET_CLOSE$4;)d===C_BACKSLASH$4&&(o+=C_BACKSLASH$4,d=e.charAt(++f)),o+=d,f++;(d=e.charAt(f))===C_BRACKET_CLOSE$4?(E=o?REFERENCE_TYPE_FULL:REFERENCE_TYPE_COLLAPSED,c+=o+d,f++):o="",h+=c,c=""}else{if(!a)return;o=a}if(E===REFERENCE_TYPE_FULL||!l)return h=m+h,D===T_LINK&&p.inLink?null:!!t||(D===T_FOOTNOTE&&-1!==a.indexOf(" ")?r(h)({type:"footnote",children:this.tokenizeInline(a,r.now())}):(n=r.now(),n.column+=m.length,n.offset+=m.length,o=E===REFERENCE_TYPE_FULL?o:a,i={type:D+"Reference",identifier:normalize$3(o)},D!==T_LINK&&D!==T_IMAGE||(i.referenceType=E),D===T_LINK?(s=p.enterLink(),i.children=p.tokenizeInline(a,n),s()):D===T_IMAGE&&(i.alt=p.decode.raw(p.unescape(a),n)||null),r(h)(i)))}}}function locate$11(r,e){var t=r.indexOf("**",e),a=r.indexOf("__",e);return-1===a?t:-1===t?a:a<t?a:t}function strong(r,e,t){var a,o,n,i,s,c,l,u=this,p=0,d=e.charAt(p);if(!(d!==C_ASTERISK$2&&d!==C_UNDERSCORE$2||e.charAt(++p)!==d||(o=u.options.pedantic,n=d,s=n+n,c=e.length,p++,i="",d="",o&&whitespace$9(e.charAt(p)))))for(;p<c;){if(l=d,!((d=e.charAt(p))!==n||e.charAt(p+1)!==n||o&&whitespace$9(l))&&(d=e.charAt(p+2))!==n){if(!trim$6(i))return;return!!t||(a=r.now(),a.column+=2,a.offset+=2,r(s+i+s)({type:"strong",children:u.tokenizeInline(i,a)}))}o||"\\"!==d||(i+=d,d=e.charAt(++p)),i+=d,p++}}function wordCharacter(r){return re$2.test("number"==typeof r?fromCode$1(r):r.charAt(0))}function locate$13(r,e){var t=r.indexOf("*",e),a=r.indexOf("_",e);return-1===a?t:-1===t?a:a<t?a:t}function emphasis(r,e,t){var a,o,n,i,s,c,l,u=this,p=0,d=e.charAt(p);if(!(d!==C_ASTERISK$3&&d!==C_UNDERSCORE$3||(o=u.options.pedantic,s=d,n=d,c=e.length,p++,i="",d="",o&&whitespace$10(e.charAt(p)))))for(;p<c;){if(l=d,!((d=e.charAt(p))!==n||o&&whitespace$10(l))){if((d=e.charAt(++p))!==n){if(!trim$7(i)||l===n)return;if(!o&&n===C_UNDERSCORE$3&&word(d)){i+=n;continue}return!!t||(a=r.now(),a.column++,a.offset++,r(s+i+n)({type:"emphasis",children:u.tokenizeInline(i,a)}))}i+=n}o||"\\"!==d||(i+=d,d=e.charAt(++p)),i+=d,p++}}function locate$15(r,e){return r.indexOf("~~",e)}function strikethrough(r,e,t){var a,o,n,i=this,s="",c="",l="",u="";if(i.options.gfm&&e.charAt(0)===C_TILDE$1&&e.charAt(1)===C_TILDE$1&&!whitespace$11(e.charAt(2)))for(a=1,o=e.length,(n=r.now()).column+=2,n.offset+=2;++a<o;){if(!((s=e.charAt(a))!==C_TILDE$1||c!==C_TILDE$1||l&&whitespace$11(l)))return!!t||r(DOUBLE+u+DOUBLE)({type:"delete",children:i.tokenizeInline(u,n)});u+=c,l=c,c=s}}function locate$17(r,e){return r.indexOf("`",e)}function inlineCode(r,e,t){for(var a,o,n,i,s,c,l,u,p=e.length,d=0,f="",g="";d<p&&e.charAt(d)===C_TICK$3;)f+=C_TICK$3,d++;if(f){for(s=f,i=d,f="",u=e.charAt(d),n=0;d<p;){if(c=u,u=e.charAt(d+1),c===C_TICK$3?(n++,g+=c):(n=0,f+=c),n&&u!==C_TICK$3){if(n===i){s+=f+g,l=!0;break}f+=g,g=""}d++}if(!l){if(i%2!=0)return;f=""}if(t)return!0;for(a="",o="",p=f.length,d=-1;++d<p;)c=f.charAt(d),whitespace$12(c)?o+=c:(o&&(a&&(a+=o),o=""),a+=c);return r(s)({type:"inlineCode",value:a})}}function locate$19(r,e){for(var t=r.indexOf("\n",e);t>e&&" "===r.charAt(t-1);)t--;return t}function hardBreak(r,e,t){for(var a,o=e.length,n=-1,i="";++n<o;){if("\n"===(a=e.charAt(n))){if(n<MIN_BREAK_LENGTH)return;return!!t||(i+=a,r(i)({type:"break"}))}if(" "!==a)return;i+=a}}function text(r,e,t){var a,o,n,i,s,c,l,u,p,d,f=this;if(t)return!0;for(i=(a=f.inlineMethods).length,o=f.inlineTokenizers,n=-1,p=e.length;++n<i;)"text"!==(u=a[n])&&o[u]&&((l=o[u].locator)||r.file.fail("Missing locator: `"+u+"`"),-1!==(c=l.call(f,e,1))&&c<p&&(p=c));s=e.slice(0,p),d=r.now(),f.decode(s,d,function(e,t,a){r(a||e)({type:"text",value:e})})}function Parser$1(r,e){this.file=e,this.offset={},this.options=xtend$3(this.options),this.setOptions({}),this.inList=!1,this.inBlock=!1,this.inLink=!1,this.atStart=!0,this.toOffset=vfileLocation(e).toOffset,this.unescape=unescape(this,"escape"),this.decode=decode(this)}function keys(r){var e,t=[];for(e in r)t.push(e);return t}function parse$4(r){var e=unherit(Parser);e.prototype.options=xtend$1(e.prototype.options,this.data("settings"),r),this.Parser=e}function bail$1(r){if(r)throw r}function replaceExt(r,e){if("string"!=typeof r)return r;if(0===r.length)return r;var t=path$2.basename(r,path$2.extname(r))+e;return path$2.join(path$2.dirname(r),t)}function stringify$1(r){return r&&"object"==typeof r?own$5.call(r,"position")||own$5.call(r,"type")?location(r.position):own$5.call(r,"start")||own$5.call(r,"end")?location(r):own$5.call(r,"line")||own$5.call(r,"column")?position(r):null:null}function position(r){return r&&"object"==typeof r||(r={}),index$56(r.line)+":"+index$56(r.column)}function location(r){return r&&"object"==typeof r||(r={}),position(r.start)+"-"+position(r.end)}function index$56(r){return r&&"number"==typeof r?r:1}function isBuffer(r){return!!r.constructor&&"function"==typeof r.constructor.isBuffer&&r.constructor.isBuffer(r)}function isSlowBuffer(r){return"function"==typeof r.readFloatLE&&"function"==typeof r.slice&&isBuffer(r.slice(0,0))}function VFile(r){var e,t,a;if(r){if("string"==typeof r||buffer(r))r={contents:r};else if("message"in r&&"messages"in r)return r}else r={};if(!(this instanceof VFile))return new VFile(r);for(this.data={},this.messages=[],this.history=[],this.cwd=process.cwd(),t=-1,a=order$1.length;++t<a;)e=order$1[t],own$4.call(r,e)&&(this[e]=r[e]);for(e in r)-1===order$1.indexOf(e)&&(this[e]=r[e])}function toString(r){var e=this.contents||"";return buffer(e)?e.toString(r):String(e)}function message(r,e,t){var a,o,n=this.path,i=stringify(e)||"1:1";return a={start:{line:null,column:null},end:{line:null,column:null}},e&&e.position&&(e=e.position),e&&(e.start?(a=e,e=e.start):a.start=e),o=new VMessage(r.message||r),o.name=(n?n+":":"")+i,o.file=n||"",o.reason=r.message||r,o.line=e?e.line:null,o.column=e?e.column:null,o.location=a,o.ruleId=t||null,o.source=null,o.fatal=!1,r.stack&&(o.stack=r.stack),this.messages.push(o),o}function fail(){var r=this.message.apply(this,arguments);throw r.fatal=!0,r}function info(){var r=this.message.apply(this,arguments);return r.fatal=null,r}function VMessagePrototype(){}function VMessage(r){this.message=r}function assertPart(r,e){if(-1!==r.indexOf(path$1.sep))throw new Error("`"+e+"` cannot be a path: did not expect `"+path$1.sep+"`")}function assertNonEmpty(r,e){if(!r)throw new Error("`"+e+"` cannot be empty")}function assertPath(r,e){if(!r)throw new Error("Setting `"+e+"` requires `path` to be set too")}function trough$1(){var r=[],e={};return e.run=function(){function e(n){var i=r[++t],s=slice$1.call(arguments,0).slice(1),c=a.length,l=-1;if(n)o(n);else{for(;++l<c;)null!==s[l]&&void 0!==s[l]||(s[l]=a[l]);a=s,i?wrap$1(i,e).apply(null,a):o.apply(null,[null].concat(a))}}var t=-1,a=slice$1.call(arguments,0,-1),o=arguments[arguments.length-1];if("function"!=typeof o)throw new Error("Expected function as last argument, not "+o);e.apply(null,[null].concat(a))},e.use=function(t){if("function"!=typeof t)throw new Error("Expected `fn` to be a function, not "+t);return r.push(t),e},e}function wrap$1(r,e){function t(){o||(o=!0,e.apply(null,arguments))}function a(r){t(null,r)}var o;return function(){var e,n=slice$1.call(arguments,0),i=r.length>n.length;i&&n.push(t);try{e=r.apply(null,n)}catch(r){if(i&&o)throw r;return t(r)}i||(e&&"function"==typeof e.then?e.then(a,t):e instanceof Error?t(e):a(e))}}function isString(r){return"[object String]"===toString$1.call(r)}function pipelineParse(r,e){e.tree=r.parse(e.file)}function pipelineRun(r,e,t){r.run(e.tree,e.file,function(r,a,o){r?t(r):(e.tree=a,e.file=o,t())})}function pipelineStringify(r,e){e.file.contents=r.stringify(e.tree,e.file)}function unified$1(){function r(){for(var r=unified$1(),e=n.length,t=-1;++t<e;)r.use.apply(null,n[t]);return r.data(extend$1(!0,{},s)),r}function e(){var e,t,a,o;if(c)return r;for(;++l<n.length;)t=(e=n[l])[0],o=null,!1!==(a=e[1])&&(!0===a&&(e[1]=void 0),o=t.apply(r,e.slice(1)),func(o)&&i.use(o));return c=!0,l=1/0,r}function t(r){for(var e,t=n.length,a=-1;++a<t;)if((e=n[a])[0]===r)return e}function a(r,t,a){function o(e,o){i.run(r,vfile(t),function(t,n,i){n=n||r,t?o(t):e?e(n):a(null,n,i)})}if(assertNode(r),e(),!a&&func(t)&&(a=t,t=null),!a)return new Promise(o);o(null,a)}function o(t,a){function o(e,o){var n=vfile(t);pipeline.run(r,{file:n},function(r){r?o(r):e?e(n):a(null,n)})}if(e(),assertParser("process",r.Parser),assertCompiler("process",r.Compiler),!a)return new Promise(o);o(null,a)}var n=[],i=trough(),s={},c=!1,l=-1;return r.data=function(e,t){return string(e)?2===arguments.length?(assertUnfrozen("data",c),s[e]=t,r):own$3.call(s,e)&&s[e]||null:e?(assertUnfrozen("data",c),s=e,r):s},r.freeze=e,r.attachers=n,r.use=function(e){function a(r){i(r.plugins),r.settings&&(u=extend$1(u||{},r.settings))}function o(r){if(func(r))l(r);else{if("object"!=typeof r)throw new Error("Expected usable value, not `"+r+"`");"length"in r?l.apply(null,r):a(r)}}function i(r){var e,t;if(null===r||void 0===r);else{if(!("object"==typeof r&&"length"in r))throw new Error("Expected a list of plugins, not `"+r+"`");for(e=r.length,t=-1;++t<e;)o(r[t])}}function l(r,e){var a=t(r);a?(plain(a[1])&&plain(e)&&(e=extend$1(a[1],e)),a[1]=e):n.push(slice.call(arguments))}var u;if(assertUnfrozen("use",c),null===e||void 0===e);else if(func(e))l.apply(null,arguments);else{if("object"!=typeof e)throw new Error("Expected usable value, not `"+e+"`");"length"in e?i(e):a(e)}return u&&(s.settings=extend$1(s.settings||{},u)),r},r.parse=function(t){var a,o=vfile(t);return e(),a=r.Parser,assertParser("parse",a),newable(a)?new a(String(o),o).parse():a(String(o),o)},r.stringify=function(t,a){var o,n=vfile(a);return e(),o=r.Compiler,assertCompiler("stringify",o),assertNode(t),newable(o)?new o(t,n).compile():o(t,n)},r.run=a,r.runSync=function(r,e){var t,o=!1;return a(r,e,function(r,e){o=!0,bail(r),t=e}),assertDone("runSync","run",o),t},r.process=o,r.processSync=function(t){var a,n=!1;return e(),assertParser("processSync",r.Parser),assertCompiler("processSync",r.Compiler),a=vfile(t),o(a,function(r){n=!0,bail(r)}),assertDone("processSync","process",n),a},r}function newable(r){return func(r)&&keys$1(r.prototype)}function keys$1(r){var e;for(e in r)return!0;return!1}function assertParser(r,e){if(!func(e))throw new Error("Cannot `"+r+"` without `Parser`")}function assertCompiler(r,e){if(!func(e))throw new Error("Cannot `"+r+"` without `Compiler`")}function assertUnfrozen(r,e){if(e)throw new Error("Cannot invoke `"+r+"` on a frozen processor.\nCreate a new processor first, by invoking it: use `processor()` instead of `processor`.")}function assertNode(r){if(!r||!string(r.type))throw new Error("Expected node, got `"+r+"`")}function assertDone(r,e,t){if(!t)throw new Error("`"+r+"` finished async. Use `"+e+"` instead")}function get_regex(){return create_regex(character_ranges.concat(punctuation_ranges))}function create_regex(r){return new RegExp("["+r.map(get_bracket_content).reduce(function(r,e){return r+e})+"]","g")}function get_bracket_content(r){return get_escaped_unicode(r[0])+"-"+get_escaped_unicode(r[1])}function get_escaped_unicode(r){return"\\u"+r.toString(16)}function isExportDeclaration(r){if(r)switch(r.type){case"ExportDefaultDeclaration":case"ExportDefaultSpecifier":case"DeclareExportDeclaration":case"ExportNamedDeclaration":case"ExportAllDeclaration":return!0}return!1}function getParentExportDeclaration(r){const e=r.getParentNode();return"declaration"===r.getName()&&isExportDeclaration(e)?e:null}function getPenultimate(r){return r.length>1?r[r.length-2]:null}function getLast(r){return r.length>0?r[r.length-1]:null}function skip(r){return(e,t,a)=>{const o=a&&a.backwards;if(!1===t)return!1;const n=e.length;let i=t;for(;i>=0&&i<n;){const t=e.charAt(i);if(r instanceof RegExp){if(!r.test(t))return i}else if(-1===r.indexOf(t))return i;o?i--:i++}return(-1===i||i===n)&&i}}function skipInlineComment(r,e){if(!1===e)return!1;if("/"===r.charAt(e)&&"*"===r.charAt(e+1))for(let t=e+2;t<r.length;++t)if("*"===r.charAt(t)&&"/"===r.charAt(t+1))return t+2;return e}function skipTrailingComment(r,e){return!1!==e&&("/"===r.charAt(e)&&"/"===r.charAt(e+1)?skipEverythingButNewLine(r,e):e)}function skipNewline(r,e,t){const a=t&&t.backwards;if(!1===e)return!1;const o=r.charAt(e);if(a){if("\r"===r.charAt(e-1)&&"\n"===o)return e-2;if("\n"===o||"\r"===o||"\u2028"===o||"\u2029"===o)return e-1}else{if("\r"===o&&"\n"===r.charAt(e+1))return e+2;if("\n"===o||"\r"===o||"\u2028"===o||"\u2029"===o)return e+1}return e}function hasNewline(r,e,t){const a=skipSpaces(r,(t=t||{}).backwards?e-1:e,t);return a!==skipNewline(r,a,t)}function hasNewlineInRange(r,e,t){for(let a=e;a<t;++a)if("\n"===r.charAt(a))return!0;return!1}function isPreviousLineEmpty(r,e){let t=locStart(e)-1;return t=skipNewline(r,t=skipSpaces(r,t,{backwards:!0}),{backwards:!0}),(t=skipSpaces(r,t,{backwards:!0}))!==skipNewline(r,t,{backwards:!0})}function isNextLineEmptyAfterIndex(r,e){let t=null,a=e;for(;a!==t;)t=a,a=skipInlineComment(r,a=skipToLineEnd(r,a)),a=skipSpaces(r,a);return a=skipTrailingComment(r,a),a=skipNewline(r,a),hasNewline(r,a)}function isNextLineEmpty(r,e){return isNextLineEmptyAfterIndex(r,locEnd(e))}function getNextNonSpaceNonCommentCharacterIndex(r,e){let t=null,a=locEnd(e);for(;a!==t;)t=a,a=skipNewline(r,a=skipTrailingComment(r,a=skipInlineComment(r,a=skipSpaces(r,a))));return a}function getNextNonSpaceNonCommentCharacter(r,e){return r.charAt(getNextNonSpaceNonCommentCharacterIndex(r,e))}function hasSpaces(r,e,t){return skipSpaces(r,(t=t||{}).backwards?e-1:e,t)!==e}function locStart(r){return r.declaration&&r.declaration.decorators&&r.declaration.decorators.length>0?locStart(r.declaration.decorators[0]):r.decorators&&r.decorators.length>0?locStart(r.decorators[0]):r.__location?r.__location.startOffset:r.range?r.range[0]:"number"==typeof r.start?r.start:r.source?lineColumnToIndex(r.source.start,r.source.input.css)-1:r.loc?r.loc.start:void 0}function locEnd(r){const e=r.nodes&&getLast(r.nodes);e&&r.source&&!r.source.end&&(r=e);let t;return r.range?t=r.range[1]:"number"==typeof r.end?t=r.end:r.source&&(t=lineColumnToIndex(r.source.end,r.source.input.css)),r.__location?r.__location.endOffset:r.typeAnnotation?Math.max(t,locEnd(r.typeAnnotation)):r.loc&&!t?r.loc.end:t}function lineColumnToIndex(r,e){let t=0;for(let a=0;a<r.line-1;++a)if(-1===(t=e.indexOf("\n",t)+1))return-1;return t+r.column}function setLocStart(r,e){r.range?r.range[0]=e:r.start=e}function setLocEnd(r,e){r.range?r.range[1]=e:r.end=e}function getPrecedence(r){return PRECEDENCE[r]}function shouldFlatten(r,e){return getPrecedence(e)===getPrecedence(r)&&("**"!==r&&((!equalityOperators[r]||!equalityOperators[e])&&(!("%"===e&&multiplicativeOperators[r]||"%"===r&&multiplicativeOperators[e])&&(!bitshiftOperators[r]||!bitshiftOperators[e]))))}function isBitwiseOperator(r){return!!bitshiftOperators[r]||"|"===r||"^"===r||"&"===r}function startsWithNoLookaheadToken(r,e){switch((r=getLeftMost(r)).type){case"ObjectPattern":return!e;case"FunctionExpression":case"ClassExpression":return e;case"ObjectExpression":return!0;case"MemberExpression":return startsWithNoLookaheadToken(r.object,e);case"TaggedTemplateExpression":return"FunctionExpression"!==r.tag.type&&startsWithNoLookaheadToken(r.tag,e);case"CallExpression":return"FunctionExpression"!==r.callee.type&&startsWithNoLookaheadToken(r.callee,e);case"ConditionalExpression":return startsWithNoLookaheadToken(r.test,e);case"UpdateExpression":return!r.prefix&&startsWithNoLookaheadToken(r.argument,e);case"BindExpression":return r.object&&startsWithNoLookaheadToken(r.object,e);case"SequenceExpression":return startsWithNoLookaheadToken(r.expressions[0],e);case"TSAsExpression":return startsWithNoLookaheadToken(r.expression,e);default:return!1}}function getLeftMost(r){return r.left?getLeftMost(r.left):r}function hasBlockComments(r){return r.comments&&r.comments.some(isBlockComment)}function isBlockComment(r){return"Block"===r.type||"CommentBlock"===r.type}function hasClosureCompilerTypeCastComment(r,e){return e.comments&&e.comments.some(e=>e.leading&&isBlockComment(e)&&e.value.match(/^\*\s*@type\s*{[^}]+}\s*$/)&&"("===getNextNonSpaceNonCommentCharacter(r,e))}function getAlignmentSize(r,e,t){let a=0;for(let o=t=t||0;o<r.length;++o)"\t"===r[o]?a=a+e-a%e:a++;return a}function getIndentSize(r,e){const t=r.lastIndexOf("\n");return-1===t?0:getAlignmentSize(r.slice(t+1).match(/^[ \t]*/)[0],e)}function printString(r,e,t){const a=r.slice(1,-1),o={quote:'"',regex:/"/g},n={quote:"'",regex:/'/g},i=e.singleQuote?n:o,s=i===n?o:n;let c=!1,l=!1;a.includes(i.quote)||a.includes(s.quote)?c=(a.match(i.regex)||[]).length>(a.match(s.regex)||[]).length:l=!0;const u="json"===e.parser?o.quote:c?s.quote:i.quote;return t?l?u+a+u:r:makeString(a,u,!("css"===e.parser||"less"===e.parser||"scss"===e.parser))}function makeString(r,e,t){const a='"'===e?"'":'"',o=/\\([\s\S])|(['"])/g,n=r.replace(o,(r,o,n)=>o===a?o:n===e?"\\"+n:n||(t&&/^[^\\nrvtbfux\r\n\u2028\u2029"'0-7]$/.test(o)?o:"\\"+o));return e+n+e}function printNumber(r){return r.toLowerCase().replace(/^([+-]?[\d.]+e)(?:\+|(-))?0*(\d)/,"$1$2$3").replace(/^([+-]?[\d.]+)e[+-]?0+$/,"$1").replace(/^([+-])?\./,"$10.").replace(/(\.\d+?)0+(?=e|$)/,"$1").replace(/\.(?=e|$)/,"")}function getMaxContinuousCount(r,e){const t=r.match(new RegExp(`(${escapeStringRegexp(e)})+`,"g"));return null===t?0:t.reduce((r,t)=>Math.max(r,t.length/e.length),0)}function mapDoc(r,e){if(r.parts){const t=r.parts.map(r=>mapDoc(r,e));return e(Object.assign({},r,{parts:t}))}if(r.contents){const t=mapDoc(r.contents,e);return e(Object.assign({},r,{contents:t}))}return e(r)}function splitText$1(r){function e(r){const e=getLast(n);e&&"word"===e.type&&(e.kind===t&&r.kind===a&&!e.hasTrailingPunctuation||e.kind===a&&r.kind===t&&!r.hasLeadingPunctuation?n.push({type:"whitespace",value:" "}):function(t,a){return e.kind===t&&r.kind===a||e.kind===a&&r.kind===t}(t,o)||[e.value,r.value].some(r=>/\u3000/.test(r))||n.push({type:"whitespace",value:""})),n.push(r)}const t="non-cjk",a="cjk-character",o="cjk-punctuation",n=[];return r.replace(new RegExp(`(${cjkPattern})\n(${cjkPattern})`,"g"),"$1$2").split(/([ \t\n]+)/).forEach((r,i,s)=>{i%2!=1?(0!==i&&i!==s.length-1||""!==r)&&r.split(new RegExp(`(${cjkPattern})`)).forEach((r,n,i)=>{(0!==n&&n!==i.length-1||""!==r)&&(n%2!=0?e(punctuationRegex.test(r)?{type:"word",value:r,kind:o,hasLeadingPunctuation:!0,hasTrailingPunctuation:!0}:{type:"word",value:r,kind:a,hasLeadingPunctuation:!1,hasTrailingPunctuation:!1}):""!==r&&e({type:"word",value:r,kind:t,hasLeadingPunctuation:punctuationRegex.test(r[0]),hasTrailingPunctuation:punctuationRegex.test(getLast(r))}))}):n.push({type:"whitespace",value:/\n/.test(r)?"\n":" "})}),n}function getStringWidth(r){return r?stringWidth(r.replace(emojiRegex,"  ")):0}function parse(r){const e=unified().use(remarkParse,{footnotes:!0,commonmark:!0}).use(remarkFrontmatter,["yaml","toml"]).use(restoreUnescapedCharacter(r)).use(mergeContinuousTexts).use(transformInlineCode).use(splitText);return e.runSync(e.parse(r))}function map(r,e){return function r(t,a,o){const n=Object.assign({},e(t,a,o));return n.children&&(n.children=n.children.map((e,t)=>r(e,t,n))),n}(r,null,null)}function transformInlineCode(){return r=>map(r,r=>"inlineCode"!==r.type?r:Object.assign({},r,{value:r.value.replace(/\s+/g," ")}))}function restoreUnescapedCharacter(r){return()=>e=>map(e,e=>"text"!==e.type?e:Object.assign({},e,{value:"*"!==e.value&&"_"!==e.value&&1===e.value.length&&e.position.end.offset-e.position.start.offset>1?r.slice(e.position.start.offset,e.position.end.offset):e.value}))}function mergeContinuousTexts(){return r=>map(r,r=>{if(!r.children)return r;const e=r.children.reduce((r,e)=>{const t=r[r.length-1];return t&&"text"===t.type&&"text"===e.type?r.splice(-1,1,{type:"text",value:t.value+e.value,position:{start:t.position.start,end:e.position.end}}):r.push(e),r},[]);return Object.assign({},r,{children:e})})}function splitText(){return r=>map(r,(r,e,t)=>{if("text"!==r.type)return r;let a=r.value;return"paragraph"===t.type&&(0===e&&(a=a.trimLeft()),e===t.children.length-1&&(a=a.trimRight())),{type:"sentence",position:r.position,children:util$1.splitText(a)}})}var util=_interopDefault(require("util")),path=_interopDefault(require("path")),immutable=extend,hasOwnProperty=Object.prototype.hasOwnProperty,format=createCommonjsModule(function(r){!function(){function e(r){for(var e,t,a,o,n=1,i=[].slice.call(arguments),s=0,c=r.length,l="",u=!1,p=!1,d=function(){return i[n++]};s<c;++s)if(e=r[s],u)switch(u=!1,"."==e?(p=!1,e=r[++s]):"0"==e&&"."==r[s+1]?(p=!0,e=r[s+=2]):p=!0,o=function(){for(var t="";/\d/.test(r[s]);)t+=r[s++],e=r[s];return t.length>0?parseInt(t):null}(),e){case"b":l+=parseInt(d(),10).toString(2);break;case"c":"string"==typeof(t=d())||t instanceof String?l+=t:l+=String.fromCharCode(parseInt(t,10));break;case"d":l+=parseInt(d(),10);break;case"f":a=String(parseFloat(d()).toFixed(o||6)),l+=p?a:a.replace(/^0/,"");break;case"j":l+=JSON.stringify(d());break;case"o":l+="0"+parseInt(d(),10).toString(8);break;case"s":l+=d();break;case"x":l+="0x"+parseInt(d(),10).toString(16);break;case"X":l+="0x"+parseInt(d(),10).toString(16).toUpperCase();break;default:l+=e}else"%"===e?u=!0:l+=e;return l}var t;(t=r.exports=e).format=e,t.vsprintf=function(r,t){return e.apply(null,[r].concat(t))},"undefined"!=typeof console&&"function"==typeof console.log&&(t.printf=function(){console.log(e.apply(null,arguments))})}()}),formatter=format,fault$1=create(Error),index$2=fault$1;fault$1.eval=create(EvalError),fault$1.range=create(RangeError),fault$1.reference=create(ReferenceError),fault$1.syntax=create(SyntaxError),fault$1.type=create(TypeError),fault$1.uri=create(URIError),fault$1.create=create;var fault=index$2,matters_1=matters$1,own={}.hasOwnProperty,markers={yaml:"-",toml:"+"},parse$2=create$1,compile$1=create$2,xtend=immutable,matters=matters_1,parse$1=parse$2,compile=compile$1,index=frontmatter,inherits_browser=createCommonjsModule(function(r){"function"==typeof Object.create?r.exports=function(r,e){r.super_=e,r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}})}:r.exports=function(r,e){r.super_=e;var t=function(){};t.prototype=e.prototype,r.prototype=new t,r.prototype.constructor=r}}),inherits$1=createCommonjsModule(function(r){try{var e=util;if("function"!=typeof e.inherits)throw"";r.exports=e.inherits}catch(e){r.exports=inherits_browser}}),xtend$2=immutable,inherits=inherits$1,index$6=unherit$1,index$8=factory,index$10=factory$1,_unescape=factory$2,AEli="Æ",AElig="Æ",AM="&",AMP="&",Aacut="Á",Aacute="Á",Abreve="Ă",Acir="Â",Acirc="Â",Acy="А",Afr="𝔄",Agrav="À",Agrave="À",Alpha="Α",Amacr="Ā",And="⩓",Aogon="Ą",Aopf="𝔸",ApplyFunction="⁡",Arin="Å",Aring="Å",Ascr="𝒜",Assign="≔",Atild="Ã",Atilde="Ã",Aum="Ä",Auml="Ä",Backslash="∖",Barv="⫧",Barwed="⌆",Bcy="Б",Because="∵",Bernoullis="ℬ",Beta="Β",Bfr="𝔅",Bopf="𝔹",Breve="˘",Bscr="ℬ",Bumpeq="≎",CHcy="Ч",COP="©",COPY="©",Cacute="Ć",Cap="⋒",CapitalDifferentialD="ⅅ",Cayleys="ℭ",Ccaron="Č",Ccedi="Ç",Ccedil="Ç",Ccirc="Ĉ",Cconint="∰",Cdot="Ċ",Cedilla="¸",CenterDot="·",Cfr="ℭ",Chi="Χ",CircleDot="⊙",CircleMinus="⊖",CirclePlus="⊕",CircleTimes="⊗",ClockwiseContourIntegral="∲",CloseCurlyDoubleQuote="”",CloseCurlyQuote="’",Colon="∷",Colone="⩴",Congruent="≡",Conint="∯",ContourIntegral="∮",Copf="ℂ",Coproduct="∐",CounterClockwiseContourIntegral="∳",Cross="⨯",Cscr="𝒞",Cup="⋓",CupCap="≍",DD="ⅅ",DDotrahd="⤑",DJcy="Ђ",DScy="Ѕ",DZcy="Џ",Dagger="‡",Darr="↡",Dashv="⫤",Dcaron="Ď",Dcy="Д",Del="∇",Delta="Δ",Dfr="𝔇",DiacriticalAcute="´",DiacriticalDot="˙",DiacriticalDoubleAcute="˝",DiacriticalGrave="`",DiacriticalTilde="˜",Diamond="⋄",DifferentialD="ⅆ",Dopf="𝔻",Dot="¨",DotDot="⃜",DotEqual="≐",DoubleContourIntegral="∯",DoubleDot="¨",DoubleDownArrow="⇓",DoubleLeftArrow="⇐",DoubleLeftRightArrow="⇔",DoubleLeftTee="⫤",DoubleLongLeftArrow="⟸",DoubleLongLeftRightArrow="⟺",DoubleLongRightArrow="⟹",DoubleRightArrow="⇒",DoubleRightTee="⊨",DoubleUpArrow="⇑",DoubleUpDownArrow="⇕",DoubleVerticalBar="∥",DownArrow="↓",DownArrowBar="⤓",DownArrowUpArrow="⇵",DownBreve="̑",DownLeftRightVector="⥐",DownLeftTeeVector="⥞",DownLeftVector="↽",DownLeftVectorBar="⥖",DownRightTeeVector="⥟",DownRightVector="⇁",DownRightVectorBar="⥗",DownTee="⊤",DownTeeArrow="↧",Downarrow="⇓",Dscr="𝒟",Dstrok="Đ",ENG="Ŋ",ET="Ð",ETH="Ð",Eacut="É",Eacute="É",Ecaron="Ě",Ecir="Ê",Ecirc="Ê",Ecy="Э",Edot="Ė",Efr="𝔈",Egrav="È",Egrave="È",Element="∈",Emacr="Ē",EmptySmallSquare="◻",EmptyVerySmallSquare="▫",Eogon="Ę",Eopf="𝔼",Epsilon="Ε",Equal="⩵",EqualTilde="≂",Equilibrium="⇌",Escr="ℰ",Esim="⩳",Eta="Η",Eum="Ë",Euml="Ë",Exists="∃",ExponentialE="ⅇ",Fcy="Ф",Ffr="𝔉",FilledSmallSquare="◼",FilledVerySmallSquare="▪",Fopf="𝔽",ForAll="∀",Fouriertrf="ℱ",Fscr="ℱ",GJcy="Ѓ",G=">",GT=">",Gamma="Γ",Gammad="Ϝ",Gbreve="Ğ",Gcedil="Ģ",Gcirc="Ĝ",Gcy="Г",Gdot="Ġ",Gfr="𝔊",Gg="⋙",Gopf="𝔾",GreaterEqual="≥",GreaterEqualLess="⋛",GreaterFullEqual="≧",GreaterGreater="⪢",GreaterLess="≷",GreaterSlantEqual="⩾",GreaterTilde="≳",Gscr="𝒢",Gt="≫",HARDcy="Ъ",Hacek="ˇ",Hat="^",Hcirc="Ĥ",Hfr="ℌ",HilbertSpace="ℋ",Hopf="ℍ",HorizontalLine="─",Hscr="ℋ",Hstrok="Ħ",HumpDownHump="≎",HumpEqual="≏",IEcy="Е",IJlig="Ĳ",IOcy="Ё",Iacut="Í",Iacute="Í",Icir="Î",Icirc="Î",Icy="И",Idot="İ",Ifr="ℑ",Igrav="Ì",Igrave="Ì",Im="ℑ",Imacr="Ī",ImaginaryI="ⅈ",Implies="⇒",Int="∬",Integral="∫",Intersection="⋂",InvisibleComma="⁣",InvisibleTimes="⁢",Iogon="Į",Iopf="𝕀",Iota="Ι",Iscr="ℐ",Itilde="Ĩ",Iukcy="І",Ium="Ï",Iuml="Ï",Jcirc="Ĵ",Jcy="Й",Jfr="𝔍",Jopf="𝕁",Jscr="𝒥",Jsercy="Ј",Jukcy="Є",KHcy="Х",KJcy="Ќ",Kappa="Κ",Kcedil="Ķ",Kcy="К",Kfr="𝔎",Kopf="𝕂",Kscr="𝒦",LJcy="Љ",L="<",LT="<",Lacute="Ĺ",Lambda="Λ",Lang="⟪",Laplacetrf="ℒ",Larr="↞",Lcaron="Ľ",Lcedil="Ļ",Lcy="Л",LeftAngleBracket="⟨",LeftArrow="←",LeftArrowBar="⇤",LeftArrowRightArrow="⇆",LeftCeiling="⌈",LeftDoubleBracket="⟦",LeftDownTeeVector="⥡",LeftDownVector="⇃",LeftDownVectorBar="⥙",LeftFloor="⌊",LeftRightArrow="↔",LeftRightVector="⥎",LeftTee="⊣",LeftTeeArrow="↤",LeftTeeVector="⥚",LeftTriangle="⊲",LeftTriangleBar="⧏",LeftTriangleEqual="⊴",LeftUpDownVector="⥑",LeftUpTeeVector="⥠",LeftUpVector="↿",LeftUpVectorBar="⥘",LeftVector="↼",LeftVectorBar="⥒",Leftarrow="⇐",Leftrightarrow="⇔",LessEqualGreater="⋚",LessFullEqual="≦",LessGreater="≶",LessLess="⪡",LessSlantEqual="⩽",LessTilde="≲",Lfr="𝔏",Ll="⋘",Lleftarrow="⇚",Lmidot="Ŀ",LongLeftArrow="⟵",LongLeftRightArrow="⟷",LongRightArrow="⟶",Longleftarrow="⟸",Longleftrightarrow="⟺",Longrightarrow="⟹",Lopf="𝕃",LowerLeftArrow="↙",LowerRightArrow="↘",Lscr="ℒ",Lsh="↰",Lstrok="Ł",Lt="≪",Mcy="М",MediumSpace=" ",Mellintrf="ℳ",Mfr="𝔐",MinusPlus="∓",Mopf="𝕄",Mscr="ℳ",Mu="Μ",NJcy="Њ",Nacute="Ń",Ncaron="Ň",Ncedil="Ņ",Ncy="Н",NegativeMediumSpace="​",NegativeThickSpace="​",NegativeThinSpace="​",NegativeVeryThinSpace="​",NestedGreaterGreater="≫",NestedLessLess="≪",NewLine="\n",Nfr="𝔑",NoBreak="⁠",NonBreakingSpace=" ",Nopf="ℕ",Not="⫬",NotCongruent="≢",NotCupCap="≭",NotDoubleVerticalBar="∦",NotElement="∉",NotEqual="≠",NotEqualTilde="≂̸",NotExists="∄",NotGreater="≯",NotGreaterEqual="≱",NotGreaterFullEqual="≧̸",NotGreaterGreater="≫̸",NotGreaterLess="≹",NotGreaterSlantEqual="⩾̸",NotGreaterTilde="≵",NotHumpDownHump="≎̸",NotHumpEqual="≏̸",NotLeftTriangle="⋪",NotLeftTriangleBar="⧏̸",NotLeftTriangleEqual="⋬",NotLess="≮",NotLessEqual="≰",NotLessGreater="≸",NotLessLess="≪̸",NotLessSlantEqual="⩽̸",NotLessTilde="≴",NotNestedGreaterGreater="⪢̸",NotNestedLessLess="⪡̸",NotPrecedes="⊀",NotPrecedesEqual="⪯̸",NotPrecedesSlantEqual="⋠",NotReverseElement="∌",NotRightTriangle="⋫",NotRightTriangleBar="⧐̸",NotRightTriangleEqual="⋭",NotSquareSubset="⊏̸",NotSquareSubsetEqual="⋢",NotSquareSuperset="⊐̸",NotSquareSupersetEqual="⋣",NotSubset="⊂⃒",NotSubsetEqual="⊈",NotSucceeds="⊁",NotSucceedsEqual="⪰̸",NotSucceedsSlantEqual="⋡",NotSucceedsTilde="≿̸",NotSuperset="⊃⃒",NotSupersetEqual="⊉",NotTilde="≁",NotTildeEqual="≄",NotTildeFullEqual="≇",NotTildeTilde="≉",NotVerticalBar="∤",Nscr="𝒩",Ntild="Ñ",Ntilde="Ñ",Nu="Ν",OElig="Œ",Oacut="Ó",Oacute="Ó",Ocir="Ô",Ocirc="Ô",Ocy="О",Odblac="Ő",Ofr="𝔒",Ograv="Ò",Ograve="Ò",Omacr="Ō",Omega="Ω",Omicron="Ο",Oopf="𝕆",OpenCurlyDoubleQuote="“",OpenCurlyQuote="‘",Or="⩔",Oscr="𝒪",Oslas="Ø",Oslash="Ø",Otild="Õ",Otilde="Õ",Otimes="⨷",Oum="Ö",Ouml="Ö",OverBar="‾",OverBrace="⏞",OverBracket="⎴",OverParenthesis="⏜",PartialD="∂",Pcy="П",Pfr="𝔓",Phi="Φ",Pi="Π",PlusMinus="±",Poincareplane="ℌ",Popf="ℙ",Pr="⪻",Precedes="≺",PrecedesEqual="⪯",PrecedesSlantEqual="≼",PrecedesTilde="≾",Prime="″",Product="∏",Proportion="∷",Proportional="∝",Pscr="𝒫",Psi="Ψ",QUO='"',QUOT='"',Qfr="𝔔",Qopf="ℚ",Qscr="𝒬",RBarr="⤐",RE="®",REG="®",Racute="Ŕ",Rang="⟫",Rarr="↠",Rarrtl="⤖",Rcaron="Ř",Rcedil="Ŗ",Rcy="Р",Re="ℜ",ReverseElement="∋",ReverseEquilibrium="⇋",ReverseUpEquilibrium="⥯",Rfr="ℜ",Rho="Ρ",RightAngleBracket="⟩",RightArrow="→",RightArrowBar="⇥",RightArrowLeftArrow="⇄",RightCeiling="⌉",RightDoubleBracket="⟧",RightDownTeeVector="⥝",RightDownVector="⇂",RightDownVectorBar="⥕",RightFloor="⌋",RightTee="⊢",RightTeeArrow="↦",RightTeeVector="⥛",RightTriangle="⊳",RightTriangleBar="⧐",RightTriangleEqual="⊵",RightUpDownVector="⥏",RightUpTeeVector="⥜",RightUpVector="↾",RightUpVectorBar="⥔",RightVector="⇀",RightVectorBar="⥓",Rightarrow="⇒",Ropf="ℝ",RoundImplies="⥰",Rrightarrow="⇛",Rscr="ℛ",Rsh="↱",RuleDelayed="⧴",SHCHcy="Щ",SHcy="Ш",SOFTcy="Ь",Sacute="Ś",Sc="⪼",Scaron="Š",Scedil="Ş",Scirc="Ŝ",Scy="С",Sfr="𝔖",ShortDownArrow="↓",ShortLeftArrow="←",ShortRightArrow="→",ShortUpArrow="↑",Sigma="Σ",SmallCircle="∘",Sopf="𝕊",Sqrt="√",Square="□",SquareIntersection="⊓",SquareSubset="⊏",SquareSubsetEqual="⊑",SquareSuperset="⊐",SquareSupersetEqual="⊒",SquareUnion="⊔",Sscr="𝒮",Star="⋆",Sub="⋐",Subset="⋐",SubsetEqual="⊆",Succeeds="≻",SucceedsEqual="⪰",SucceedsSlantEqual="≽",SucceedsTilde="≿",SuchThat="∋",Sum="∑",Sup="⋑",Superset="⊃",SupersetEqual="⊇",Supset="⋑",THOR="Þ",THORN="Þ",TRADE="™",TSHcy="Ћ",TScy="Ц",Tab="\t",Tau="Τ",Tcaron="Ť",Tcedil="Ţ",Tcy="Т",Tfr="𝔗",Therefore="∴",Theta="Θ",ThickSpace="  ",ThinSpace=" ",Tilde="∼",TildeEqual="≃",TildeFullEqual="≅",TildeTilde="≈",Topf="𝕋",TripleDot="⃛",Tscr="𝒯",Tstrok="Ŧ",Uacut="Ú",Uacute="Ú",Uarr="↟",Uarrocir="⥉",Ubrcy="Ў",Ubreve="Ŭ",Ucir="Û",Ucirc="Û",Ucy="У",Udblac="Ű",Ufr="𝔘",Ugrav="Ù",Ugrave="Ù",Umacr="Ū",UnderBar="_",UnderBrace="⏟",UnderBracket="⎵",UnderParenthesis="⏝",Union="⋃",UnionPlus="⊎",Uogon="Ų",Uopf="𝕌",UpArrow="↑",UpArrowBar="⤒",UpArrowDownArrow="⇅",UpDownArrow="↕",UpEquilibrium="⥮",UpTee="⊥",UpTeeArrow="↥",Uparrow="⇑",Updownarrow="⇕",UpperLeftArrow="↖",UpperRightArrow="↗",Upsi="ϒ",Upsilon="Υ",Uring="Ů",Uscr="𝒰",Utilde="Ũ",Uum="Ü",Uuml="Ü",VDash="⊫",Vbar="⫫",Vcy="В",Vdash="⊩",Vdashl="⫦",Vee="⋁",Verbar="‖",Vert="‖",VerticalBar="∣",VerticalLine="|",VerticalSeparator="❘",VerticalTilde="≀",VeryThinSpace=" ",Vfr="𝔙",Vopf="𝕍",Vscr="𝒱",Vvdash="⊪",Wcirc="Ŵ",Wedge="⋀",Wfr="𝔚",Wopf="𝕎",Wscr="𝒲",Xfr="𝔛",Xi="Ξ",Xopf="𝕏",Xscr="𝒳",YAcy="Я",YIcy="Ї",YUcy="Ю",Yacut="Ý",Yacute="Ý",Ycirc="Ŷ",Ycy="Ы",Yfr="𝔜",Yopf="𝕐",Yscr="𝒴",Yuml="Ÿ",ZHcy="Ж",Zacute="Ź",Zcaron="Ž",Zcy="З",Zdot="Ż",ZeroWidthSpace="​",Zeta="Ζ",Zfr="ℨ",Zopf="ℤ",Zscr="𝒵",aacut="á",aacute="á",abreve="ă",ac="∾",acE="∾̳",acd="∿",acir="â",acirc="â",acut="´",acute="´",acy="а",aeli="æ",aelig="æ",af="⁡",afr="𝔞",agrav="à",agrave="à",alefsym="ℵ",aleph="ℵ",alpha="α",amacr="ā",amalg="⨿",am="&",amp="&",and="∧",andand="⩕",andd="⩜",andslope="⩘",andv="⩚",ang="∠",ange="⦤",angle="∠",angmsd="∡",angmsdaa="⦨",angmsdab="⦩",angmsdac="⦪",angmsdad="⦫",angmsdae="⦬",angmsdaf="⦭",angmsdag="⦮",angmsdah="⦯",angrt="∟",angrtvb="⊾",angrtvbd="⦝",angsph="∢",angst="Å",angzarr="⍼",aogon="ą",aopf="𝕒",ap="≈",apE="⩰",apacir="⩯",ape="≊",apid="≋",apos="'",approx="≈",approxeq="≊",arin="å",aring="å",ascr="𝒶",ast="*",asymp="≈",asympeq="≍",atild="ã",atilde="ã",aum="ä",auml="ä",awconint="∳",awint="⨑",bNot="⫭",backcong="≌",backepsilon="϶",backprime="‵",backsim="∽",backsimeq="⋍",barvee="⊽",barwed="⌅",barwedge="⌅",bbrk="⎵",bbrktbrk="⎶",bcong="≌",bcy="б",bdquo="„",becaus="∵",because="∵",bemptyv="⦰",bepsi="϶",bernou="ℬ",beta="β",beth="ℶ",between="≬",bfr="𝔟",bigcap="⋂",bigcirc="◯",bigcup="⋃",bigodot="⨀",bigoplus="⨁",bigotimes="⨂",bigsqcup="⨆",bigstar="★",bigtriangledown="▽",bigtriangleup="△",biguplus="⨄",bigvee="⋁",bigwedge="⋀",bkarow="⤍",blacklozenge="⧫",blacksquare="▪",blacktriangle="▴",blacktriangledown="▾",blacktriangleleft="◂",blacktriangleright="▸",blank="␣",blk12="▒",blk14="░",blk34="▓",block="█",bne="=⃥",bnequiv="≡⃥",bnot="⌐",bopf="𝕓",bot="⊥",bottom="⊥",bowtie="⋈",boxDL="╗",boxDR="╔",boxDl="╖",boxDr="╓",boxH="═",boxHD="╦",boxHU="╩",boxHd="╤",boxHu="╧",boxUL="╝",boxUR="╚",boxUl="╜",boxUr="╙",boxV="║",boxVH="╬",boxVL="╣",boxVR="╠",boxVh="╫",boxVl="╢",boxVr="╟",boxbox="⧉",boxdL="╕",boxdR="╒",boxdl="┐",boxdr="┌",boxh="─",boxhD="╥",boxhU="╨",boxhd="┬",boxhu="┴",boxminus="⊟",boxplus="⊞",boxtimes="⊠",boxuL="╛",boxuR="╘",boxul="┘",boxur="└",boxv="│",boxvH="╪",boxvL="╡",boxvR="╞",boxvh="┼",boxvl="┤",boxvr="├",bprime="‵",breve="˘",brvba="¦",brvbar="¦",bscr="𝒷",bsemi="⁏",bsim="∽",bsime="⋍",bsol="\\",bsolb="⧅",bsolhsub="⟈",bull="•",bullet="•",bump="≎",bumpE="⪮",bumpe="≏",bumpeq="≏",cacute="ć",cap="∩",capand="⩄",capbrcup="⩉",capcap="⩋",capcup="⩇",capdot="⩀",caps="∩︀",caret="⁁",caron="ˇ",ccaps="⩍",ccaron="č",ccedi="ç",ccedil="ç",ccirc="ĉ",ccups="⩌",ccupssm="⩐",cdot="ċ",cedi="¸",cedil="¸",cemptyv="⦲",cen="¢",cent="¢",centerdot="·",cfr="𝔠",chcy="ч",check="✓",checkmark="✓",chi="χ",cir="○",cirE="⧃",circ="ˆ",circeq="≗",circlearrowleft="↺",circlearrowright="↻",circledR="®",circledS="Ⓢ",circledast="⊛",circledcirc="⊚",circleddash="⊝",cire="≗",cirfnint="⨐",cirmid="⫯",cirscir="⧂",clubs="♣",clubsuit="♣",colon=":",colone="≔",coloneq="≔",comma=",",commat="@",comp="∁",compfn="∘",complement="∁",complexes="ℂ",cong="≅",congdot="⩭",conint="∮",copf="𝕔",coprod="∐",cop="©",copy="©",copysr="℗",crarr="↵",cross="✗",cscr="𝒸",csub="⫏",csube="⫑",csup="⫐",csupe="⫒",ctdot="⋯",cudarrl="⤸",cudarrr="⤵",cuepr="⋞",cuesc="⋟",cularr="↶",cularrp="⤽",cup="∪",cupbrcap="⩈",cupcap="⩆",cupcup="⩊",cupdot="⊍",cupor="⩅",cups="∪︀",curarr="↷",curarrm="⤼",curlyeqprec="⋞",curlyeqsucc="⋟",curlyvee="⋎",curlywedge="⋏",curre="¤",curren="¤",curvearrowleft="↶",curvearrowright="↷",cuvee="⋎",cuwed="⋏",cwconint="∲",cwint="∱",cylcty="⌭",dArr="⇓",dHar="⥥",dagger="†",daleth="ℸ",darr="↓",dash="‐",dashv="⊣",dbkarow="⤏",dblac="˝",dcaron="ď",dcy="д",dd="ⅆ",ddagger="‡",ddarr="⇊",ddotseq="⩷",de="°",deg="°",delta="δ",demptyv="⦱",dfisht="⥿",dfr="𝔡",dharl="⇃",dharr="⇂",diam="⋄",diamond="⋄",diamondsuit="♦",diams="♦",die="¨",digamma="ϝ",disin="⋲",div="÷",divid="÷",divide="÷",divideontimes="⋇",divonx="⋇",djcy="ђ",dlcorn="⌞",dlcrop="⌍",dollar="$",dopf="𝕕",dot="˙",doteq="≐",doteqdot="≑",dotminus="∸",dotplus="∔",dotsquare="⊡",doublebarwedge="⌆",downarrow="↓",downdownarrows="⇊",downharpoonleft="⇃",downharpoonright="⇂",drbkarow="⤐",drcorn="⌟",drcrop="⌌",dscr="𝒹",dscy="ѕ",dsol="⧶",dstrok="đ",dtdot="⋱",dtri="▿",dtrif="▾",duarr="⇵",duhar="⥯",dwangle="⦦",dzcy="џ",dzigrarr="⟿",eDDot="⩷",eDot="≑",eacut="é",eacute="é",easter="⩮",ecaron="ě",ecir="ê",ecirc="ê",ecolon="≕",ecy="э",edot="ė",ee="ⅇ",efDot="≒",efr="𝔢",eg="⪚",egrav="è",egrave="è",egs="⪖",egsdot="⪘",el="⪙",elinters="⏧",ell="ℓ",els="⪕",elsdot="⪗",emacr="ē",empty="∅",emptyset="∅",emptyv="∅",emsp13=" ",emsp14=" ",emsp=" ",eng="ŋ",ensp=" ",eogon="ę",eopf="𝕖",epar="⋕",eparsl="⧣",eplus="⩱",epsi="ε",epsilon="ε",epsiv="ϵ",eqcirc="≖",eqcolon="≕",eqsim="≂",eqslantgtr="⪖",eqslantless="⪕",equals="=",equest="≟",equiv="≡",equivDD="⩸",eqvparsl="⧥",erDot="≓",erarr="⥱",escr="ℯ",esdot="≐",esim="≂",eta="η",et="ð",eth="ð",eum="ë",euml="ë",euro="€",excl="!",exist="∃",expectation="ℰ",exponentiale="ⅇ",fallingdotseq="≒",fcy="ф",female="♀",ffilig="ﬃ",fflig="ﬀ",ffllig="ﬄ",ffr="𝔣",filig="ﬁ",fjlig="fj",flat="♭",fllig="ﬂ",fltns="▱",fnof="ƒ",fopf="𝕗",forall="∀",fork="⋔",forkv="⫙",fpartint="⨍",frac1="¼",frac12="½",frac13="⅓",frac14="¼",frac15="⅕",frac16="⅙",frac18="⅛",frac23="⅔",frac25="⅖",frac3="¾",frac34="¾",frac35="⅗",frac38="⅜",frac45="⅘",frac56="⅚",frac58="⅝",frac78="⅞",frasl="⁄",frown="⌢",fscr="𝒻",gE="≧",gEl="⪌",gacute="ǵ",gamma="γ",gammad="ϝ",gap="⪆",gbreve="ğ",gcirc="ĝ",gcy="г",gdot="ġ",ge="≥",gel="⋛",geq="≥",geqq="≧",geqslant="⩾",ges="⩾",gescc="⪩",gesdot="⪀",gesdoto="⪂",gesdotol="⪄",gesl="⋛︀",gesles="⪔",gfr="𝔤",gg="≫",ggg="⋙",gimel="ℷ",gjcy="ѓ",gl="≷",glE="⪒",gla="⪥",glj="⪤",gnE="≩",gnap="⪊",gnapprox="⪊",gne="⪈",gneq="⪈",gneqq="≩",gnsim="⋧",gopf="𝕘",grave="`",gscr="ℊ",gsim="≳",gsime="⪎",gsiml="⪐",g=">",gt=">",gtcc="⪧",gtcir="⩺",gtdot="⋗",gtlPar="⦕",gtquest="⩼",gtrapprox="⪆",gtrarr="⥸",gtrdot="⋗",gtreqless="⋛",gtreqqless="⪌",gtrless="≷",gtrsim="≳",gvertneqq="≩︀",gvnE="≩︀",hArr="⇔",hairsp=" ",half="½",hamilt="ℋ",hardcy="ъ",harr="↔",harrcir="⥈",harrw="↭",hbar="ℏ",hcirc="ĥ",hearts="♥",heartsuit="♥",hellip="…",hercon="⊹",hfr="𝔥",hksearow="⤥",hkswarow="⤦",hoarr="⇿",homtht="∻",hookleftarrow="↩",hookrightarrow="↪",hopf="𝕙",horbar="―",hscr="𝒽",hslash="ℏ",hstrok="ħ",hybull="⁃",hyphen="‐",iacut="í",iacute="í",ic="⁣",icir="î",icirc="î",icy="и",iecy="е",iexc="¡",iexcl="¡",iff="⇔",ifr="𝔦",igrav="ì",igrave="ì",ii="ⅈ",iiiint="⨌",iiint="∭",iinfin="⧜",iiota="℩",ijlig="ĳ",imacr="ī",image="ℑ",imagline="ℐ",imagpart="ℑ",imath="ı",imof="⊷",imped="Ƶ",incare="℅",infin="∞",infintie="⧝",inodot="ı",int="∫",intcal="⊺",integers="ℤ",intercal="⊺",intlarhk="⨗",intprod="⨼",iocy="ё",iogon="į",iopf="𝕚",iota="ι",iprod="⨼",iques="¿",iquest="¿",iscr="𝒾",isin="∈",isinE="⋹",isindot="⋵",isins="⋴",isinsv="⋳",isinv="∈",it="⁢",itilde="ĩ",iukcy="і",ium="ï",iuml="ï",jcirc="ĵ",jcy="й",jfr="𝔧",jmath="ȷ",jopf="𝕛",jscr="𝒿",jsercy="ј",jukcy="є",kappa="κ",kappav="ϰ",kcedil="ķ",kcy="к",kfr="𝔨",kgreen="ĸ",khcy="х",kjcy="ќ",kopf="𝕜",kscr="𝓀",lAarr="⇚",lArr="⇐",lAtail="⤛",lBarr="⤎",lE="≦",lEg="⪋",lHar="⥢",lacute="ĺ",laemptyv="⦴",lagran="ℒ",lambda="λ",lang="⟨",langd="⦑",langle="⟨",lap="⪅",laqu="«",laquo="«",larr="←",larrb="⇤",larrbfs="⤟",larrfs="⤝",larrhk="↩",larrlp="↫",larrpl="⤹",larrsim="⥳",larrtl="↢",lat="⪫",latail="⤙",late="⪭",lates="⪭︀",lbarr="⤌",lbbrk="❲",lbrace="{",lbrack="[",lbrke="⦋",lbrksld="⦏",lbrkslu="⦍",lcaron="ľ",lcedil="ļ",lceil="⌈",lcub="{",lcy="л",ldca="⤶",ldquo="“",ldquor="„",ldrdhar="⥧",ldrushar="⥋",ldsh="↲",le="≤",leftarrow="←",leftarrowtail="↢",leftharpoondown="↽",leftharpoonup="↼",leftleftarrows="⇇",leftrightarrow="↔",leftrightarrows="⇆",leftrightharpoons="⇋",leftrightsquigarrow="↭",leftthreetimes="⋋",leg="⋚",leq="≤",leqq="≦",leqslant="⩽",les="⩽",lescc="⪨",lesdot="⩿",lesdoto="⪁",lesdotor="⪃",lesg="⋚︀",lesges="⪓",lessapprox="⪅",lessdot="⋖",lesseqgtr="⋚",lesseqqgtr="⪋",lessgtr="≶",lesssim="≲",lfisht="⥼",lfloor="⌊",lfr="𝔩",lg="≶",lgE="⪑",lhard="↽",lharu="↼",lharul="⥪",lhblk="▄",ljcy="љ",ll="≪",llarr="⇇",llcorner="⌞",llhard="⥫",lltri="◺",lmidot="ŀ",lmoust="⎰",lmoustache="⎰",lnE="≨",lnap="⪉",lnapprox="⪉",lne="⪇",lneq="⪇",lneqq="≨",lnsim="⋦",loang="⟬",loarr="⇽",lobrk="⟦",longleftarrow="⟵",longleftrightarrow="⟷",longmapsto="⟼",longrightarrow="⟶",looparrowleft="↫",looparrowright="↬",lopar="⦅",lopf="𝕝",loplus="⨭",lotimes="⨴",lowast="∗",lowbar="_",loz="◊",lozenge="◊",lozf="⧫",lpar="(",lparlt="⦓",lrarr="⇆",lrcorner="⌟",lrhar="⇋",lrhard="⥭",lrm="‎",lrtri="⊿",lsaquo="‹",lscr="𝓁",lsh="↰",lsim="≲",lsime="⪍",lsimg="⪏",lsqb="[",lsquo="‘",lsquor="‚",lstrok="ł",l="<",lt="<",ltcc="⪦",ltcir="⩹",ltdot="⋖",lthree="⋋",ltimes="⋉",ltlarr="⥶",ltquest="⩻",ltrPar="⦖",ltri="◃",ltrie="⊴",ltrif="◂",lurdshar="⥊",luruhar="⥦",lvertneqq="≨︀",lvnE="≨︀",mDDot="∺",mac="¯",macr="¯",male="♂",malt="✠",maltese="✠",map$1="↦",mapsto="↦",mapstodown="↧",mapstoleft="↤",mapstoup="↥",marker="▮",mcomma="⨩",mcy="м",mdash="—",measuredangle="∡",mfr="𝔪",mho="℧",micr="µ",micro="µ",mid="∣",midast="*",midcir="⫰",middo="·",middot="·",minus="−",minusb="⊟",minusd="∸",minusdu="⨪",mlcp="⫛",mldr="…",mnplus="∓",models="⊧",mopf="𝕞",mp="∓",mscr="𝓂",mstpos="∾",mu="μ",multimap="⊸",mumap="⊸",nGg="⋙̸",nGt="≫⃒",nGtv="≫̸",nLeftarrow="⇍",nLeftrightarrow="⇎",nLl="⋘̸",nLt="≪⃒",nLtv="≪̸",nRightarrow="⇏",nVDash="⊯",nVdash="⊮",nabla="∇",nacute="ń",nang="∠⃒",nap="≉",napE="⩰̸",napid="≋̸",napos="ŉ",napprox="≉",natur="♮",natural="♮",naturals="ℕ",nbs=" ",nbsp=" ",nbump="≎̸",nbumpe="≏̸",ncap="⩃",ncaron="ň",ncedil="ņ",ncong="≇",ncongdot="⩭̸",ncup="⩂",ncy="н",ndash="–",ne="≠",neArr="⇗",nearhk="⤤",nearr="↗",nearrow="↗",nedot="≐̸",nequiv="≢",nesear="⤨",nesim="≂̸",nexist="∄",nexists="∄",nfr="𝔫",ngE="≧̸",nge="≱",ngeq="≱",ngeqq="≧̸",ngeqslant="⩾̸",nges="⩾̸",ngsim="≵",ngt="≯",ngtr="≯",nhArr="⇎",nharr="↮",nhpar="⫲",ni="∋",nis="⋼",nisd="⋺",niv="∋",njcy="њ",nlArr="⇍",nlE="≦̸",nlarr="↚",nldr="‥",nle="≰",nleftarrow="↚",nleftrightarrow="↮",nleq="≰",nleqq="≦̸",nleqslant="⩽̸",nles="⩽̸",nless="≮",nlsim="≴",nlt="≮",nltri="⋪",nltrie="⋬",nmid="∤",nopf="𝕟",no="¬",not="¬",notin="∉",notinE="⋹̸",notindot="⋵̸",notinva="∉",notinvb="⋷",notinvc="⋶",notni="∌",notniva="∌",notnivb="⋾",notnivc="⋽",npar="∦",nparallel="∦",nparsl="⫽⃥",npart="∂̸",npolint="⨔",npr="⊀",nprcue="⋠",npre="⪯̸",nprec="⊀",npreceq="⪯̸",nrArr="⇏",nrarr="↛",nrarrc="⤳̸",nrarrw="↝̸",nrightarrow="↛",nrtri="⋫",nrtrie="⋭",nsc="⊁",nsccue="⋡",nsce="⪰̸",nscr="𝓃",nshortmid="∤",nshortparallel="∦",nsim="≁",nsime="≄",nsimeq="≄",nsmid="∤",nspar="∦",nsqsube="⋢",nsqsupe="⋣",nsub="⊄",nsubE="⫅̸",nsube="⊈",nsubset="⊂⃒",nsubseteq="⊈",nsubseteqq="⫅̸",nsucc="⊁",nsucceq="⪰̸",nsup="⊅",nsupE="⫆̸",nsupe="⊉",nsupset="⊃⃒",nsupseteq="⊉",nsupseteqq="⫆̸",ntgl="≹",ntild="ñ",ntilde="ñ",ntlg="≸",ntriangleleft="⋪",ntrianglelefteq="⋬",ntriangleright="⋫",ntrianglerighteq="⋭",nu="ν",num="#",numero="№",numsp=" ",nvDash="⊭",nvHarr="⤄",nvap="≍⃒",nvdash="⊬",nvge="≥⃒",nvgt=">⃒",nvinfin="⧞",nvlArr="⤂",nvle="≤⃒",nvlt="<⃒",nvltrie="⊴⃒",nvrArr="⤃",nvrtrie="⊵⃒",nvsim="∼⃒",nwArr="⇖",nwarhk="⤣",nwarr="↖",nwarrow="↖",nwnear="⤧",oS="Ⓢ",oacut="ó",oacute="ó",oast="⊛",ocir="ô",ocirc="ô",ocy="о",odash="⊝",odblac="ő",odiv="⨸",odot="⊙",odsold="⦼",oelig="œ",ofcir="⦿",ofr="𝔬",ogon="˛",ograv="ò",ograve="ò",ogt="⧁",ohbar="⦵",ohm="Ω",oint="∮",olarr="↺",olcir="⦾",olcross="⦻",oline="‾",olt="⧀",omacr="ō",omega="ω",omicron="ο",omid="⦶",ominus="⊖",oopf="𝕠",opar="⦷",operp="⦹",oplus="⊕",or="∨",orarr="↻",ord="º",order="ℴ",orderof="ℴ",ordf="ª",ordm="º",origof="⊶",oror="⩖",orslope="⩗",orv="⩛",oscr="ℴ",oslas="ø",oslash="ø",osol="⊘",otild="õ",otilde="õ",otimes="⊗",otimesas="⨶",oum="ö",ouml="ö",ovbar="⌽",par="¶",para="¶",parallel="∥",parsim="⫳",parsl="⫽",part="∂",pcy="п",percnt="%",period=".",permil="‰",perp="⊥",pertenk="‱",pfr="𝔭",phi="φ",phiv="ϕ",phmmat="ℳ",phone="☎",pi="π",pitchfork="⋔",piv="ϖ",planck="ℏ",planckh="ℎ",plankv="ℏ",plus="+",plusacir="⨣",plusb="⊞",pluscir="⨢",plusdo="∔",plusdu="⨥",pluse="⩲",plusm="±",plusmn="±",plussim="⨦",plustwo="⨧",pm="±",pointint="⨕",popf="𝕡",poun="£",pound="£",pr="≺",prE="⪳",prap="⪷",prcue="≼",pre="⪯",prec="≺",precapprox="⪷",preccurlyeq="≼",preceq="⪯",precnapprox="⪹",precneqq="⪵",precnsim="⋨",precsim="≾",prime="′",primes="ℙ",prnE="⪵",prnap="⪹",prnsim="⋨",prod="∏",profalar="⌮",profline="⌒",profsurf="⌓",prop="∝",propto="∝",prsim="≾",prurel="⊰",pscr="𝓅",psi="ψ",puncsp=" ",qfr="𝔮",qint="⨌",qopf="𝕢",qprime="⁗",qscr="𝓆",quaternions="ℍ",quatint="⨖",quest="?",questeq="≟",quo='"',quot='"',rAarr="⇛",rArr="⇒",rAtail="⤜",rBarr="⤏",rHar="⥤",race="∽̱",racute="ŕ",radic="√",raemptyv="⦳",rang="⟩",rangd="⦒",range="⦥",rangle="⟩",raqu="»",raquo="»",rarr="→",rarrap="⥵",rarrb="⇥",rarrbfs="⤠",rarrc="⤳",rarrfs="⤞",rarrhk="↪",rarrlp="↬",rarrpl="⥅",rarrsim="⥴",rarrtl="↣",rarrw="↝",ratail="⤚",ratio="∶",rationals="ℚ",rbarr="⤍",rbbrk="❳",rbrace="}",rbrack="]",rbrke="⦌",rbrksld="⦎",rbrkslu="⦐",rcaron="ř",rcedil="ŗ",rceil="⌉",rcub="}",rcy="р",rdca="⤷",rdldhar="⥩",rdquo="”",rdquor="”",rdsh="↳",real="ℜ",realine="ℛ",realpart="ℜ",reals="ℝ",rect="▭",re="®",reg="®",rfisht="⥽",rfloor="⌋",rfr="𝔯",rhard="⇁",rharu="⇀",rharul="⥬",rho="ρ",rhov="ϱ",rightarrow="→",rightarrowtail="↣",rightharpoondown="⇁",rightharpoonup="⇀",rightleftarrows="⇄",rightleftharpoons="⇌",rightrightarrows="⇉",rightsquigarrow="↝",rightthreetimes="⋌",ring="˚",risingdotseq="≓",rlarr="⇄",rlhar="⇌",rlm="‏",rmoust="⎱",rmoustache="⎱",rnmid="⫮",roang="⟭",roarr="⇾",robrk="⟧",ropar="⦆",ropf="𝕣",roplus="⨮",rotimes="⨵",rpar=")",rpargt="⦔",rppolint="⨒",rrarr="⇉",rsaquo="›",rscr="𝓇",rsh="↱",rsqb="]",rsquo="’",rsquor="’",rthree="⋌",rtimes="⋊",rtri="▹",rtrie="⊵",rtrif="▸",rtriltri="⧎",ruluhar="⥨",rx="℞",sacute="ś",sbquo="‚",sc="≻",scE="⪴",scap="⪸",scaron="š",sccue="≽",sce="⪰",scedil="ş",scirc="ŝ",scnE="⪶",scnap="⪺",scnsim="⋩",scpolint="⨓",scsim="≿",scy="с",sdot="⋅",sdotb="⊡",sdote="⩦",seArr="⇘",searhk="⤥",searr="↘",searrow="↘",sec="§",sect="§",semi=";",seswar="⤩",setminus="∖",setmn="∖",sext="✶",sfr="𝔰",sfrown="⌢",sharp="♯",shchcy="щ",shcy="ш",shortmid="∣",shortparallel="∥",sh="­",shy="­",sigma="σ",sigmaf="ς",sigmav="ς",sim="∼",simdot="⩪",sime="≃",simeq="≃",simg="⪞",simgE="⪠",siml="⪝",simlE="⪟",simne="≆",simplus="⨤",simrarr="⥲",slarr="←",smallsetminus="∖",smashp="⨳",smeparsl="⧤",smid="∣",smile="⌣",smt="⪪",smte="⪬",smtes="⪬︀",softcy="ь",sol="/",solb="⧄",solbar="⌿",sopf="𝕤",spades="♠",spadesuit="♠",spar="∥",sqcap="⊓",sqcaps="⊓︀",sqcup="⊔",sqcups="⊔︀",sqsub="⊏",sqsube="⊑",sqsubset="⊏",sqsubseteq="⊑",sqsup="⊐",sqsupe="⊒",sqsupset="⊐",sqsupseteq="⊒",squ="□",square="□",squarf="▪",squf="▪",srarr="→",sscr="𝓈",ssetmn="∖",ssmile="⌣",sstarf="⋆",star="☆",starf="★",straightepsilon="ϵ",straightphi="ϕ",strns="¯",sub="⊂",subE="⫅",subdot="⪽",sube="⊆",subedot="⫃",submult="⫁",subnE="⫋",subne="⊊",subplus="⪿",subrarr="⥹",subset="⊂",subseteq="⊆",subseteqq="⫅",subsetneq="⊊",subsetneqq="⫋",subsim="⫇",subsub="⫕",subsup="⫓",succ="≻",succapprox="⪸",succcurlyeq="≽",succeq="⪰",succnapprox="⪺",succneqq="⪶",succnsim="⋩",succsim="≿",sum="∑",sung="♪",sup="⊃",sup1="¹",sup2="²",sup3="³",supE="⫆",supdot="⪾",supdsub="⫘",supe="⊇",supedot="⫄",suphsol="⟉",suphsub="⫗",suplarr="⥻",supmult="⫂",supnE="⫌",supne="⊋",supplus="⫀",supset="⊃",supseteq="⊇",supseteqq="⫆",supsetneq="⊋",supsetneqq="⫌",supsim="⫈",supsub="⫔",supsup="⫖",swArr="⇙",swarhk="⤦",swarr="↙",swarrow="↙",swnwar="⤪",szli="ß",szlig="ß",target="⌖",tau="τ",tbrk="⎴",tcaron="ť",tcedil="ţ",tcy="т",tdot="⃛",telrec="⌕",tfr="𝔱",there4="∴",therefore="∴",theta="θ",thetasym="ϑ",thetav="ϑ",thickapprox="≈",thicksim="∼",thinsp=" ",thkap="≈",thksim="∼",thor="þ",thorn="þ",tilde="˜",time="×",times="×",timesb="⊠",timesbar="⨱",timesd="⨰",tint="∭",toea="⤨",top="⊤",topbot="⌶",topcir="⫱",topf="𝕥",topfork="⫚",tosa="⤩",tprime="‴",trade="™",triangle="▵",triangledown="▿",triangleleft="◃",trianglelefteq="⊴",triangleq="≜",triangleright="▹",trianglerighteq="⊵",tridot="◬",trie="≜",triminus="⨺",triplus="⨹",trisb="⧍",tritime="⨻",trpezium="⏢",tscr="𝓉",tscy="ц",tshcy="ћ",tstrok="ŧ",twixt="≬",twoheadleftarrow="↞",twoheadrightarrow="↠",uArr="⇑",uHar="⥣",uacut="ú",uacute="ú",uarr="↑",ubrcy="ў",ubreve="ŭ",ucir="û",ucirc="û",ucy="у",udarr="⇅",udblac="ű",udhar="⥮",ufisht="⥾",ufr="𝔲",ugrav="ù",ugrave="ù",uharl="↿",uharr="↾",uhblk="▀",ulcorn="⌜",ulcorner="⌜",ulcrop="⌏",ultri="◸",umacr="ū",um="¨",uml="¨",uogon="ų",uopf="𝕦",uparrow="↑",updownarrow="↕",upharpoonleft="↿",upharpoonright="↾",uplus="⊎",upsi="υ",upsih="ϒ",upsilon="υ",upuparrows="⇈",urcorn="⌝",urcorner="⌝",urcrop="⌎",uring="ů",urtri="◹",uscr="𝓊",utdot="⋰",utilde="ũ",utri="▵",utrif="▴",uuarr="⇈",uum="ü",uuml="ü",uwangle="⦧",vArr="⇕",vBar="⫨",vBarv="⫩",vDash="⊨",vangrt="⦜",varepsilon="ϵ",varkappa="ϰ",varnothing="∅",varphi="ϕ",varpi="ϖ",varpropto="∝",varr="↕",varrho="ϱ",varsigma="ς",varsubsetneq="⊊︀",varsubsetneqq="⫋︀",varsupsetneq="⊋︀",varsupsetneqq="⫌︀",vartheta="ϑ",vartriangleleft="⊲",vartriangleright="⊳",vcy="в",vdash="⊢",vee="∨",veebar="⊻",veeeq="≚",vellip="⋮",verbar="|",vert="|",vfr="𝔳",vltri="⊲",vnsub="⊂⃒",vnsup="⊃⃒",vopf="𝕧",vprop="∝",vrtri="⊳",vscr="𝓋",vsubnE="⫋︀",vsubne="⊊︀",vsupnE="⫌︀",vsupne="⊋︀",vzigzag="⦚",wcirc="ŵ",wedbar="⩟",wedge="∧",wedgeq="≙",weierp="℘",wfr="𝔴",wopf="𝕨",wp="℘",wr="≀",wreath="≀",wscr="𝓌",xcap="⋂",xcirc="◯",xcup="⋃",xdtri="▽",xfr="𝔵",xhArr="⟺",xharr="⟷",xi="ξ",xlArr="⟸",xlarr="⟵",xmap="⟼",xnis="⋻",xodot="⨀",xopf="𝕩",xoplus="⨁",xotime="⨂",xrArr="⟹",xrarr="⟶",xscr="𝓍",xsqcup="⨆",xuplus="⨄",xutri="△",xvee="⋁",xwedge="⋀",yacut="ý",yacute="ý",yacy="я",ycirc="ŷ",ycy="ы",ye="¥",yen="¥",yfr="𝔶",yicy="ї",yopf="𝕪",yscr="𝓎",yucy="ю",yum="ÿ",yuml="ÿ",zacute="ź",zcaron="ž",zcy="з",zdot="ż",zeetrf="ℨ",zeta="ζ",zfr="𝔷",zhcy="ж",zigrarr="⇝",zopf="𝕫",zscr="𝓏",zwj="‍",zwnj="‌",index$14={AEli:AEli,AElig:AElig,AM:AM,AMP:AMP,Aacut:Aacut,Aacute:Aacute,Abreve:Abreve,Acir:Acir,Acirc:Acirc,Acy:Acy,Afr:Afr,Agrav:Agrav,Agrave:Agrave,Alpha:Alpha,Amacr:Amacr,And:And,Aogon:Aogon,Aopf:Aopf,ApplyFunction:ApplyFunction,Arin:Arin,Aring:Aring,Ascr:Ascr,Assign:Assign,Atild:Atild,Atilde:Atilde,Aum:Aum,Auml:Auml,Backslash:Backslash,Barv:Barv,Barwed:Barwed,Bcy:Bcy,Because:Because,Bernoullis:Bernoullis,Beta:Beta,Bfr:Bfr,Bopf:Bopf,Breve:Breve,Bscr:Bscr,Bumpeq:Bumpeq,CHcy:CHcy,COP:COP,COPY:COPY,Cacute:Cacute,Cap:Cap,CapitalDifferentialD:CapitalDifferentialD,Cayleys:Cayleys,Ccaron:Ccaron,Ccedi:Ccedi,Ccedil:Ccedil,Ccirc:Ccirc,Cconint:Cconint,Cdot:Cdot,Cedilla:Cedilla,CenterDot:CenterDot,Cfr:Cfr,Chi:Chi,CircleDot:CircleDot,CircleMinus:CircleMinus,CirclePlus:CirclePlus,CircleTimes:CircleTimes,ClockwiseContourIntegral:ClockwiseContourIntegral,CloseCurlyDoubleQuote:CloseCurlyDoubleQuote,CloseCurlyQuote:CloseCurlyQuote,Colon:Colon,Colone:Colone,Congruent:Congruent,Conint:Conint,ContourIntegral:ContourIntegral,Copf:Copf,Coproduct:Coproduct,CounterClockwiseContourIntegral:CounterClockwiseContourIntegral,Cross:Cross,Cscr:Cscr,Cup:Cup,CupCap:CupCap,DD:DD,DDotrahd:DDotrahd,DJcy:DJcy,DScy:DScy,DZcy:DZcy,Dagger:Dagger,Darr:Darr,Dashv:Dashv,Dcaron:Dcaron,Dcy:Dcy,Del:Del,Delta:Delta,Dfr:Dfr,DiacriticalAcute:DiacriticalAcute,DiacriticalDot:DiacriticalDot,DiacriticalDoubleAcute:DiacriticalDoubleAcute,DiacriticalGrave:DiacriticalGrave,DiacriticalTilde:DiacriticalTilde,Diamond:Diamond,DifferentialD:DifferentialD,Dopf:Dopf,Dot:Dot,DotDot:DotDot,DotEqual:DotEqual,DoubleContourIntegral:DoubleContourIntegral,DoubleDot:DoubleDot,DoubleDownArrow:DoubleDownArrow,DoubleLeftArrow:DoubleLeftArrow,DoubleLeftRightArrow:DoubleLeftRightArrow,DoubleLeftTee:DoubleLeftTee,DoubleLongLeftArrow:DoubleLongLeftArrow,DoubleLongLeftRightArrow:DoubleLongLeftRightArrow,DoubleLongRightArrow:DoubleLongRightArrow,DoubleRightArrow:DoubleRightArrow,DoubleRightTee:DoubleRightTee,DoubleUpArrow:DoubleUpArrow,DoubleUpDownArrow:DoubleUpDownArrow,DoubleVerticalBar:DoubleVerticalBar,DownArrow:DownArrow,DownArrowBar:DownArrowBar,DownArrowUpArrow:DownArrowUpArrow,DownBreve:DownBreve,DownLeftRightVector:DownLeftRightVector,DownLeftTeeVector:DownLeftTeeVector,DownLeftVector:DownLeftVector,DownLeftVectorBar:DownLeftVectorBar,DownRightTeeVector:DownRightTeeVector,DownRightVector:DownRightVector,DownRightVectorBar:DownRightVectorBar,DownTee:DownTee,DownTeeArrow:DownTeeArrow,Downarrow:Downarrow,Dscr:Dscr,Dstrok:Dstrok,ENG:ENG,ET:ET,ETH:ETH,Eacut:Eacut,Eacute:Eacute,Ecaron:Ecaron,Ecir:Ecir,Ecirc:Ecirc,Ecy:Ecy,Edot:Edot,Efr:Efr,Egrav:Egrav,Egrave:Egrave,Element:Element,Emacr:Emacr,EmptySmallSquare:EmptySmallSquare,EmptyVerySmallSquare:EmptyVerySmallSquare,Eogon:Eogon,Eopf:Eopf,Epsilon:Epsilon,Equal:Equal,EqualTilde:EqualTilde,Equilibrium:Equilibrium,Escr:Escr,Esim:Esim,Eta:Eta,Eum:Eum,Euml:Euml,Exists:Exists,ExponentialE:ExponentialE,Fcy:Fcy,Ffr:Ffr,FilledSmallSquare:FilledSmallSquare,FilledVerySmallSquare:FilledVerySmallSquare,Fopf:Fopf,ForAll:ForAll,Fouriertrf:Fouriertrf,Fscr:Fscr,GJcy:GJcy,G:G,GT:GT,Gamma:Gamma,Gammad:Gammad,Gbreve:Gbreve,Gcedil:Gcedil,Gcirc:Gcirc,Gcy:Gcy,Gdot:Gdot,Gfr:Gfr,Gg:Gg,Gopf:Gopf,GreaterEqual:GreaterEqual,GreaterEqualLess:GreaterEqualLess,GreaterFullEqual:GreaterFullEqual,GreaterGreater:GreaterGreater,GreaterLess:GreaterLess,GreaterSlantEqual:GreaterSlantEqual,GreaterTilde:GreaterTilde,Gscr:Gscr,Gt:Gt,HARDcy:HARDcy,Hacek:Hacek,Hat:Hat,Hcirc:Hcirc,Hfr:Hfr,HilbertSpace:HilbertSpace,Hopf:Hopf,HorizontalLine:HorizontalLine,Hscr:Hscr,Hstrok:Hstrok,HumpDownHump:HumpDownHump,HumpEqual:HumpEqual,IEcy:IEcy,IJlig:IJlig,IOcy:IOcy,Iacut:Iacut,Iacute:Iacute,Icir:Icir,Icirc:Icirc,Icy:Icy,Idot:Idot,Ifr:Ifr,Igrav:Igrav,Igrave:Igrave,Im:Im,Imacr:Imacr,ImaginaryI:ImaginaryI,Implies:Implies,Int:Int,Integral:Integral,Intersection:Intersection,InvisibleComma:InvisibleComma,InvisibleTimes:InvisibleTimes,Iogon:Iogon,Iopf:Iopf,Iota:Iota,Iscr:Iscr,Itilde:Itilde,Iukcy:Iukcy,Ium:Ium,Iuml:Iuml,Jcirc:Jcirc,Jcy:Jcy,Jfr:Jfr,Jopf:Jopf,Jscr:Jscr,Jsercy:Jsercy,Jukcy:Jukcy,KHcy:KHcy,KJcy:KJcy,Kappa:Kappa,Kcedil:Kcedil,Kcy:Kcy,Kfr:Kfr,Kopf:Kopf,Kscr:Kscr,LJcy:LJcy,L:L,LT:LT,Lacute:Lacute,Lambda:Lambda,Lang:Lang,Laplacetrf:Laplacetrf,Larr:Larr,Lcaron:Lcaron,Lcedil:Lcedil,Lcy:Lcy,LeftAngleBracket:LeftAngleBracket,LeftArrow:LeftArrow,LeftArrowBar:LeftArrowBar,LeftArrowRightArrow:LeftArrowRightArrow,LeftCeiling:LeftCeiling,LeftDoubleBracket:LeftDoubleBracket,LeftDownTeeVector:LeftDownTeeVector,LeftDownVector:LeftDownVector,LeftDownVectorBar:LeftDownVectorBar,LeftFloor:LeftFloor,LeftRightArrow:LeftRightArrow,LeftRightVector:LeftRightVector,LeftTee:LeftTee,LeftTeeArrow:LeftTeeArrow,LeftTeeVector:LeftTeeVector,LeftTriangle:LeftTriangle,LeftTriangleBar:LeftTriangleBar,LeftTriangleEqual:LeftTriangleEqual,LeftUpDownVector:LeftUpDownVector,LeftUpTeeVector:LeftUpTeeVector,LeftUpVector:LeftUpVector,LeftUpVectorBar:LeftUpVectorBar,LeftVector:LeftVector,LeftVectorBar:LeftVectorBar,Leftarrow:Leftarrow,Leftrightarrow:Leftrightarrow,LessEqualGreater:LessEqualGreater,LessFullEqual:LessFullEqual,LessGreater:LessGreater,LessLess:LessLess,LessSlantEqual:LessSlantEqual,LessTilde:LessTilde,Lfr:Lfr,Ll:Ll,Lleftarrow:Lleftarrow,Lmidot:Lmidot,LongLeftArrow:LongLeftArrow,LongLeftRightArrow:LongLeftRightArrow,LongRightArrow:LongRightArrow,Longleftarrow:Longleftarrow,Longleftrightarrow:Longleftrightarrow,Longrightarrow:Longrightarrow,Lopf:Lopf,LowerLeftArrow:LowerLeftArrow,LowerRightArrow:LowerRightArrow,Lscr:Lscr,Lsh:Lsh,Lstrok:Lstrok,Lt:Lt,Mcy:Mcy,MediumSpace:MediumSpace,Mellintrf:Mellintrf,Mfr:Mfr,MinusPlus:MinusPlus,Mopf:Mopf,Mscr:Mscr,Mu:Mu,NJcy:NJcy,Nacute:Nacute,Ncaron:Ncaron,Ncedil:Ncedil,Ncy:Ncy,NegativeMediumSpace:NegativeMediumSpace,NegativeThickSpace:NegativeThickSpace,NegativeThinSpace:NegativeThinSpace,NegativeVeryThinSpace:NegativeVeryThinSpace,NestedGreaterGreater:NestedGreaterGreater,NestedLessLess:NestedLessLess,NewLine:NewLine,Nfr:Nfr,NoBreak:NoBreak,NonBreakingSpace:NonBreakingSpace,Nopf:Nopf,Not:Not,NotCongruent:NotCongruent,NotCupCap:NotCupCap,NotDoubleVerticalBar:NotDoubleVerticalBar,NotElement:NotElement,NotEqual:NotEqual,NotEqualTilde:NotEqualTilde,NotExists:NotExists,NotGreater:NotGreater,NotGreaterEqual:NotGreaterEqual,NotGreaterFullEqual:NotGreaterFullEqual,NotGreaterGreater:NotGreaterGreater,NotGreaterLess:NotGreaterLess,NotGreaterSlantEqual:NotGreaterSlantEqual,NotGreaterTilde:NotGreaterTilde,NotHumpDownHump:NotHumpDownHump,NotHumpEqual:NotHumpEqual,NotLeftTriangle:NotLeftTriangle,NotLeftTriangleBar:NotLeftTriangleBar,NotLeftTriangleEqual:NotLeftTriangleEqual,NotLess:NotLess,NotLessEqual:NotLessEqual,NotLessGreater:NotLessGreater,NotLessLess:NotLessLess,NotLessSlantEqual:NotLessSlantEqual,NotLessTilde:NotLessTilde,NotNestedGreaterGreater:NotNestedGreaterGreater,NotNestedLessLess:NotNestedLessLess,NotPrecedes:NotPrecedes,NotPrecedesEqual:NotPrecedesEqual,NotPrecedesSlantEqual:NotPrecedesSlantEqual,NotReverseElement:NotReverseElement,NotRightTriangle:NotRightTriangle,NotRightTriangleBar:NotRightTriangleBar,NotRightTriangleEqual:NotRightTriangleEqual,NotSquareSubset:NotSquareSubset,NotSquareSubsetEqual:NotSquareSubsetEqual,NotSquareSuperset:NotSquareSuperset,NotSquareSupersetEqual:NotSquareSupersetEqual,NotSubset:NotSubset,NotSubsetEqual:NotSubsetEqual,NotSucceeds:NotSucceeds,NotSucceedsEqual:NotSucceedsEqual,NotSucceedsSlantEqual:NotSucceedsSlantEqual,NotSucceedsTilde:NotSucceedsTilde,NotSuperset:NotSuperset,NotSupersetEqual:NotSupersetEqual,NotTilde:NotTilde,NotTildeEqual:NotTildeEqual,NotTildeFullEqual:NotTildeFullEqual,NotTildeTilde:NotTildeTilde,NotVerticalBar:NotVerticalBar,Nscr:Nscr,Ntild:Ntild,Ntilde:Ntilde,Nu:Nu,OElig:OElig,Oacut:Oacut,Oacute:Oacute,Ocir:Ocir,Ocirc:Ocirc,Ocy:Ocy,Odblac:Odblac,Ofr:Ofr,Ograv:Ograv,Ograve:Ograve,Omacr:Omacr,Omega:Omega,Omicron:Omicron,Oopf:Oopf,OpenCurlyDoubleQuote:OpenCurlyDoubleQuote,OpenCurlyQuote:OpenCurlyQuote,Or:Or,Oscr:Oscr,Oslas:Oslas,Oslash:Oslash,Otild:Otild,Otilde:Otilde,Otimes:Otimes,Oum:Oum,Ouml:Ouml,OverBar:OverBar,OverBrace:OverBrace,OverBracket:OverBracket,OverParenthesis:OverParenthesis,PartialD:PartialD,Pcy:Pcy,Pfr:Pfr,Phi:Phi,Pi:Pi,PlusMinus:PlusMinus,Poincareplane:Poincareplane,Popf:Popf,Pr:Pr,Precedes:Precedes,PrecedesEqual:PrecedesEqual,PrecedesSlantEqual:PrecedesSlantEqual,PrecedesTilde:PrecedesTilde,Prime:Prime,Product:Product,Proportion:Proportion,Proportional:Proportional,Pscr:Pscr,Psi:Psi,QUO:QUO,QUOT:QUOT,Qfr:Qfr,Qopf:Qopf,Qscr:Qscr,RBarr:RBarr,RE:RE,REG:REG,Racute:Racute,Rang:Rang,Rarr:Rarr,Rarrtl:Rarrtl,Rcaron:Rcaron,Rcedil:Rcedil,Rcy:Rcy,Re:Re,ReverseElement:ReverseElement,ReverseEquilibrium:ReverseEquilibrium,ReverseUpEquilibrium:ReverseUpEquilibrium,Rfr:Rfr,Rho:Rho,RightAngleBracket:RightAngleBracket,RightArrow:RightArrow,RightArrowBar:RightArrowBar,RightArrowLeftArrow:RightArrowLeftArrow,RightCeiling:RightCeiling,RightDoubleBracket:RightDoubleBracket,RightDownTeeVector:RightDownTeeVector,RightDownVector:RightDownVector,RightDownVectorBar:RightDownVectorBar,RightFloor:RightFloor,RightTee:RightTee,RightTeeArrow:RightTeeArrow,RightTeeVector:RightTeeVector,RightTriangle:RightTriangle,RightTriangleBar:RightTriangleBar,RightTriangleEqual:RightTriangleEqual,RightUpDownVector:RightUpDownVector,RightUpTeeVector:RightUpTeeVector,RightUpVector:RightUpVector,RightUpVectorBar:RightUpVectorBar,RightVector:RightVector,RightVectorBar:RightVectorBar,Rightarrow:Rightarrow,Ropf:Ropf,RoundImplies:RoundImplies,Rrightarrow:Rrightarrow,Rscr:Rscr,Rsh:Rsh,RuleDelayed:RuleDelayed,SHCHcy:SHCHcy,SHcy:SHcy,SOFTcy:SOFTcy,Sacute:Sacute,Sc:Sc,Scaron:Scaron,Scedil:Scedil,Scirc:Scirc,Scy:Scy,Sfr:Sfr,ShortDownArrow:ShortDownArrow,ShortLeftArrow:ShortLeftArrow,ShortRightArrow:ShortRightArrow,ShortUpArrow:ShortUpArrow,Sigma:Sigma,SmallCircle:SmallCircle,Sopf:Sopf,Sqrt:Sqrt,Square:Square,SquareIntersection:SquareIntersection,SquareSubset:SquareSubset,SquareSubsetEqual:SquareSubsetEqual,SquareSuperset:SquareSuperset,SquareSupersetEqual:SquareSupersetEqual,SquareUnion:SquareUnion,Sscr:Sscr,Star:Star,Sub:Sub,Subset:Subset,SubsetEqual:SubsetEqual,Succeeds:Succeeds,SucceedsEqual:SucceedsEqual,SucceedsSlantEqual:SucceedsSlantEqual,SucceedsTilde:SucceedsTilde,SuchThat:SuchThat,Sum:Sum,Sup:Sup,Superset:Superset,SupersetEqual:SupersetEqual,Supset:Supset,THOR:THOR,THORN:THORN,TRADE:TRADE,TSHcy:TSHcy,TScy:TScy,Tab:Tab,Tau:Tau,Tcaron:Tcaron,Tcedil:Tcedil,Tcy:Tcy,Tfr:Tfr,Therefore:Therefore,Theta:Theta,ThickSpace:ThickSpace,ThinSpace:ThinSpace,Tilde:Tilde,TildeEqual:TildeEqual,TildeFullEqual:TildeFullEqual,TildeTilde:TildeTilde,Topf:Topf,TripleDot:TripleDot,Tscr:Tscr,Tstrok:Tstrok,Uacut:Uacut,Uacute:Uacute,Uarr:Uarr,Uarrocir:Uarrocir,Ubrcy:Ubrcy,Ubreve:Ubreve,Ucir:Ucir,Ucirc:Ucirc,Ucy:Ucy,Udblac:Udblac,Ufr:Ufr,Ugrav:Ugrav,Ugrave:Ugrave,Umacr:Umacr,UnderBar:UnderBar,UnderBrace:UnderBrace,UnderBracket:UnderBracket,UnderParenthesis:UnderParenthesis,Union:Union,UnionPlus:UnionPlus,Uogon:Uogon,Uopf:Uopf,UpArrow:UpArrow,UpArrowBar:UpArrowBar,UpArrowDownArrow:UpArrowDownArrow,UpDownArrow:UpDownArrow,UpEquilibrium:UpEquilibrium,UpTee:UpTee,UpTeeArrow:UpTeeArrow,Uparrow:Uparrow,Updownarrow:Updownarrow,UpperLeftArrow:UpperLeftArrow,UpperRightArrow:UpperRightArrow,Upsi:Upsi,Upsilon:Upsilon,Uring:Uring,Uscr:Uscr,Utilde:Utilde,Uum:Uum,Uuml:Uuml,VDash:VDash,Vbar:Vbar,Vcy:Vcy,Vdash:Vdash,Vdashl:Vdashl,Vee:Vee,Verbar:Verbar,Vert:Vert,VerticalBar:VerticalBar,VerticalLine:VerticalLine,VerticalSeparator:VerticalSeparator,VerticalTilde:VerticalTilde,VeryThinSpace:VeryThinSpace,Vfr:Vfr,Vopf:Vopf,Vscr:Vscr,Vvdash:Vvdash,Wcirc:Wcirc,Wedge:Wedge,Wfr:Wfr,Wopf:Wopf,Wscr:Wscr,Xfr:Xfr,Xi:Xi,Xopf:Xopf,Xscr:Xscr,YAcy:YAcy,YIcy:YIcy,YUcy:YUcy,Yacut:Yacut,Yacute:Yacute,Ycirc:Ycirc,Ycy:Ycy,Yfr:Yfr,Yopf:Yopf,Yscr:Yscr,Yuml:Yuml,ZHcy:ZHcy,Zacute:Zacute,Zcaron:Zcaron,Zcy:Zcy,Zdot:Zdot,ZeroWidthSpace:ZeroWidthSpace,Zeta:Zeta,Zfr:Zfr,Zopf:Zopf,Zscr:Zscr,aacut:aacut,aacute:aacute,abreve:abreve,ac:ac,acE:acE,acd:acd,acir:acir,acirc:acirc,acut:acut,acute:acute,acy:acy,aeli:aeli,aelig:aelig,af:af,afr:afr,agrav:agrav,agrave:agrave,alefsym:alefsym,aleph:aleph,alpha:alpha,amacr:amacr,amalg:amalg,am:am,amp:amp,and:and,andand:andand,andd:andd,andslope:andslope,andv:andv,ang:ang,ange:ange,angle:angle,angmsd:angmsd,angmsdaa:angmsdaa,angmsdab:angmsdab,angmsdac:angmsdac,angmsdad:angmsdad,angmsdae:angmsdae,angmsdaf:angmsdaf,angmsdag:angmsdag,angmsdah:angmsdah,angrt:angrt,angrtvb:angrtvb,angrtvbd:angrtvbd,angsph:angsph,angst:angst,angzarr:angzarr,aogon:aogon,aopf:aopf,ap:ap,apE:apE,apacir:apacir,ape:ape,apid:apid,apos:apos,approx:approx,approxeq:approxeq,arin:arin,aring:aring,ascr:ascr,ast:ast,asymp:asymp,asympeq:asympeq,atild:atild,atilde:atilde,aum:aum,auml:auml,awconint:awconint,awint:awint,bNot:bNot,backcong:backcong,backepsilon:backepsilon,backprime:backprime,backsim:backsim,backsimeq:backsimeq,barvee:barvee,barwed:barwed,barwedge:barwedge,bbrk:bbrk,bbrktbrk:bbrktbrk,bcong:bcong,bcy:bcy,bdquo:bdquo,becaus:becaus,because:because,bemptyv:bemptyv,bepsi:bepsi,bernou:bernou,beta:beta,beth:beth,between:between,bfr:bfr,bigcap:bigcap,bigcirc:bigcirc,bigcup:bigcup,bigodot:bigodot,bigoplus:bigoplus,bigotimes:bigotimes,bigsqcup:bigsqcup,bigstar:bigstar,bigtriangledown:bigtriangledown,bigtriangleup:bigtriangleup,biguplus:biguplus,bigvee:bigvee,bigwedge:bigwedge,bkarow:bkarow,blacklozenge:blacklozenge,blacksquare:blacksquare,blacktriangle:blacktriangle,blacktriangledown:blacktriangledown,blacktriangleleft:blacktriangleleft,blacktriangleright:blacktriangleright,blank:blank,blk12:blk12,blk14:blk14,blk34:blk34,block:block,bne:bne,bnequiv:bnequiv,bnot:bnot,bopf:bopf,bot:bot,bottom:bottom,bowtie:bowtie,boxDL:boxDL,boxDR:boxDR,boxDl:boxDl,boxDr:boxDr,boxH:boxH,boxHD:boxHD,boxHU:boxHU,boxHd:boxHd,boxHu:boxHu,boxUL:boxUL,boxUR:boxUR,boxUl:boxUl,boxUr:boxUr,boxV:boxV,boxVH:boxVH,boxVL:boxVL,boxVR:boxVR,boxVh:boxVh,boxVl:boxVl,boxVr:boxVr,boxbox:boxbox,boxdL:boxdL,boxdR:boxdR,boxdl:boxdl,boxdr:boxdr,boxh:boxh,boxhD:boxhD,boxhU:boxhU,boxhd:boxhd,boxhu:boxhu,boxminus:boxminus,boxplus:boxplus,boxtimes:boxtimes,boxuL:boxuL,boxuR:boxuR,boxul:boxul,boxur:boxur,boxv:boxv,boxvH:boxvH,boxvL:boxvL,boxvR:boxvR,boxvh:boxvh,boxvl:boxvl,boxvr:boxvr,bprime:bprime,breve:breve,brvba:brvba,brvbar:brvbar,bscr:bscr,bsemi:bsemi,bsim:bsim,bsime:bsime,bsol:bsol,bsolb:bsolb,bsolhsub:bsolhsub,bull:bull,bullet:bullet,bump:bump,bumpE:bumpE,bumpe:bumpe,bumpeq:bumpeq,cacute:cacute,cap:cap,capand:capand,capbrcup:capbrcup,capcap:capcap,capcup:capcup,capdot:capdot,caps:caps,caret:caret,caron:caron,ccaps:ccaps,ccaron:ccaron,ccedi:ccedi,ccedil:ccedil,ccirc:ccirc,ccups:ccups,ccupssm:ccupssm,cdot:cdot,cedi:cedi,cedil:cedil,cemptyv:cemptyv,cen:cen,cent:cent,centerdot:centerdot,cfr:cfr,chcy:chcy,check:check,checkmark:checkmark,chi:chi,cir:cir,cirE:cirE,circ:circ,circeq:circeq,circlearrowleft:circlearrowleft,circlearrowright:circlearrowright,circledR:circledR,circledS:circledS,circledast:circledast,circledcirc:circledcirc,circleddash:circleddash,cire:cire,cirfnint:cirfnint,cirmid:cirmid,cirscir:cirscir,clubs:clubs,clubsuit:clubsuit,colon:colon,colone:colone,coloneq:coloneq,comma:comma,commat:commat,comp:comp,compfn:compfn,complement:complement,complexes:complexes,cong:cong,congdot:congdot,conint:conint,copf:copf,coprod:coprod,cop:cop,copy:copy,copysr:copysr,crarr:crarr,cross:cross,cscr:cscr,csub:csub,csube:csube,csup:csup,csupe:csupe,ctdot:ctdot,cudarrl:cudarrl,cudarrr:cudarrr,cuepr:cuepr,cuesc:cuesc,cularr:cularr,cularrp:cularrp,cup:cup,cupbrcap:cupbrcap,cupcap:cupcap,cupcup:cupcup,cupdot:cupdot,cupor:cupor,cups:cups,curarr:curarr,curarrm:curarrm,curlyeqprec:curlyeqprec,curlyeqsucc:curlyeqsucc,curlyvee:curlyvee,curlywedge:curlywedge,curre:curre,curren:curren,curvearrowleft:curvearrowleft,curvearrowright:curvearrowright,cuvee:cuvee,cuwed:cuwed,cwconint:cwconint,cwint:cwint,cylcty:cylcty,dArr:dArr,dHar:dHar,dagger:dagger,daleth:daleth,darr:darr,dash:dash,dashv:dashv,dbkarow:dbkarow,dblac:dblac,dcaron:dcaron,dcy:dcy,dd:dd,ddagger:ddagger,ddarr:ddarr,ddotseq:ddotseq,de:de,deg:deg,delta:delta,demptyv:demptyv,dfisht:dfisht,dfr:dfr,dharl:dharl,dharr:dharr,diam:diam,diamond:diamond,diamondsuit:diamondsuit,diams:diams,die:die,digamma:digamma,disin:disin,div:div,divid:divid,divide:divide,divideontimes:divideontimes,divonx:divonx,djcy:djcy,dlcorn:dlcorn,dlcrop:dlcrop,dollar:dollar,dopf:dopf,dot:dot,doteq:doteq,doteqdot:doteqdot,dotminus:dotminus,dotplus:dotplus,dotsquare:dotsquare,doublebarwedge:doublebarwedge,downarrow:downarrow,downdownarrows:downdownarrows,downharpoonleft:downharpoonleft,downharpoonright:downharpoonright,drbkarow:drbkarow,drcorn:drcorn,drcrop:drcrop,dscr:dscr,dscy:dscy,dsol:dsol,dstrok:dstrok,dtdot:dtdot,dtri:dtri,dtrif:dtrif,duarr:duarr,duhar:duhar,dwangle:dwangle,dzcy:dzcy,dzigrarr:dzigrarr,eDDot:eDDot,eDot:eDot,eacut:eacut,eacute:eacute,easter:easter,ecaron:ecaron,ecir:ecir,ecirc:ecirc,ecolon:ecolon,ecy:ecy,edot:edot,ee:ee,efDot:efDot,efr:efr,eg:eg,egrav:egrav,egrave:egrave,egs:egs,egsdot:egsdot,el:el,elinters:elinters,ell:ell,els:els,elsdot:elsdot,emacr:emacr,empty:empty,emptyset:emptyset,emptyv:emptyv,emsp13:emsp13,emsp14:emsp14,emsp:emsp,eng:eng,ensp:ensp,eogon:eogon,eopf:eopf,epar:epar,eparsl:eparsl,eplus:eplus,epsi:epsi,epsilon:epsilon,epsiv:epsiv,eqcirc:eqcirc,eqcolon:eqcolon,eqsim:eqsim,eqslantgtr:eqslantgtr,eqslantless:eqslantless,equals:equals,equest:equest,equiv:equiv,equivDD:equivDD,eqvparsl:eqvparsl,erDot:erDot,erarr:erarr,escr:escr,esdot:esdot,esim:esim,eta:eta,et:et,eth:eth,eum:eum,euml:euml,euro:euro,excl:excl,exist:exist,expectation:expectation,exponentiale:exponentiale,fallingdotseq:fallingdotseq,fcy:fcy,female:female,ffilig:ffilig,fflig:fflig,ffllig:ffllig,ffr:ffr,filig:filig,fjlig:fjlig,flat:flat,fllig:fllig,fltns:fltns,fnof:fnof,fopf:fopf,forall:forall,fork:fork,forkv:forkv,fpartint:fpartint,frac1:frac1,frac12:frac12,frac13:frac13,frac14:frac14,frac15:frac15,frac16:frac16,frac18:frac18,frac23:frac23,frac25:frac25,frac3:frac3,frac34:frac34,frac35:frac35,frac38:frac38,frac45:frac45,frac56:frac56,frac58:frac58,frac78:frac78,frasl:frasl,frown:frown,fscr:fscr,gE:gE,gEl:gEl,gacute:gacute,gamma:gamma,gammad:gammad,gap:gap,gbreve:gbreve,gcirc:gcirc,gcy:gcy,gdot:gdot,ge:ge,gel:gel,geq:geq,geqq:geqq,geqslant:geqslant,ges:ges,gescc:gescc,gesdot:gesdot,gesdoto:gesdoto,gesdotol:gesdotol,gesl:gesl,gesles:gesles,gfr:gfr,gg:gg,ggg:ggg,gimel:gimel,gjcy:gjcy,gl:gl,glE:glE,gla:gla,glj:glj,gnE:gnE,gnap:gnap,gnapprox:gnapprox,gne:gne,gneq:gneq,gneqq:gneqq,gnsim:gnsim,gopf:gopf,grave:grave,gscr:gscr,gsim:gsim,gsime:gsime,gsiml:gsiml,g:g,gt:gt,gtcc:gtcc,gtcir:gtcir,gtdot:gtdot,gtlPar:gtlPar,gtquest:gtquest,gtrapprox:gtrapprox,gtrarr:gtrarr,gtrdot:gtrdot,gtreqless:gtreqless,gtreqqless:gtreqqless,gtrless:gtrless,gtrsim:gtrsim,gvertneqq:gvertneqq,gvnE:gvnE,hArr:hArr,hairsp:hairsp,half:half,hamilt:hamilt,hardcy:hardcy,harr:harr,harrcir:harrcir,harrw:harrw,hbar:hbar,hcirc:hcirc,hearts:hearts,heartsuit:heartsuit,hellip:hellip,hercon:hercon,hfr:hfr,hksearow:hksearow,hkswarow:hkswarow,hoarr:hoarr,homtht:homtht,hookleftarrow:hookleftarrow,hookrightarrow:hookrightarrow,hopf:hopf,horbar:horbar,hscr:hscr,hslash:hslash,hstrok:hstrok,hybull:hybull,hyphen:hyphen,iacut:iacut,iacute:iacute,ic:ic,icir:icir,icirc:icirc,icy:icy,iecy:iecy,iexc:iexc,iexcl:iexcl,iff:iff,ifr:ifr,igrav:igrav,igrave:igrave,ii:ii,iiiint:iiiint,iiint:iiint,iinfin:iinfin,iiota:iiota,ijlig:ijlig,imacr:imacr,image:image,imagline:imagline,imagpart:imagpart,imath:imath,imof:imof,imped:imped,incare:incare,infin:infin,infintie:infintie,inodot:inodot,int:int,intcal:intcal,integers:integers,intercal:intercal,intlarhk:intlarhk,intprod:intprod,iocy:iocy,iogon:iogon,iopf:iopf,iota:iota,iprod:iprod,iques:iques,iquest:iquest,iscr:iscr,isin:isin,isinE:isinE,isindot:isindot,isins:isins,isinsv:isinsv,isinv:isinv,it:it,itilde:itilde,iukcy:iukcy,ium:ium,iuml:iuml,jcirc:jcirc,jcy:jcy,jfr:jfr,jmath:jmath,jopf:jopf,jscr:jscr,jsercy:jsercy,jukcy:jukcy,kappa:kappa,kappav:kappav,kcedil:kcedil,kcy:kcy,kfr:kfr,kgreen:kgreen,khcy:khcy,kjcy:kjcy,kopf:kopf,kscr:kscr,lAarr:lAarr,lArr:lArr,lAtail:lAtail,lBarr:lBarr,lE:lE,lEg:lEg,lHar:lHar,lacute:lacute,laemptyv:laemptyv,lagran:lagran,lambda:lambda,lang:lang,langd:langd,langle:langle,lap:lap,laqu:laqu,laquo:laquo,larr:larr,larrb:larrb,larrbfs:larrbfs,larrfs:larrfs,larrhk:larrhk,larrlp:larrlp,larrpl:larrpl,larrsim:larrsim,larrtl:larrtl,lat:lat,latail:latail,late:late,lates:lates,lbarr:lbarr,lbbrk:lbbrk,lbrace:lbrace,lbrack:lbrack,lbrke:lbrke,lbrksld:lbrksld,lbrkslu:lbrkslu,lcaron:lcaron,lcedil:lcedil,lceil:lceil,lcub:lcub,lcy:lcy,ldca:ldca,ldquo:ldquo,ldquor:ldquor,ldrdhar:ldrdhar,ldrushar:ldrushar,ldsh:ldsh,le:le,leftarrow:leftarrow,leftarrowtail:leftarrowtail,leftharpoondown:leftharpoondown,leftharpoonup:leftharpoonup,leftleftarrows:leftleftarrows,leftrightarrow:leftrightarrow,leftrightarrows:leftrightarrows,leftrightharpoons:leftrightharpoons,leftrightsquigarrow:leftrightsquigarrow,leftthreetimes:leftthreetimes,leg:leg,leq:leq,leqq:leqq,leqslant:leqslant,les:les,lescc:lescc,lesdot:lesdot,lesdoto:lesdoto,lesdotor:lesdotor,lesg:lesg,lesges:lesges,lessapprox:lessapprox,lessdot:lessdot,lesseqgtr:lesseqgtr,lesseqqgtr:lesseqqgtr,lessgtr:lessgtr,lesssim:lesssim,lfisht:lfisht,lfloor:lfloor,lfr:lfr,lg:lg,lgE:lgE,lhard:lhard,lharu:lharu,lharul:lharul,lhblk:lhblk,ljcy:ljcy,ll:ll,llarr:llarr,llcorner:llcorner,llhard:llhard,lltri:lltri,lmidot:lmidot,lmoust:lmoust,lmoustache:lmoustache,lnE:lnE,lnap:lnap,lnapprox:lnapprox,lne:lne,lneq:lneq,lneqq:lneqq,lnsim:lnsim,loang:loang,loarr:loarr,lobrk:lobrk,longleftarrow:longleftarrow,longleftrightarrow:longleftrightarrow,longmapsto:longmapsto,longrightarrow:longrightarrow,looparrowleft:looparrowleft,looparrowright:looparrowright,lopar:lopar,lopf:lopf,loplus:loplus,lotimes:lotimes,lowast:lowast,lowbar:lowbar,loz:loz,lozenge:lozenge,lozf:lozf,lpar:lpar,lparlt:lparlt,lrarr:lrarr,lrcorner:lrcorner,lrhar:lrhar,lrhard:lrhard,lrm:lrm,lrtri:lrtri,lsaquo:lsaquo,lscr:lscr,lsh:lsh,lsim:lsim,lsime:lsime,lsimg:lsimg,lsqb:lsqb,lsquo:lsquo,lsquor:lsquor,lstrok:lstrok,l:l,lt:lt,ltcc:ltcc,ltcir:ltcir,ltdot:ltdot,lthree:lthree,ltimes:ltimes,ltlarr:ltlarr,ltquest:ltquest,ltrPar:ltrPar,ltri:ltri,ltrie:ltrie,ltrif:ltrif,lurdshar:lurdshar,luruhar:luruhar,lvertneqq:lvertneqq,lvnE:lvnE,mDDot:mDDot,mac:mac,macr:macr,male:male,malt:malt,maltese:maltese,map:map$1,mapsto:mapsto,mapstodown:mapstodown,mapstoleft:mapstoleft,mapstoup:mapstoup,marker:marker,mcomma:mcomma,mcy:mcy,mdash:mdash,measuredangle:measuredangle,mfr:mfr,mho:mho,micr:micr,micro:micro,mid:mid,midast:midast,midcir:midcir,middo:middo,middot:middot,minus:minus,minusb:minusb,minusd:minusd,minusdu:minusdu,mlcp:mlcp,mldr:mldr,mnplus:mnplus,models:models,mopf:mopf,mp:mp,mscr:mscr,mstpos:mstpos,mu:mu,multimap:multimap,mumap:mumap,nGg:nGg,nGt:nGt,nGtv:nGtv,nLeftarrow:nLeftarrow,nLeftrightarrow:nLeftrightarrow,nLl:nLl,nLt:nLt,nLtv:nLtv,nRightarrow:nRightarrow,nVDash:nVDash,nVdash:nVdash,nabla:nabla,nacute:nacute,nang:nang,nap:nap,napE:napE,napid:napid,napos:napos,napprox:napprox,natur:natur,natural:natural,naturals:naturals,nbs:nbs,nbsp:nbsp,nbump:nbump,nbumpe:nbumpe,ncap:ncap,ncaron:ncaron,ncedil:ncedil,ncong:ncong,ncongdot:ncongdot,ncup:ncup,ncy:ncy,ndash:ndash,ne:ne,neArr:neArr,nearhk:nearhk,nearr:nearr,nearrow:nearrow,nedot:nedot,nequiv:nequiv,nesear:nesear,nesim:nesim,nexist:nexist,nexists:nexists,nfr:nfr,ngE:ngE,nge:nge,ngeq:ngeq,ngeqq:ngeqq,ngeqslant:ngeqslant,nges:nges,ngsim:ngsim,ngt:ngt,ngtr:ngtr,nhArr:nhArr,nharr:nharr,nhpar:nhpar,ni:ni,nis:nis,nisd:nisd,niv:niv,njcy:njcy,nlArr:nlArr,nlE:nlE,nlarr:nlarr,nldr:nldr,nle:nle,nleftarrow:nleftarrow,nleftrightarrow:nleftrightarrow,nleq:nleq,nleqq:nleqq,nleqslant:nleqslant,nles:nles,nless:nless,nlsim:nlsim,nlt:nlt,nltri:nltri,nltrie:nltrie,nmid:nmid,nopf:nopf,no:no,not:not,notin:notin,notinE:notinE,notindot:notindot,notinva:notinva,notinvb:notinvb,notinvc:notinvc,notni:notni,notniva:notniva,notnivb:notnivb,notnivc:notnivc,npar:npar,nparallel:nparallel,nparsl:nparsl,npart:npart,npolint:npolint,npr:npr,nprcue:nprcue,npre:npre,nprec:nprec,npreceq:npreceq,nrArr:nrArr,nrarr:nrarr,nrarrc:nrarrc,nrarrw:nrarrw,nrightarrow:nrightarrow,nrtri:nrtri,nrtrie:nrtrie,nsc:nsc,nsccue:nsccue,nsce:nsce,nscr:nscr,nshortmid:nshortmid,nshortparallel:nshortparallel,nsim:nsim,nsime:nsime,nsimeq:nsimeq,nsmid:nsmid,nspar:nspar,nsqsube:nsqsube,nsqsupe:nsqsupe,nsub:nsub,nsubE:nsubE,nsube:nsube,nsubset:nsubset,nsubseteq:nsubseteq,nsubseteqq:nsubseteqq,nsucc:nsucc,nsucceq:nsucceq,nsup:nsup,nsupE:nsupE,nsupe:nsupe,nsupset:nsupset,nsupseteq:nsupseteq,nsupseteqq:nsupseteqq,ntgl:ntgl,ntild:ntild,ntilde:ntilde,ntlg:ntlg,ntriangleleft:ntriangleleft,ntrianglelefteq:ntrianglelefteq,ntriangleright:ntriangleright,ntrianglerighteq:ntrianglerighteq,nu:nu,num:num,numero:numero,numsp:numsp,nvDash:nvDash,nvHarr:nvHarr,nvap:nvap,nvdash:nvdash,nvge:nvge,nvgt:nvgt,nvinfin:nvinfin,nvlArr:nvlArr,nvle:nvle,nvlt:nvlt,nvltrie:nvltrie,nvrArr:nvrArr,nvrtrie:nvrtrie,nvsim:nvsim,nwArr:nwArr,nwarhk:nwarhk,nwarr:nwarr,nwarrow:nwarrow,nwnear:nwnear,oS:oS,oacut:oacut,oacute:oacute,oast:oast,ocir:ocir,ocirc:ocirc,ocy:ocy,odash:odash,odblac:odblac,odiv:odiv,odot:odot,odsold:odsold,oelig:oelig,ofcir:ofcir,ofr:ofr,ogon:ogon,ograv:ograv,ograve:ograve,ogt:ogt,ohbar:ohbar,ohm:ohm,oint:oint,olarr:olarr,olcir:olcir,olcross:olcross,oline:oline,olt:olt,omacr:omacr,omega:omega,omicron:omicron,omid:omid,ominus:ominus,oopf:oopf,opar:opar,operp:operp,oplus:oplus,or:or,orarr:orarr,ord:ord,order:order,orderof:orderof,ordf:ordf,ordm:ordm,origof:origof,oror:oror,orslope:orslope,orv:orv,oscr:oscr,oslas:oslas,oslash:oslash,osol:osol,otild:otild,otilde:otilde,otimes:otimes,otimesas:otimesas,oum:oum,ouml:ouml,ovbar:ovbar,par:par,para:para,parallel:parallel,parsim:parsim,parsl:parsl,part:part,pcy:pcy,percnt:percnt,period:period,permil:permil,perp:perp,pertenk:pertenk,pfr:pfr,phi:phi,phiv:phiv,phmmat:phmmat,phone:phone,pi:pi,pitchfork:pitchfork,piv:piv,planck:planck,planckh:planckh,plankv:plankv,plus:plus,plusacir:plusacir,plusb:plusb,pluscir:pluscir,plusdo:plusdo,plusdu:plusdu,pluse:pluse,plusm:plusm,plusmn:plusmn,plussim:plussim,plustwo:plustwo,pm:pm,pointint:pointint,popf:popf,poun:poun,pound:pound,pr:pr,prE:prE,prap:prap,prcue:prcue,pre:pre,prec:prec,precapprox:precapprox,preccurlyeq:preccurlyeq,preceq:preceq,precnapprox:precnapprox,precneqq:precneqq,precnsim:precnsim,precsim:precsim,prime:prime,primes:primes,prnE:prnE,prnap:prnap,prnsim:prnsim,prod:prod,profalar:profalar,profline:profline,profsurf:profsurf,prop:prop,propto:propto,prsim:prsim,prurel:prurel,pscr:pscr,psi:psi,puncsp:puncsp,qfr:qfr,qint:qint,qopf:qopf,qprime:qprime,qscr:qscr,quaternions:quaternions,quatint:quatint,quest:quest,questeq:questeq,quo:quo,quot:quot,rAarr:rAarr,rArr:rArr,rAtail:rAtail,rBarr:rBarr,rHar:rHar,race:race,racute:racute,radic:radic,raemptyv:raemptyv,rang:rang,rangd:rangd,range:range,rangle:rangle,raqu:raqu,raquo:raquo,rarr:rarr,rarrap:rarrap,rarrb:rarrb,rarrbfs:rarrbfs,rarrc:rarrc,rarrfs:rarrfs,rarrhk:rarrhk,rarrlp:rarrlp,rarrpl:rarrpl,rarrsim:rarrsim,rarrtl:rarrtl,rarrw:rarrw,ratail:ratail,ratio:ratio,rationals:rationals,rbarr:rbarr,rbbrk:rbbrk,rbrace:rbrace,rbrack:rbrack,rbrke:rbrke,rbrksld:rbrksld,rbrkslu:rbrkslu,rcaron:rcaron,rcedil:rcedil,rceil:rceil,rcub:rcub,rcy:rcy,rdca:rdca,rdldhar:rdldhar,rdquo:rdquo,rdquor:rdquor,rdsh:rdsh,real:real,realine:realine,realpart:realpart,reals:reals,rect:rect,re:re,reg:reg,rfisht:rfisht,rfloor:rfloor,rfr:rfr,rhard:rhard,rharu:rharu,rharul:rharul,rho:rho,rhov:rhov,rightarrow:rightarrow,rightarrowtail:rightarrowtail,rightharpoondown:rightharpoondown,rightharpoonup:rightharpoonup,rightleftarrows:rightleftarrows,rightleftharpoons:rightleftharpoons,rightrightarrows:rightrightarrows,rightsquigarrow:rightsquigarrow,rightthreetimes:rightthreetimes,ring:ring,risingdotseq:risingdotseq,rlarr:rlarr,rlhar:rlhar,rlm:rlm,rmoust:rmoust,rmoustache:rmoustache,rnmid:rnmid,roang:roang,roarr:roarr,robrk:robrk,ropar:ropar,ropf:ropf,roplus:roplus,rotimes:rotimes,rpar:rpar,rpargt:rpargt,rppolint:rppolint,rrarr:rrarr,rsaquo:rsaquo,rscr:rscr,rsh:rsh,rsqb:rsqb,rsquo:rsquo,rsquor:rsquor,rthree:rthree,rtimes:rtimes,rtri:rtri,rtrie:rtrie,rtrif:rtrif,rtriltri:rtriltri,ruluhar:ruluhar,rx:rx,sacute:sacute,sbquo:sbquo,sc:sc,scE:scE,scap:scap,scaron:scaron,sccue:sccue,sce:sce,scedil:scedil,scirc:scirc,scnE:scnE,scnap:scnap,scnsim:scnsim,scpolint:scpolint,scsim:scsim,scy:scy,sdot:sdot,sdotb:sdotb,sdote:sdote,seArr:seArr,searhk:searhk,searr:searr,searrow:searrow,sec:sec,sect:sect,semi:semi,seswar:seswar,setminus:setminus,setmn:setmn,sext:sext,sfr:sfr,sfrown:sfrown,sharp:sharp,shchcy:shchcy,shcy:shcy,shortmid:shortmid,shortparallel:shortparallel,sh:sh,shy:shy,sigma:sigma,sigmaf:sigmaf,sigmav:sigmav,sim:sim,simdot:simdot,sime:sime,simeq:simeq,simg:simg,simgE:simgE,siml:siml,simlE:simlE,simne:simne,simplus:simplus,simrarr:simrarr,slarr:slarr,smallsetminus:smallsetminus,smashp:smashp,smeparsl:smeparsl,smid:smid,smile:smile,smt:smt,smte:smte,smtes:smtes,softcy:softcy,sol:sol,solb:solb,solbar:solbar,sopf:sopf,spades:spades,spadesuit:spadesuit,spar:spar,sqcap:sqcap,sqcaps:sqcaps,sqcup:sqcup,sqcups:sqcups,sqsub:sqsub,sqsube:sqsube,sqsubset:sqsubset,sqsubseteq:sqsubseteq,sqsup:sqsup,sqsupe:sqsupe,sqsupset:sqsupset,sqsupseteq:sqsupseteq,squ:squ,square:square,squarf:squarf,squf:squf,srarr:srarr,sscr:sscr,ssetmn:ssetmn,ssmile:ssmile,sstarf:sstarf,star:star,starf:starf,straightepsilon:straightepsilon,straightphi:straightphi,strns:strns,sub:sub,subE:subE,subdot:subdot,sube:sube,subedot:subedot,submult:submult,subnE:subnE,subne:subne,subplus:subplus,subrarr:subrarr,subset:subset,subseteq:subseteq,subseteqq:subseteqq,subsetneq:subsetneq,subsetneqq:subsetneqq,subsim:subsim,subsub:subsub,subsup:subsup,succ:succ,succapprox:succapprox,succcurlyeq:succcurlyeq,succeq:succeq,succnapprox:succnapprox,succneqq:succneqq,succnsim:succnsim,succsim:succsim,sum:sum,sung:sung,sup:sup,sup1:sup1,sup2:sup2,sup3:sup3,supE:supE,supdot:supdot,supdsub:supdsub,supe:supe,supedot:supedot,suphsol:suphsol,suphsub:suphsub,suplarr:suplarr,supmult:supmult,supnE:supnE,supne:supne,supplus:supplus,supset:supset,supseteq:supseteq,supseteqq:supseteqq,supsetneq:supsetneq,supsetneqq:supsetneqq,supsim:supsim,supsub:supsub,supsup:supsup,swArr:swArr,swarhk:swarhk,swarr:swarr,swarrow:swarrow,swnwar:swnwar,szli:szli,szlig:szlig,target:target,tau:tau,tbrk:tbrk,tcaron:tcaron,tcedil:tcedil,tcy:tcy,tdot:tdot,telrec:telrec,tfr:tfr,there4:there4,therefore:therefore,theta:theta,thetasym:thetasym,thetav:thetav,thickapprox:thickapprox,thicksim:thicksim,thinsp:thinsp,thkap:thkap,thksim:thksim,thor:thor,thorn:thorn,tilde:tilde,time:time,times:times,timesb:timesb,timesbar:timesbar,timesd:timesd,tint:tint,toea:toea,top:top,topbot:topbot,topcir:topcir,topf:topf,topfork:topfork,tosa:tosa,tprime:tprime,trade:trade,triangle:triangle,triangledown:triangledown,triangleleft:triangleleft,trianglelefteq:trianglelefteq,triangleq:triangleq,triangleright:triangleright,trianglerighteq:trianglerighteq,tridot:tridot,trie:trie,triminus:triminus,triplus:triplus,trisb:trisb,tritime:tritime,trpezium:trpezium,tscr:tscr,tscy:tscy,tshcy:tshcy,tstrok:tstrok,twixt:twixt,twoheadleftarrow:twoheadleftarrow,twoheadrightarrow:twoheadrightarrow,uArr:uArr,uHar:uHar,uacut:uacut,uacute:uacute,uarr:uarr,ubrcy:ubrcy,ubreve:ubreve,ucir:ucir,ucirc:ucirc,ucy:ucy,udarr:udarr,udblac:udblac,udhar:udhar,ufisht:ufisht,ufr:ufr,ugrav:ugrav,ugrave:ugrave,uharl:uharl,uharr:uharr,uhblk:uhblk,ulcorn:ulcorn,ulcorner:ulcorner,ulcrop:ulcrop,ultri:ultri,umacr:umacr,um:um,uml:uml,uogon:uogon,uopf:uopf,uparrow:uparrow,updownarrow:updownarrow,upharpoonleft:upharpoonleft,upharpoonright:upharpoonright,uplus:uplus,upsi:upsi,upsih:upsih,upsilon:upsilon,upuparrows:upuparrows,urcorn:urcorn,urcorner:urcorner,urcrop:urcrop,uring:uring,urtri:urtri,uscr:uscr,utdot:utdot,utilde:utilde,utri:utri,utrif:utrif,uuarr:uuarr,uum:uum,uuml:uuml,uwangle:uwangle,vArr:vArr,vBar:vBar,vBarv:vBarv,vDash:vDash,vangrt:vangrt,varepsilon:varepsilon,varkappa:varkappa,varnothing:varnothing,varphi:varphi,varpi:varpi,varpropto:varpropto,varr:varr,varrho:varrho,varsigma:varsigma,varsubsetneq:varsubsetneq,varsubsetneqq:varsubsetneqq,varsupsetneq:varsupsetneq,varsupsetneqq:varsupsetneqq,vartheta:vartheta,vartriangleleft:vartriangleleft,vartriangleright:vartriangleright,vcy:vcy,vdash:vdash,vee:vee,veebar:veebar,veeeq:veeeq,vellip:vellip,verbar:verbar,vert:vert,vfr:vfr,vltri:vltri,vnsub:vnsub,vnsup:vnsup,vopf:vopf,vprop:vprop,vrtri:vrtri,vscr:vscr,vsubnE:vsubnE,vsubne:vsubne,vsupnE:vsupnE,vsupne:vsupne,vzigzag:vzigzag,wcirc:wcirc,wedbar:wedbar,wedge:wedge,wedgeq:wedgeq,weierp:weierp,wfr:wfr,wopf:wopf,wp:wp,wr:wr,wreath:wreath,wscr:wscr,xcap:xcap,xcirc:xcirc,xcup:xcup,xdtri:xdtri,xfr:xfr,xhArr:xhArr,xharr:xharr,xi:xi,xlArr:xlArr,xlarr:xlarr,xmap:xmap,xnis:xnis,xodot:xodot,xopf:xopf,xoplus:xoplus,xotime:xotime,xrArr:xrArr,xrarr:xrarr,xscr:xscr,xsqcup:xsqcup,xuplus:xuplus,xutri:xutri,xvee:xvee,xwedge:xwedge,yacut:yacut,yacute:yacute,yacy:yacy,ycirc:ycirc,ycy:ycy,ye:ye,yen:yen,yfr:yfr,yicy:yicy,yopf:yopf,yscr:yscr,yucy:yucy,yum:yum,yuml:yuml,zacute:zacute,zcaron:zcaron,zcy:zcy,zdot:zdot,zeetrf:zeetrf,zeta:zeta,zfr:zfr,zhcy:zhcy,zigrarr:zigrarr,zopf:zopf,zscr:zscr,zwj:zwj,zwnj:zwnj,Map:"⤅",in:"∈"},index$15=Object.freeze({AEli:AEli,AElig:AElig,AM:AM,AMP:AMP,Aacut:Aacut,Aacute:Aacute,Abreve:Abreve,Acir:Acir,Acirc:Acirc,Acy:Acy,Afr:Afr,Agrav:Agrav,Agrave:Agrave,Alpha:Alpha,Amacr:Amacr,And:And,Aogon:Aogon,Aopf:Aopf,ApplyFunction:ApplyFunction,Arin:Arin,Aring:Aring,Ascr:Ascr,Assign:Assign,Atild:Atild,Atilde:Atilde,Aum:Aum,Auml:Auml,Backslash:Backslash,Barv:Barv,Barwed:Barwed,Bcy:Bcy,Because:Because,Bernoullis:Bernoullis,Beta:Beta,Bfr:Bfr,Bopf:Bopf,Breve:Breve,Bscr:Bscr,Bumpeq:Bumpeq,CHcy:CHcy,COP:COP,COPY:COPY,Cacute:Cacute,Cap:Cap,CapitalDifferentialD:CapitalDifferentialD,Cayleys:Cayleys,Ccaron:Ccaron,Ccedi:Ccedi,Ccedil:Ccedil,Ccirc:Ccirc,Cconint:Cconint,Cdot:Cdot,Cedilla:Cedilla,CenterDot:CenterDot,Cfr:Cfr,Chi:Chi,CircleDot:CircleDot,CircleMinus:CircleMinus,CirclePlus:CirclePlus,CircleTimes:CircleTimes,ClockwiseContourIntegral:ClockwiseContourIntegral,CloseCurlyDoubleQuote:CloseCurlyDoubleQuote,CloseCurlyQuote:CloseCurlyQuote,Colon:Colon,Colone:Colone,Congruent:Congruent,Conint:Conint,ContourIntegral:ContourIntegral,Copf:Copf,Coproduct:Coproduct,CounterClockwiseContourIntegral:CounterClockwiseContourIntegral,Cross:Cross,Cscr:Cscr,Cup:Cup,CupCap:CupCap,DD:DD,DDotrahd:DDotrahd,DJcy:DJcy,DScy:DScy,DZcy:DZcy,Dagger:Dagger,Darr:Darr,Dashv:Dashv,Dcaron:Dcaron,Dcy:Dcy,Del:Del,Delta:Delta,Dfr:Dfr,DiacriticalAcute:DiacriticalAcute,DiacriticalDot:DiacriticalDot,DiacriticalDoubleAcute:DiacriticalDoubleAcute,DiacriticalGrave:DiacriticalGrave,DiacriticalTilde:DiacriticalTilde,Diamond:Diamond,DifferentialD:DifferentialD,Dopf:Dopf,Dot:Dot,DotDot:DotDot,DotEqual:DotEqual,DoubleContourIntegral:DoubleContourIntegral,DoubleDot:DoubleDot,DoubleDownArrow:DoubleDownArrow,DoubleLeftArrow:DoubleLeftArrow,DoubleLeftRightArrow:DoubleLeftRightArrow,DoubleLeftTee:DoubleLeftTee,DoubleLongLeftArrow:DoubleLongLeftArrow,DoubleLongLeftRightArrow:DoubleLongLeftRightArrow,DoubleLongRightArrow:DoubleLongRightArrow,DoubleRightArrow:DoubleRightArrow,DoubleRightTee:DoubleRightTee,DoubleUpArrow:DoubleUpArrow,DoubleUpDownArrow:DoubleUpDownArrow,DoubleVerticalBar:DoubleVerticalBar,DownArrow:DownArrow,DownArrowBar:DownArrowBar,DownArrowUpArrow:DownArrowUpArrow,DownBreve:DownBreve,DownLeftRightVector:DownLeftRightVector,DownLeftTeeVector:DownLeftTeeVector,DownLeftVector:DownLeftVector,DownLeftVectorBar:DownLeftVectorBar,DownRightTeeVector:DownRightTeeVector,DownRightVector:DownRightVector,DownRightVectorBar:DownRightVectorBar,DownTee:DownTee,DownTeeArrow:DownTeeArrow,Downarrow:Downarrow,Dscr:Dscr,Dstrok:Dstrok,ENG:ENG,ET:ET,ETH:ETH,Eacut:Eacut,Eacute:Eacute,Ecaron:Ecaron,Ecir:Ecir,Ecirc:Ecirc,Ecy:Ecy,Edot:Edot,Efr:Efr,Egrav:Egrav,Egrave:Egrave,Element:Element,Emacr:Emacr,EmptySmallSquare:EmptySmallSquare,EmptyVerySmallSquare:EmptyVerySmallSquare,Eogon:Eogon,Eopf:Eopf,Epsilon:Epsilon,Equal:Equal,EqualTilde:EqualTilde,Equilibrium:Equilibrium,Escr:Escr,Esim:Esim,Eta:Eta,Eum:Eum,Euml:Euml,Exists:Exists,ExponentialE:ExponentialE,Fcy:Fcy,Ffr:Ffr,FilledSmallSquare:FilledSmallSquare,FilledVerySmallSquare:FilledVerySmallSquare,Fopf:Fopf,ForAll:ForAll,Fouriertrf:Fouriertrf,Fscr:Fscr,GJcy:GJcy,G:G,GT:GT,Gamma:Gamma,Gammad:Gammad,Gbreve:Gbreve,Gcedil:Gcedil,Gcirc:Gcirc,Gcy:Gcy,Gdot:Gdot,Gfr:Gfr,Gg:Gg,Gopf:Gopf,GreaterEqual:GreaterEqual,GreaterEqualLess:GreaterEqualLess,GreaterFullEqual:GreaterFullEqual,GreaterGreater:GreaterGreater,GreaterLess:GreaterLess,GreaterSlantEqual:GreaterSlantEqual,GreaterTilde:GreaterTilde,Gscr:Gscr,Gt:Gt,HARDcy:HARDcy,Hacek:Hacek,Hat:Hat,Hcirc:Hcirc,Hfr:Hfr,HilbertSpace:HilbertSpace,Hopf:Hopf,HorizontalLine:HorizontalLine,Hscr:Hscr,Hstrok:Hstrok,HumpDownHump:HumpDownHump,HumpEqual:HumpEqual,IEcy:IEcy,IJlig:IJlig,IOcy:IOcy,Iacut:Iacut,Iacute:Iacute,Icir:Icir,Icirc:Icirc,Icy:Icy,Idot:Idot,Ifr:Ifr,Igrav:Igrav,Igrave:Igrave,Im:Im,Imacr:Imacr,ImaginaryI:ImaginaryI,Implies:Implies,Int:Int,Integral:Integral,Intersection:Intersection,InvisibleComma:InvisibleComma,InvisibleTimes:InvisibleTimes,Iogon:Iogon,Iopf:Iopf,Iota:Iota,Iscr:Iscr,Itilde:Itilde,Iukcy:Iukcy,Ium:Ium,Iuml:Iuml,Jcirc:Jcirc,Jcy:Jcy,Jfr:Jfr,Jopf:Jopf,Jscr:Jscr,Jsercy:Jsercy,Jukcy:Jukcy,KHcy:KHcy,KJcy:KJcy,Kappa:Kappa,Kcedil:Kcedil,Kcy:Kcy,Kfr:Kfr,Kopf:Kopf,Kscr:Kscr,LJcy:LJcy,L:L,LT:LT,Lacute:Lacute,Lambda:Lambda,Lang:Lang,Laplacetrf:Laplacetrf,Larr:Larr,Lcaron:Lcaron,Lcedil:Lcedil,Lcy:Lcy,LeftAngleBracket:LeftAngleBracket,LeftArrow:LeftArrow,LeftArrowBar:LeftArrowBar,LeftArrowRightArrow:LeftArrowRightArrow,LeftCeiling:LeftCeiling,LeftDoubleBracket:LeftDoubleBracket,LeftDownTeeVector:LeftDownTeeVector,LeftDownVector:LeftDownVector,LeftDownVectorBar:LeftDownVectorBar,LeftFloor:LeftFloor,LeftRightArrow:LeftRightArrow,LeftRightVector:LeftRightVector,LeftTee:LeftTee,LeftTeeArrow:LeftTeeArrow,LeftTeeVector:LeftTeeVector,LeftTriangle:LeftTriangle,LeftTriangleBar:LeftTriangleBar,LeftTriangleEqual:LeftTriangleEqual,LeftUpDownVector:LeftUpDownVector,LeftUpTeeVector:LeftUpTeeVector,LeftUpVector:LeftUpVector,LeftUpVectorBar:LeftUpVectorBar,LeftVector:LeftVector,LeftVectorBar:LeftVectorBar,Leftarrow:Leftarrow,Leftrightarrow:Leftrightarrow,LessEqualGreater:LessEqualGreater,LessFullEqual:LessFullEqual,LessGreater:LessGreater,LessLess:LessLess,LessSlantEqual:LessSlantEqual,LessTilde:LessTilde,Lfr:Lfr,Ll:Ll,Lleftarrow:Lleftarrow,Lmidot:Lmidot,LongLeftArrow:LongLeftArrow,LongLeftRightArrow:LongLeftRightArrow,LongRightArrow:LongRightArrow,Longleftarrow:Longleftarrow,Longleftrightarrow:Longleftrightarrow,Longrightarrow:Longrightarrow,Lopf:Lopf,LowerLeftArrow:LowerLeftArrow,LowerRightArrow:LowerRightArrow,Lscr:Lscr,Lsh:Lsh,Lstrok:Lstrok,Lt:Lt,Mcy:Mcy,MediumSpace:MediumSpace,Mellintrf:Mellintrf,Mfr:Mfr,MinusPlus:MinusPlus,Mopf:Mopf,Mscr:Mscr,Mu:Mu,NJcy:NJcy,Nacute:Nacute,Ncaron:Ncaron,Ncedil:Ncedil,Ncy:Ncy,NegativeMediumSpace:NegativeMediumSpace,NegativeThickSpace:NegativeThickSpace,NegativeThinSpace:NegativeThinSpace,NegativeVeryThinSpace:NegativeVeryThinSpace,NestedGreaterGreater:NestedGreaterGreater,NestedLessLess:NestedLessLess,NewLine:NewLine,Nfr:Nfr,NoBreak:NoBreak,NonBreakingSpace:NonBreakingSpace,Nopf:Nopf,Not:Not,NotCongruent:NotCongruent,NotCupCap:NotCupCap,NotDoubleVerticalBar:NotDoubleVerticalBar,NotElement:NotElement,NotEqual:NotEqual,NotEqualTilde:NotEqualTilde,NotExists:NotExists,NotGreater:NotGreater,NotGreaterEqual:NotGreaterEqual,NotGreaterFullEqual:NotGreaterFullEqual,NotGreaterGreater:NotGreaterGreater,NotGreaterLess:NotGreaterLess,NotGreaterSlantEqual:NotGreaterSlantEqual,NotGreaterTilde:NotGreaterTilde,NotHumpDownHump:NotHumpDownHump,NotHumpEqual:NotHumpEqual,NotLeftTriangle:NotLeftTriangle,NotLeftTriangleBar:NotLeftTriangleBar,NotLeftTriangleEqual:NotLeftTriangleEqual,NotLess:NotLess,NotLessEqual:NotLessEqual,NotLessGreater:NotLessGreater,NotLessLess:NotLessLess,NotLessSlantEqual:NotLessSlantEqual,NotLessTilde:NotLessTilde,NotNestedGreaterGreater:NotNestedGreaterGreater,NotNestedLessLess:NotNestedLessLess,NotPrecedes:NotPrecedes,NotPrecedesEqual:NotPrecedesEqual,NotPrecedesSlantEqual:NotPrecedesSlantEqual,NotReverseElement:NotReverseElement,NotRightTriangle:NotRightTriangle,NotRightTriangleBar:NotRightTriangleBar,NotRightTriangleEqual:NotRightTriangleEqual,NotSquareSubset:NotSquareSubset,NotSquareSubsetEqual:NotSquareSubsetEqual,NotSquareSuperset:NotSquareSuperset,NotSquareSupersetEqual:NotSquareSupersetEqual,NotSubset:NotSubset,NotSubsetEqual:NotSubsetEqual,NotSucceeds:NotSucceeds,NotSucceedsEqual:NotSucceedsEqual,NotSucceedsSlantEqual:NotSucceedsSlantEqual,NotSucceedsTilde:NotSucceedsTilde,NotSuperset:NotSuperset,NotSupersetEqual:NotSupersetEqual,NotTilde:NotTilde,NotTildeEqual:NotTildeEqual,NotTildeFullEqual:NotTildeFullEqual,NotTildeTilde:NotTildeTilde,NotVerticalBar:NotVerticalBar,Nscr:Nscr,Ntild:Ntild,Ntilde:Ntilde,Nu:Nu,OElig:OElig,Oacut:Oacut,Oacute:Oacute,Ocir:Ocir,Ocirc:Ocirc,Ocy:Ocy,Odblac:Odblac,Ofr:Ofr,Ograv:Ograv,Ograve:Ograve,Omacr:Omacr,Omega:Omega,Omicron:Omicron,Oopf:Oopf,OpenCurlyDoubleQuote:OpenCurlyDoubleQuote,OpenCurlyQuote:OpenCurlyQuote,Or:Or,Oscr:Oscr,Oslas:Oslas,Oslash:Oslash,Otild:Otild,Otilde:Otilde,Otimes:Otimes,Oum:Oum,Ouml:Ouml,OverBar:OverBar,OverBrace:OverBrace,OverBracket:OverBracket,OverParenthesis:OverParenthesis,PartialD:PartialD,Pcy:Pcy,Pfr:Pfr,Phi:Phi,Pi:Pi,PlusMinus:PlusMinus,Poincareplane:Poincareplane,Popf:Popf,Pr:Pr,Precedes:Precedes,PrecedesEqual:PrecedesEqual,PrecedesSlantEqual:PrecedesSlantEqual,PrecedesTilde:PrecedesTilde,Prime:Prime,Product:Product,Proportion:Proportion,Proportional:Proportional,Pscr:Pscr,Psi:Psi,QUO:QUO,QUOT:QUOT,Qfr:Qfr,Qopf:Qopf,Qscr:Qscr,RBarr:RBarr,RE:RE,REG:REG,Racute:Racute,Rang:Rang,Rarr:Rarr,Rarrtl:Rarrtl,Rcaron:Rcaron,Rcedil:Rcedil,Rcy:Rcy,Re:Re,ReverseElement:ReverseElement,ReverseEquilibrium:ReverseEquilibrium,ReverseUpEquilibrium:ReverseUpEquilibrium,Rfr:Rfr,Rho:Rho,RightAngleBracket:RightAngleBracket,RightArrow:RightArrow,RightArrowBar:RightArrowBar,RightArrowLeftArrow:RightArrowLeftArrow,RightCeiling:RightCeiling,RightDoubleBracket:RightDoubleBracket,RightDownTeeVector:RightDownTeeVector,RightDownVector:RightDownVector,RightDownVectorBar:RightDownVectorBar,RightFloor:RightFloor,RightTee:RightTee,RightTeeArrow:RightTeeArrow,RightTeeVector:RightTeeVector,RightTriangle:RightTriangle,RightTriangleBar:RightTriangleBar,RightTriangleEqual:RightTriangleEqual,RightUpDownVector:RightUpDownVector,RightUpTeeVector:RightUpTeeVector,RightUpVector:RightUpVector,RightUpVectorBar:RightUpVectorBar,RightVector:RightVector,RightVectorBar:RightVectorBar,Rightarrow:Rightarrow,Ropf:Ropf,RoundImplies:RoundImplies,Rrightarrow:Rrightarrow,Rscr:Rscr,Rsh:Rsh,RuleDelayed:RuleDelayed,SHCHcy:SHCHcy,SHcy:SHcy,SOFTcy:SOFTcy,Sacute:Sacute,Sc:Sc,Scaron:Scaron,Scedil:Scedil,Scirc:Scirc,Scy:Scy,Sfr:Sfr,ShortDownArrow:ShortDownArrow,ShortLeftArrow:ShortLeftArrow,ShortRightArrow:ShortRightArrow,ShortUpArrow:ShortUpArrow,Sigma:Sigma,SmallCircle:SmallCircle,Sopf:Sopf,Sqrt:Sqrt,Square:Square,SquareIntersection:SquareIntersection,SquareSubset:SquareSubset,SquareSubsetEqual:SquareSubsetEqual,SquareSuperset:SquareSuperset,SquareSupersetEqual:SquareSupersetEqual,SquareUnion:SquareUnion,Sscr:Sscr,Star:Star,Sub:Sub,Subset:Subset,SubsetEqual:SubsetEqual,Succeeds:Succeeds,SucceedsEqual:SucceedsEqual,SucceedsSlantEqual:SucceedsSlantEqual,SucceedsTilde:SucceedsTilde,SuchThat:SuchThat,Sum:Sum,Sup:Sup,Superset:Superset,SupersetEqual:SupersetEqual,Supset:Supset,THOR:THOR,THORN:THORN,TRADE:TRADE,TSHcy:TSHcy,TScy:TScy,Tab:Tab,Tau:Tau,Tcaron:Tcaron,Tcedil:Tcedil,Tcy:Tcy,Tfr:Tfr,Therefore:Therefore,Theta:Theta,ThickSpace:ThickSpace,ThinSpace:ThinSpace,Tilde:Tilde,TildeEqual:TildeEqual,TildeFullEqual:TildeFullEqual,TildeTilde:TildeTilde,Topf:Topf,TripleDot:TripleDot,Tscr:Tscr,Tstrok:Tstrok,Uacut:Uacut,Uacute:Uacute,Uarr:Uarr,Uarrocir:Uarrocir,Ubrcy:Ubrcy,Ubreve:Ubreve,Ucir:Ucir,Ucirc:Ucirc,Ucy:Ucy,Udblac:Udblac,Ufr:Ufr,Ugrav:Ugrav,Ugrave:Ugrave,Umacr:Umacr,UnderBar:UnderBar,UnderBrace:UnderBrace,UnderBracket:UnderBracket,UnderParenthesis:UnderParenthesis,Union:Union,UnionPlus:UnionPlus,Uogon:Uogon,Uopf:Uopf,UpArrow:UpArrow,UpArrowBar:UpArrowBar,UpArrowDownArrow:UpArrowDownArrow,UpDownArrow:UpDownArrow,UpEquilibrium:UpEquilibrium,UpTee:UpTee,UpTeeArrow:UpTeeArrow,Uparrow:Uparrow,Updownarrow:Updownarrow,UpperLeftArrow:UpperLeftArrow,UpperRightArrow:UpperRightArrow,Upsi:Upsi,Upsilon:Upsilon,Uring:Uring,Uscr:Uscr,Utilde:Utilde,Uum:Uum,Uuml:Uuml,VDash:VDash,Vbar:Vbar,Vcy:Vcy,Vdash:Vdash,Vdashl:Vdashl,Vee:Vee,Verbar:Verbar,Vert:Vert,VerticalBar:VerticalBar,VerticalLine:VerticalLine,VerticalSeparator:VerticalSeparator,VerticalTilde:VerticalTilde,VeryThinSpace:VeryThinSpace,Vfr:Vfr,Vopf:Vopf,Vscr:Vscr,Vvdash:Vvdash,Wcirc:Wcirc,Wedge:Wedge,Wfr:Wfr,Wopf:Wopf,Wscr:Wscr,Xfr:Xfr,Xi:Xi,Xopf:Xopf,Xscr:Xscr,YAcy:YAcy,YIcy:YIcy,YUcy:YUcy,Yacut:Yacut,Yacute:Yacute,Ycirc:Ycirc,Ycy:Ycy,Yfr:Yfr,Yopf:Yopf,Yscr:Yscr,Yuml:Yuml,ZHcy:ZHcy,Zacute:Zacute,Zcaron:Zcaron,Zcy:Zcy,Zdot:Zdot,ZeroWidthSpace:ZeroWidthSpace,Zeta:Zeta,Zfr:Zfr,Zopf:Zopf,Zscr:Zscr,aacut:aacut,aacute:aacute,abreve:abreve,ac:ac,acE:acE,acd:acd,acir:acir,acirc:acirc,acut:acut,acute:acute,acy:acy,aeli:aeli,aelig:aelig,af:af,afr:afr,agrav:agrav,agrave:agrave,alefsym:alefsym,aleph:aleph,alpha:alpha,amacr:amacr,amalg:amalg,am:am,amp:amp,and:and,andand:andand,andd:andd,andslope:andslope,andv:andv,ang:ang,ange:ange,angle:angle,angmsd:angmsd,angmsdaa:angmsdaa,angmsdab:angmsdab,angmsdac:angmsdac,angmsdad:angmsdad,angmsdae:angmsdae,angmsdaf:angmsdaf,angmsdag:angmsdag,angmsdah:angmsdah,angrt:angrt,angrtvb:angrtvb,angrtvbd:angrtvbd,angsph:angsph,angst:angst,angzarr:angzarr,aogon:aogon,aopf:aopf,ap:ap,apE:apE,apacir:apacir,ape:ape,apid:apid,apos:apos,approx:approx,approxeq:approxeq,arin:arin,aring:aring,ascr:ascr,ast:ast,asymp:asymp,asympeq:asympeq,atild:atild,atilde:atilde,aum:aum,auml:auml,awconint:awconint,awint:awint,bNot:bNot,backcong:backcong,backepsilon:backepsilon,backprime:backprime,backsim:backsim,backsimeq:backsimeq,barvee:barvee,barwed:barwed,barwedge:barwedge,bbrk:bbrk,bbrktbrk:bbrktbrk,bcong:bcong,bcy:bcy,bdquo:bdquo,becaus:becaus,because:because,bemptyv:bemptyv,bepsi:bepsi,bernou:bernou,beta:beta,beth:beth,between:between,bfr:bfr,bigcap:bigcap,bigcirc:bigcirc,bigcup:bigcup,bigodot:bigodot,bigoplus:bigoplus,bigotimes:bigotimes,bigsqcup:bigsqcup,bigstar:bigstar,bigtriangledown:bigtriangledown,bigtriangleup:bigtriangleup,biguplus:biguplus,bigvee:bigvee,bigwedge:bigwedge,bkarow:bkarow,blacklozenge:blacklozenge,blacksquare:blacksquare,blacktriangle:blacktriangle,blacktriangledown:blacktriangledown,blacktriangleleft:blacktriangleleft,blacktriangleright:blacktriangleright,blank:blank,blk12:blk12,blk14:blk14,blk34:blk34,block:block,bne:bne,bnequiv:bnequiv,bnot:bnot,bopf:bopf,bot:bot,bottom:bottom,bowtie:bowtie,boxDL:boxDL,boxDR:boxDR,boxDl:boxDl,boxDr:boxDr,boxH:boxH,boxHD:boxHD,boxHU:boxHU,boxHd:boxHd,boxHu:boxHu,boxUL:boxUL,boxUR:boxUR,boxUl:boxUl,boxUr:boxUr,boxV:boxV,boxVH:boxVH,boxVL:boxVL,boxVR:boxVR,boxVh:boxVh,boxVl:boxVl,boxVr:boxVr,boxbox:boxbox,boxdL:boxdL,boxdR:boxdR,boxdl:boxdl,boxdr:boxdr,boxh:boxh,boxhD:boxhD,boxhU:boxhU,boxhd:boxhd,boxhu:boxhu,boxminus:boxminus,boxplus:boxplus,boxtimes:boxtimes,boxuL:boxuL,boxuR:boxuR,boxul:boxul,boxur:boxur,boxv:boxv,boxvH:boxvH,boxvL:boxvL,boxvR:boxvR,boxvh:boxvh,boxvl:boxvl,boxvr:boxvr,bprime:bprime,breve:breve,brvba:brvba,brvbar:brvbar,bscr:bscr,bsemi:bsemi,bsim:bsim,bsime:bsime,bsol:bsol,bsolb:bsolb,bsolhsub:bsolhsub,bull:bull,bullet:bullet,bump:bump,bumpE:bumpE,bumpe:bumpe,bumpeq:bumpeq,cacute:cacute,cap:cap,capand:capand,capbrcup:capbrcup,capcap:capcap,capcup:capcup,capdot:capdot,caps:caps,caret:caret,caron:caron,ccaps:ccaps,ccaron:ccaron,ccedi:ccedi,ccedil:ccedil,ccirc:ccirc,ccups:ccups,ccupssm:ccupssm,cdot:cdot,cedi:cedi,cedil:cedil,cemptyv:cemptyv,cen:cen,cent:cent,centerdot:centerdot,cfr:cfr,chcy:chcy,check:check,checkmark:checkmark,chi:chi,cir:cir,cirE:cirE,circ:circ,circeq:circeq,circlearrowleft:circlearrowleft,circlearrowright:circlearrowright,circledR:circledR,circledS:circledS,circledast:circledast,circledcirc:circledcirc,circleddash:circleddash,cire:cire,cirfnint:cirfnint,cirmid:cirmid,cirscir:cirscir,clubs:clubs,clubsuit:clubsuit,colon:colon,colone:colone,coloneq:coloneq,comma:comma,commat:commat,comp:comp,compfn:compfn,complement:complement,complexes:complexes,cong:cong,congdot:congdot,conint:conint,copf:copf,coprod:coprod,cop:cop,copy:copy,copysr:copysr,crarr:crarr,cross:cross,cscr:cscr,csub:csub,csube:csube,csup:csup,csupe:csupe,ctdot:ctdot,cudarrl:cudarrl,cudarrr:cudarrr,cuepr:cuepr,cuesc:cuesc,cularr:cularr,cularrp:cularrp,cup:cup,cupbrcap:cupbrcap,cupcap:cupcap,cupcup:cupcup,cupdot:cupdot,cupor:cupor,cups:cups,curarr:curarr,curarrm:curarrm,curlyeqprec:curlyeqprec,curlyeqsucc:curlyeqsucc,curlyvee:curlyvee,curlywedge:curlywedge,curre:curre,curren:curren,curvearrowleft:curvearrowleft,curvearrowright:curvearrowright,cuvee:cuvee,cuwed:cuwed,cwconint:cwconint,cwint:cwint,cylcty:cylcty,dArr:dArr,dHar:dHar,dagger:dagger,daleth:daleth,darr:darr,dash:dash,dashv:dashv,dbkarow:dbkarow,dblac:dblac,dcaron:dcaron,dcy:dcy,dd:dd,ddagger:ddagger,ddarr:ddarr,ddotseq:ddotseq,de:de,deg:deg,delta:delta,demptyv:demptyv,dfisht:dfisht,dfr:dfr,dharl:dharl,dharr:dharr,diam:diam,diamond:diamond,diamondsuit:diamondsuit,diams:diams,die:die,digamma:digamma,disin:disin,div:div,divid:divid,divide:divide,divideontimes:divideontimes,divonx:divonx,djcy:djcy,dlcorn:dlcorn,dlcrop:dlcrop,dollar:dollar,dopf:dopf,dot:dot,doteq:doteq,doteqdot:doteqdot,dotminus:dotminus,dotplus:dotplus,dotsquare:dotsquare,doublebarwedge:doublebarwedge,downarrow:downarrow,downdownarrows:downdownarrows,downharpoonleft:downharpoonleft,downharpoonright:downharpoonright,drbkarow:drbkarow,drcorn:drcorn,drcrop:drcrop,dscr:dscr,dscy:dscy,dsol:dsol,dstrok:dstrok,dtdot:dtdot,dtri:dtri,dtrif:dtrif,duarr:duarr,duhar:duhar,dwangle:dwangle,dzcy:dzcy,dzigrarr:dzigrarr,eDDot:eDDot,eDot:eDot,eacut:eacut,eacute:eacute,easter:easter,ecaron:ecaron,ecir:ecir,ecirc:ecirc,ecolon:ecolon,ecy:ecy,edot:edot,ee:ee,efDot:efDot,efr:efr,eg:eg,egrav:egrav,egrave:egrave,egs:egs,egsdot:egsdot,el:el,elinters:elinters,ell:ell,els:els,elsdot:elsdot,emacr:emacr,empty:empty,emptyset:emptyset,emptyv:emptyv,emsp13:emsp13,emsp14:emsp14,emsp:emsp,eng:eng,ensp:ensp,eogon:eogon,eopf:eopf,epar:epar,eparsl:eparsl,eplus:eplus,epsi:epsi,epsilon:epsilon,epsiv:epsiv,eqcirc:eqcirc,eqcolon:eqcolon,eqsim:eqsim,eqslantgtr:eqslantgtr,eqslantless:eqslantless,equals:equals,equest:equest,equiv:equiv,equivDD:equivDD,eqvparsl:eqvparsl,erDot:erDot,erarr:erarr,escr:escr,esdot:esdot,esim:esim,eta:eta,et:et,eth:eth,eum:eum,euml:euml,euro:euro,excl:excl,exist:exist,expectation:expectation,exponentiale:exponentiale,fallingdotseq:fallingdotseq,fcy:fcy,female:female,ffilig:ffilig,fflig:fflig,ffllig:ffllig,ffr:ffr,filig:filig,fjlig:fjlig,flat:flat,fllig:fllig,fltns:fltns,fnof:fnof,fopf:fopf,forall:forall,fork:fork,forkv:forkv,fpartint:fpartint,frac1:frac1,frac12:frac12,frac13:frac13,frac14:frac14,frac15:frac15,frac16:frac16,frac18:frac18,frac23:frac23,frac25:frac25,frac3:frac3,frac34:frac34,frac35:frac35,frac38:frac38,frac45:frac45,frac56:frac56,frac58:frac58,frac78:frac78,frasl:frasl,frown:frown,fscr:fscr,gE:gE,gEl:gEl,gacute:gacute,gamma:gamma,gammad:gammad,gap:gap,gbreve:gbreve,gcirc:gcirc,gcy:gcy,gdot:gdot,ge:ge,gel:gel,geq:geq,geqq:geqq,geqslant:geqslant,ges:ges,gescc:gescc,gesdot:gesdot,gesdoto:gesdoto,gesdotol:gesdotol,gesl:gesl,gesles:gesles,gfr:gfr,gg:gg,ggg:ggg,gimel:gimel,gjcy:gjcy,gl:gl,glE:glE,gla:gla,glj:glj,gnE:gnE,gnap:gnap,gnapprox:gnapprox,gne:gne,gneq:gneq,gneqq:gneqq,gnsim:gnsim,gopf:gopf,grave:grave,gscr:gscr,gsim:gsim,gsime:gsime,gsiml:gsiml,g:g,gt:gt,gtcc:gtcc,gtcir:gtcir,gtdot:gtdot,gtlPar:gtlPar,gtquest:gtquest,gtrapprox:gtrapprox,gtrarr:gtrarr,gtrdot:gtrdot,gtreqless:gtreqless,gtreqqless:gtreqqless,gtrless:gtrless,gtrsim:gtrsim,gvertneqq:gvertneqq,gvnE:gvnE,hArr:hArr,hairsp:hairsp,half:half,hamilt:hamilt,hardcy:hardcy,harr:harr,harrcir:harrcir,harrw:harrw,hbar:hbar,hcirc:hcirc,hearts:hearts,heartsuit:heartsuit,hellip:hellip,hercon:hercon,hfr:hfr,hksearow:hksearow,hkswarow:hkswarow,hoarr:hoarr,homtht:homtht,hookleftarrow:hookleftarrow,hookrightarrow:hookrightarrow,hopf:hopf,horbar:horbar,hscr:hscr,hslash:hslash,hstrok:hstrok,hybull:hybull,hyphen:hyphen,iacut:iacut,iacute:iacute,ic:ic,icir:icir,icirc:icirc,icy:icy,iecy:iecy,iexc:iexc,iexcl:iexcl,iff:iff,ifr:ifr,igrav:igrav,igrave:igrave,ii:ii,iiiint:iiiint,iiint:iiint,iinfin:iinfin,iiota:iiota,ijlig:ijlig,imacr:imacr,image:image,imagline:imagline,imagpart:imagpart,imath:imath,imof:imof,imped:imped,incare:incare,infin:infin,infintie:infintie,inodot:inodot,int:int,intcal:intcal,integers:integers,intercal:intercal,intlarhk:intlarhk,intprod:intprod,iocy:iocy,iogon:iogon,iopf:iopf,iota:iota,iprod:iprod,iques:iques,iquest:iquest,iscr:iscr,isin:isin,isinE:isinE,isindot:isindot,isins:isins,isinsv:isinsv,isinv:isinv,it:it,itilde:itilde,iukcy:iukcy,ium:ium,iuml:iuml,jcirc:jcirc,jcy:jcy,jfr:jfr,jmath:jmath,jopf:jopf,jscr:jscr,jsercy:jsercy,jukcy:jukcy,kappa:kappa,kappav:kappav,kcedil:kcedil,kcy:kcy,kfr:kfr,kgreen:kgreen,khcy:khcy,kjcy:kjcy,kopf:kopf,kscr:kscr,lAarr:lAarr,lArr:lArr,lAtail:lAtail,lBarr:lBarr,lE:lE,lEg:lEg,lHar:lHar,lacute:lacute,laemptyv:laemptyv,lagran:lagran,lambda:lambda,lang:lang,langd:langd,langle:langle,lap:lap,laqu:laqu,laquo:laquo,larr:larr,larrb:larrb,larrbfs:larrbfs,larrfs:larrfs,larrhk:larrhk,larrlp:larrlp,larrpl:larrpl,larrsim:larrsim,larrtl:larrtl,lat:lat,latail:latail,late:late,lates:lates,lbarr:lbarr,lbbrk:lbbrk,lbrace:lbrace,lbrack:lbrack,lbrke:lbrke,lbrksld:lbrksld,lbrkslu:lbrkslu,lcaron:lcaron,lcedil:lcedil,lceil:lceil,lcub:lcub,lcy:lcy,ldca:ldca,ldquo:ldquo,ldquor:ldquor,ldrdhar:ldrdhar,ldrushar:ldrushar,ldsh:ldsh,le:le,leftarrow:leftarrow,leftarrowtail:leftarrowtail,leftharpoondown:leftharpoondown,leftharpoonup:leftharpoonup,leftleftarrows:leftleftarrows,leftrightarrow:leftrightarrow,leftrightarrows:leftrightarrows,leftrightharpoons:leftrightharpoons,leftrightsquigarrow:leftrightsquigarrow,leftthreetimes:leftthreetimes,leg:leg,leq:leq,leqq:leqq,leqslant:leqslant,les:les,lescc:lescc,lesdot:lesdot,lesdoto:lesdoto,lesdotor:lesdotor,lesg:lesg,lesges:lesges,lessapprox:lessapprox,lessdot:lessdot,lesseqgtr:lesseqgtr,lesseqqgtr:lesseqqgtr,lessgtr:lessgtr,lesssim:lesssim,lfisht:lfisht,lfloor:lfloor,lfr:lfr,lg:lg,lgE:lgE,lhard:lhard,lharu:lharu,lharul:lharul,lhblk:lhblk,ljcy:ljcy,ll:ll,llarr:llarr,llcorner:llcorner,llhard:llhard,lltri:lltri,lmidot:lmidot,lmoust:lmoust,lmoustache:lmoustache,lnE:lnE,lnap:lnap,lnapprox:lnapprox,lne:lne,lneq:lneq,lneqq:lneqq,lnsim:lnsim,loang:loang,loarr:loarr,lobrk:lobrk,longleftarrow:longleftarrow,longleftrightarrow:longleftrightarrow,longmapsto:longmapsto,longrightarrow:longrightarrow,looparrowleft:looparrowleft,looparrowright:looparrowright,lopar:lopar,lopf:lopf,loplus:loplus,lotimes:lotimes,lowast:lowast,lowbar:lowbar,loz:loz,lozenge:lozenge,lozf:lozf,lpar:lpar,lparlt:lparlt,lrarr:lrarr,lrcorner:lrcorner,lrhar:lrhar,lrhard:lrhard,lrm:lrm,lrtri:lrtri,lsaquo:lsaquo,lscr:lscr,lsh:lsh,lsim:lsim,lsime:lsime,lsimg:lsimg,lsqb:lsqb,lsquo:lsquo,lsquor:lsquor,lstrok:lstrok,l:l,lt:lt,ltcc:ltcc,ltcir:ltcir,ltdot:ltdot,lthree:lthree,ltimes:ltimes,ltlarr:ltlarr,ltquest:ltquest,ltrPar:ltrPar,ltri:ltri,ltrie:ltrie,ltrif:ltrif,lurdshar:lurdshar,luruhar:luruhar,lvertneqq:lvertneqq,lvnE:lvnE,mDDot:mDDot,mac:mac,macr:macr,male:male,malt:malt,maltese:maltese,map:map$1,mapsto:mapsto,mapstodown:mapstodown,mapstoleft:mapstoleft,mapstoup:mapstoup,marker:marker,mcomma:mcomma,mcy:mcy,mdash:mdash,measuredangle:measuredangle,mfr:mfr,mho:mho,micr:micr,micro:micro,mid:mid,midast:midast,midcir:midcir,middo:middo,middot:middot,minus:minus,minusb:minusb,minusd:minusd,minusdu:minusdu,mlcp:mlcp,mldr:mldr,mnplus:mnplus,models:models,mopf:mopf,mp:mp,mscr:mscr,mstpos:mstpos,mu:mu,multimap:multimap,mumap:mumap,nGg:nGg,nGt:nGt,nGtv:nGtv,nLeftarrow:nLeftarrow,nLeftrightarrow:nLeftrightarrow,nLl:nLl,nLt:nLt,nLtv:nLtv,nRightarrow:nRightarrow,nVDash:nVDash,nVdash:nVdash,nabla:nabla,nacute:nacute,nang:nang,nap:nap,napE:napE,napid:napid,napos:napos,napprox:napprox,natur:natur,natural:natural,naturals:naturals,nbs:nbs,nbsp:nbsp,nbump:nbump,nbumpe:nbumpe,ncap:ncap,ncaron:ncaron,ncedil:ncedil,ncong:ncong,ncongdot:ncongdot,ncup:ncup,ncy:ncy,ndash:ndash,ne:ne,neArr:neArr,nearhk:nearhk,nearr:nearr,nearrow:nearrow,nedot:nedot,nequiv:nequiv,nesear:nesear,nesim:nesim,nexist:nexist,nexists:nexists,nfr:nfr,ngE:ngE,nge:nge,ngeq:ngeq,ngeqq:ngeqq,ngeqslant:ngeqslant,nges:nges,ngsim:ngsim,ngt:ngt,ngtr:ngtr,nhArr:nhArr,nharr:nharr,nhpar:nhpar,ni:ni,nis:nis,nisd:nisd,niv:niv,njcy:njcy,nlArr:nlArr,nlE:nlE,nlarr:nlarr,nldr:nldr,nle:nle,nleftarrow:nleftarrow,nleftrightarrow:nleftrightarrow,nleq:nleq,nleqq:nleqq,nleqslant:nleqslant,nles:nles,nless:nless,nlsim:nlsim,nlt:nlt,nltri:nltri,nltrie:nltrie,nmid:nmid,nopf:nopf,no:no,not:not,notin:notin,notinE:notinE,notindot:notindot,notinva:notinva,notinvb:notinvb,notinvc:notinvc,notni:notni,notniva:notniva,notnivb:notnivb,notnivc:notnivc,npar:npar,nparallel:nparallel,nparsl:nparsl,npart:npart,npolint:npolint,npr:npr,nprcue:nprcue,npre:npre,nprec:nprec,npreceq:npreceq,nrArr:nrArr,nrarr:nrarr,nrarrc:nrarrc,nrarrw:nrarrw,nrightarrow:nrightarrow,nrtri:nrtri,nrtrie:nrtrie,nsc:nsc,nsccue:nsccue,nsce:nsce,nscr:nscr,nshortmid:nshortmid,nshortparallel:nshortparallel,nsim:nsim,nsime:nsime,nsimeq:nsimeq,nsmid:nsmid,nspar:nspar,nsqsube:nsqsube,nsqsupe:nsqsupe,nsub:nsub,nsubE:nsubE,nsube:nsube,nsubset:nsubset,nsubseteq:nsubseteq,nsubseteqq:nsubseteqq,nsucc:nsucc,nsucceq:nsucceq,nsup:nsup,nsupE:nsupE,nsupe:nsupe,nsupset:nsupset,nsupseteq:nsupseteq,nsupseteqq:nsupseteqq,ntgl:ntgl,ntild:ntild,ntilde:ntilde,ntlg:ntlg,ntriangleleft:ntriangleleft,ntrianglelefteq:ntrianglelefteq,ntriangleright:ntriangleright,ntrianglerighteq:ntrianglerighteq,nu:nu,num:num,numero:numero,numsp:numsp,nvDash:nvDash,nvHarr:nvHarr,nvap:nvap,nvdash:nvdash,nvge:nvge,nvgt:nvgt,nvinfin:nvinfin,nvlArr:nvlArr,nvle:nvle,nvlt:nvlt,nvltrie:nvltrie,nvrArr:nvrArr,nvrtrie:nvrtrie,nvsim:nvsim,nwArr:nwArr,nwarhk:nwarhk,nwarr:nwarr,nwarrow:nwarrow,nwnear:nwnear,oS:oS,oacut:oacut,oacute:oacute,oast:oast,ocir:ocir,ocirc:ocirc,ocy:ocy,odash:odash,odblac:odblac,odiv:odiv,odot:odot,odsold:odsold,oelig:oelig,ofcir:ofcir,ofr:ofr,ogon:ogon,ograv:ograv,ograve:ograve,ogt:ogt,ohbar:ohbar,ohm:ohm,oint:oint,olarr:olarr,olcir:olcir,olcross:olcross,oline:oline,olt:olt,omacr:omacr,omega:omega,omicron:omicron,omid:omid,ominus:ominus,oopf:oopf,opar:opar,operp:operp,oplus:oplus,or:or,orarr:orarr,ord:ord,order:order,orderof:orderof,ordf:ordf,ordm:ordm,origof:origof,oror:oror,orslope:orslope,orv:orv,oscr:oscr,oslas:oslas,oslash:oslash,osol:osol,otild:otild,otilde:otilde,otimes:otimes,otimesas:otimesas,oum:oum,ouml:ouml,ovbar:ovbar,par:par,para:para,parallel:parallel,parsim:parsim,parsl:parsl,part:part,pcy:pcy,percnt:percnt,period:period,permil:permil,perp:perp,pertenk:pertenk,pfr:pfr,phi:phi,phiv:phiv,phmmat:phmmat,phone:phone,pi:pi,pitchfork:pitchfork,piv:piv,planck:planck,planckh:planckh,plankv:plankv,plus:plus,plusacir:plusacir,plusb:plusb,pluscir:pluscir,plusdo:plusdo,plusdu:plusdu,pluse:pluse,plusm:plusm,plusmn:plusmn,plussim:plussim,plustwo:plustwo,pm:pm,pointint:pointint,popf:popf,poun:poun,pound:pound,pr:pr,prE:prE,prap:prap,prcue:prcue,pre:pre,prec:prec,precapprox:precapprox,preccurlyeq:preccurlyeq,preceq:preceq,precnapprox:precnapprox,precneqq:precneqq,precnsim:precnsim,precsim:precsim,prime:prime,primes:primes,prnE:prnE,prnap:prnap,prnsim:prnsim,prod:prod,profalar:profalar,profline:profline,profsurf:profsurf,prop:prop,propto:propto,prsim:prsim,prurel:prurel,pscr:pscr,psi:psi,puncsp:puncsp,qfr:qfr,qint:qint,qopf:qopf,qprime:qprime,qscr:qscr,quaternions:quaternions,quatint:quatint,quest:quest,questeq:questeq,quo:quo,quot:quot,rAarr:rAarr,rArr:rArr,rAtail:rAtail,rBarr:rBarr,rHar:rHar,race:race,racute:racute,radic:radic,raemptyv:raemptyv,rang:rang,rangd:rangd,range:range,rangle:rangle,raqu:raqu,raquo:raquo,rarr:rarr,rarrap:rarrap,rarrb:rarrb,rarrbfs:rarrbfs,rarrc:rarrc,rarrfs:rarrfs,rarrhk:rarrhk,rarrlp:rarrlp,rarrpl:rarrpl,rarrsim:rarrsim,rarrtl:rarrtl,rarrw:rarrw,ratail:ratail,ratio:ratio,rationals:rationals,rbarr:rbarr,rbbrk:rbbrk,rbrace:rbrace,rbrack:rbrack,rbrke:rbrke,rbrksld:rbrksld,rbrkslu:rbrkslu,rcaron:rcaron,rcedil:rcedil,rceil:rceil,rcub:rcub,rcy:rcy,rdca:rdca,rdldhar:rdldhar,rdquo:rdquo,rdquor:rdquor,rdsh:rdsh,real:real,realine:realine,realpart:realpart,reals:reals,rect:rect,re:re,reg:reg,rfisht:rfisht,rfloor:rfloor,rfr:rfr,rhard:rhard,rharu:rharu,rharul:rharul,rho:rho,rhov:rhov,rightarrow:rightarrow,rightarrowtail:rightarrowtail,rightharpoondown:rightharpoondown,rightharpoonup:rightharpoonup,rightleftarrows:rightleftarrows,rightleftharpoons:rightleftharpoons,rightrightarrows:rightrightarrows,rightsquigarrow:rightsquigarrow,rightthreetimes:rightthreetimes,ring:ring,risingdotseq:risingdotseq,rlarr:rlarr,rlhar:rlhar,rlm:rlm,rmoust:rmoust,rmoustache:rmoustache,rnmid:rnmid,roang:roang,roarr:roarr,robrk:robrk,ropar:ropar,ropf:ropf,roplus:roplus,rotimes:rotimes,rpar:rpar,rpargt:rpargt,rppolint:rppolint,rrarr:rrarr,rsaquo:rsaquo,rscr:rscr,rsh:rsh,rsqb:rsqb,rsquo:rsquo,rsquor:rsquor,rthree:rthree,rtimes:rtimes,rtri:rtri,rtrie:rtrie,rtrif:rtrif,rtriltri:rtriltri,ruluhar:ruluhar,rx:rx,sacute:sacute,sbquo:sbquo,sc:sc,scE:scE,scap:scap,scaron:scaron,sccue:sccue,sce:sce,scedil:scedil,scirc:scirc,scnE:scnE,scnap:scnap,scnsim:scnsim,scpolint:scpolint,scsim:scsim,scy:scy,sdot:sdot,sdotb:sdotb,sdote:sdote,seArr:seArr,searhk:searhk,searr:searr,searrow:searrow,sec:sec,sect:sect,semi:semi,seswar:seswar,setminus:setminus,setmn:setmn,sext:sext,sfr:sfr,sfrown:sfrown,sharp:sharp,shchcy:shchcy,shcy:shcy,shortmid:shortmid,shortparallel:shortparallel,sh:sh,shy:shy,sigma:sigma,sigmaf:sigmaf,sigmav:sigmav,sim:sim,simdot:simdot,sime:sime,simeq:simeq,simg:simg,simgE:simgE,siml:siml,simlE:simlE,simne:simne,simplus:simplus,simrarr:simrarr,slarr:slarr,smallsetminus:smallsetminus,smashp:smashp,smeparsl:smeparsl,smid:smid,smile:smile,smt:smt,smte:smte,smtes:smtes,softcy:softcy,sol:sol,solb:solb,solbar:solbar,sopf:sopf,spades:spades,spadesuit:spadesuit,spar:spar,sqcap:sqcap,sqcaps:sqcaps,sqcup:sqcup,sqcups:sqcups,sqsub:sqsub,sqsube:sqsube,sqsubset:sqsubset,sqsubseteq:sqsubseteq,sqsup:sqsup,sqsupe:sqsupe,sqsupset:sqsupset,sqsupseteq:sqsupseteq,squ:squ,square:square,squarf:squarf,squf:squf,srarr:srarr,sscr:sscr,ssetmn:ssetmn,ssmile:ssmile,sstarf:sstarf,star:star,starf:starf,straightepsilon:straightepsilon,straightphi:straightphi,strns:strns,sub:sub,subE:subE,subdot:subdot,sube:sube,subedot:subedot,submult:submult,subnE:subnE,subne:subne,subplus:subplus,subrarr:subrarr,subset:subset,subseteq:subseteq,subseteqq:subseteqq,subsetneq:subsetneq,subsetneqq:subsetneqq,subsim:subsim,subsub:subsub,subsup:subsup,succ:succ,succapprox:succapprox,succcurlyeq:succcurlyeq,succeq:succeq,succnapprox:succnapprox,succneqq:succneqq,succnsim:succnsim,succsim:succsim,sum:sum,sung:sung,sup:sup,sup1:sup1,sup2:sup2,sup3:sup3,supE:supE,supdot:supdot,supdsub:supdsub,supe:supe,supedot:supedot,suphsol:suphsol,suphsub:suphsub,suplarr:suplarr,supmult:supmult,supnE:supnE,supne:supne,supplus:supplus,supset:supset,supseteq:supseteq,supseteqq:supseteqq,supsetneq:supsetneq,supsetneqq:supsetneqq,supsim:supsim,supsub:supsub,supsup:supsup,swArr:swArr,swarhk:swarhk,swarr:swarr,swarrow:swarrow,swnwar:swnwar,szli:szli,szlig:szlig,target:target,tau:tau,tbrk:tbrk,tcaron:tcaron,tcedil:tcedil,tcy:tcy,tdot:tdot,telrec:telrec,tfr:tfr,there4:there4,therefore:therefore,theta:theta,thetasym:thetasym,thetav:thetav,thickapprox:thickapprox,thicksim:thicksim,thinsp:thinsp,thkap:thkap,thksim:thksim,thor:thor,thorn:thorn,tilde:tilde,time:time,times:times,timesb:timesb,timesbar:timesbar,timesd:timesd,tint:tint,toea:toea,top:top,topbot:topbot,topcir:topcir,topf:topf,topfork:topfork,tosa:tosa,tprime:tprime,trade:trade,triangle:triangle,triangledown:triangledown,triangleleft:triangleleft,trianglelefteq:trianglelefteq,triangleq:triangleq,triangleright:triangleright,trianglerighteq:trianglerighteq,tridot:tridot,trie:trie,triminus:triminus,triplus:triplus,trisb:trisb,tritime:tritime,trpezium:trpezium,tscr:tscr,tscy:tscy,tshcy:tshcy,tstrok:tstrok,twixt:twixt,twoheadleftarrow:twoheadleftarrow,twoheadrightarrow:twoheadrightarrow,uArr:uArr,uHar:uHar,uacut:uacut,uacute:uacute,uarr:uarr,ubrcy:ubrcy,ubreve:ubreve,ucir:ucir,ucirc:ucirc,ucy:ucy,udarr:udarr,udblac:udblac,udhar:udhar,ufisht:ufisht,ufr:ufr,ugrav:ugrav,ugrave:ugrave,uharl:uharl,uharr:uharr,uhblk:uhblk,ulcorn:ulcorn,ulcorner:ulcorner,ulcrop:ulcrop,ultri:ultri,umacr:umacr,um:um,uml:uml,uogon:uogon,uopf:uopf,uparrow:uparrow,updownarrow:updownarrow,upharpoonleft:upharpoonleft,upharpoonright:upharpoonright,uplus:uplus,upsi:upsi,upsih:upsih,upsilon:upsilon,upuparrows:upuparrows,urcorn:urcorn,urcorner:urcorner,urcrop:urcrop,uring:uring,urtri:urtri,uscr:uscr,utdot:utdot,utilde:utilde,utri:utri,utrif:utrif,uuarr:uuarr,uum:uum,uuml:uuml,uwangle:uwangle,vArr:vArr,vBar:vBar,vBarv:vBarv,vDash:vDash,vangrt:vangrt,varepsilon:varepsilon,varkappa:varkappa,varnothing:varnothing,varphi:varphi,varpi:varpi,varpropto:varpropto,varr:varr,varrho:varrho,varsigma:varsigma,varsubsetneq:varsubsetneq,varsubsetneqq:varsubsetneqq,varsupsetneq:varsupsetneq,varsupsetneqq:varsupsetneqq,vartheta:vartheta,vartriangleleft:vartriangleleft,vartriangleright:vartriangleright,vcy:vcy,vdash:vdash,vee:vee,veebar:veebar,veeeq:veeeq,vellip:vellip,verbar:verbar,vert:vert,vfr:vfr,vltri:vltri,vnsub:vnsub,vnsup:vnsup,vopf:vopf,vprop:vprop,vrtri:vrtri,vscr:vscr,vsubnE:vsubnE,vsubne:vsubne,vsupnE:vsupnE,vsupne:vsupne,vzigzag:vzigzag,wcirc:wcirc,wedbar:wedbar,wedge:wedge,wedgeq:wedgeq,weierp:weierp,wfr:wfr,wopf:wopf,wp:wp,wr:wr,wreath:wreath,wscr:wscr,xcap:xcap,xcirc:xcirc,xcup:xcup,xdtri:xdtri,xfr:xfr,xhArr:xhArr,xharr:xharr,xi:xi,xlArr:xlArr,xlarr:xlarr,xmap:xmap,xnis:xnis,xodot:xodot,xopf:xopf,xoplus:xoplus,xotime:xotime,xrArr:xrArr,xrarr:xrarr,xscr:xscr,xsqcup:xsqcup,xuplus:xuplus,xutri:xutri,xvee:xvee,xwedge:xwedge,yacut:yacut,yacute:yacute,yacy:yacy,ycirc:ycirc,ycy:ycy,ye:ye,yen:yen,yfr:yfr,yicy:yicy,yopf:yopf,yscr:yscr,yucy:yucy,yum:yum,yuml:yuml,zacute:zacute,zcaron:zcaron,zcy:zcy,zdot:zdot,zeetrf:zeetrf,zeta:zeta,zfr:zfr,zhcy:zhcy,zigrarr:zigrarr,zopf:zopf,zscr:zscr,zwj:zwj,zwnj:zwnj,default:index$14}),AElig$1="Æ",AMP$1="&",Aacute$1="Á",Acirc$1="Â",Agrave$1="À",Aring$1="Å",Atilde$1="Ã",Auml$1="Ä",COPY$1="©",Ccedil$1="Ç",ETH$1="Ð",Eacute$1="É",Ecirc$1="Ê",Egrave$1="È",Euml$1="Ë",GT$1=">",Iacute$1="Í",Icirc$1="Î",Igrave$1="Ì",Iuml$1="Ï",LT$1="<",Ntilde$1="Ñ",Oacute$1="Ó",Ocirc$1="Ô",Ograve$1="Ò",Oslash$1="Ø",Otilde$1="Õ",Ouml$1="Ö",QUOT$1='"',REG$1="®",THORN$1="Þ",Uacute$1="Ú",Ucirc$1="Û",Ugrave$1="Ù",Uuml$1="Ü",Yacute$1="Ý",aacute$1="á",acirc$1="â",acute$1="´",aelig$1="æ",agrave$1="à",amp$1="&",aring$1="å",atilde$1="ã",auml$1="ä",brvbar$1="¦",ccedil$1="ç",cedil$1="¸",cent$1="¢",copy$1="©",curren$1="¤",deg$1="°",divide$1="÷",eacute$1="é",ecirc$1="ê",egrave$1="è",eth$1="ð",euml$1="ë",frac12$1="½",frac14$1="¼",frac34$1="¾",gt$1=">",iacute$1="í",icirc$1="î",iexcl$1="¡",igrave$1="ì",iquest$1="¿",iuml$1="ï",laquo$1="«",lt$1="<",macr$1="¯",micro$1="µ",middot$1="·",nbsp$1=" ",not$1="¬",ntilde$1="ñ",oacute$1="ó",ocirc$1="ô",ograve$1="ò",ordf$1="ª",ordm$1="º",oslash$1="ø",otilde$1="õ",ouml$1="ö",para$1="¶",plusmn$1="±",pound$1="£",quot$1='"',raquo$1="»",reg$1="®",sect$1="§",shy$1="­",sup1$1="¹",sup2$1="²",sup3$1="³",szlig$1="ß",thorn$1="þ",times$1="×",uacute$1="ú",ucirc$1="û",ugrave$1="ù",uml$1="¨",uuml$1="ü",yacute$1="ý",yen$1="¥",yuml$1="ÿ",index$16={AElig:AElig$1,AMP:AMP$1,Aacute:Aacute$1,Acirc:Acirc$1,Agrave:Agrave$1,Aring:Aring$1,Atilde:Atilde$1,Auml:Auml$1,COPY:COPY$1,Ccedil:Ccedil$1,ETH:ETH$1,Eacute:Eacute$1,Ecirc:Ecirc$1,Egrave:Egrave$1,Euml:Euml$1,GT:GT$1,Iacute:Iacute$1,Icirc:Icirc$1,Igrave:Igrave$1,Iuml:Iuml$1,LT:LT$1,Ntilde:Ntilde$1,Oacute:Oacute$1,Ocirc:Ocirc$1,Ograve:Ograve$1,Oslash:Oslash$1,Otilde:Otilde$1,Ouml:Ouml$1,QUOT:QUOT$1,REG:REG$1,THORN:THORN$1,Uacute:Uacute$1,Ucirc:Ucirc$1,Ugrave:Ugrave$1,Uuml:Uuml$1,Yacute:Yacute$1,aacute:aacute$1,acirc:acirc$1,acute:acute$1,aelig:aelig$1,agrave:agrave$1,amp:amp$1,aring:aring$1,atilde:atilde$1,auml:auml$1,brvbar:brvbar$1,ccedil:ccedil$1,cedil:cedil$1,cent:cent$1,copy:copy$1,curren:curren$1,deg:deg$1,divide:divide$1,eacute:eacute$1,ecirc:ecirc$1,egrave:egrave$1,eth:eth$1,euml:euml$1,frac12:frac12$1,frac14:frac14$1,frac34:frac34$1,gt:gt$1,iacute:iacute$1,icirc:icirc$1,iexcl:iexcl$1,igrave:igrave$1,iquest:iquest$1,iuml:iuml$1,laquo:laquo$1,lt:lt$1,macr:macr$1,micro:micro$1,middot:middot$1,nbsp:nbsp$1,not:not$1,ntilde:ntilde$1,oacute:oacute$1,ocirc:ocirc$1,ograve:ograve$1,ordf:ordf$1,ordm:ordm$1,oslash:oslash$1,otilde:otilde$1,ouml:ouml$1,para:para$1,plusmn:plusmn$1,pound:pound$1,quot:quot$1,raquo:raquo$1,reg:reg$1,sect:sect$1,shy:shy$1,sup1:sup1$1,sup2:sup2$1,sup3:sup3$1,szlig:szlig$1,thorn:thorn$1,times:times$1,uacute:uacute$1,ucirc:ucirc$1,ugrave:ugrave$1,uml:uml$1,uuml:uuml$1,yacute:yacute$1,yen:yen$1,yuml:yuml$1},index$17=Object.freeze({AElig:AElig$1,AMP:AMP$1,Aacute:Aacute$1,Acirc:Acirc$1,Agrave:Agrave$1,Aring:Aring$1,Atilde:Atilde$1,Auml:Auml$1,COPY:COPY$1,Ccedil:Ccedil$1,ETH:ETH$1,Eacute:Eacute$1,Ecirc:Ecirc$1,Egrave:Egrave$1,Euml:Euml$1,GT:GT$1,Iacute:Iacute$1,Icirc:Icirc$1,Igrave:Igrave$1,Iuml:Iuml$1,LT:LT$1,Ntilde:Ntilde$1,Oacute:Oacute$1,Ocirc:Ocirc$1,Ograve:Ograve$1,Oslash:Oslash$1,Otilde:Otilde$1,Ouml:Ouml$1,QUOT:QUOT$1,REG:REG$1,THORN:THORN$1,Uacute:Uacute$1,Ucirc:Ucirc$1,Ugrave:Ugrave$1,Uuml:Uuml$1,Yacute:Yacute$1,aacute:aacute$1,acirc:acirc$1,acute:acute$1,aelig:aelig$1,agrave:agrave$1,amp:amp$1,aring:aring$1,atilde:atilde$1,auml:auml$1,brvbar:brvbar$1,ccedil:ccedil$1,cedil:cedil$1,cent:cent$1,copy:copy$1,curren:curren$1,deg:deg$1,divide:divide$1,eacute:eacute$1,ecirc:ecirc$1,egrave:egrave$1,eth:eth$1,euml:euml$1,frac12:frac12$1,frac14:frac14$1,frac34:frac34$1,gt:gt$1,iacute:iacute$1,icirc:icirc$1,iexcl:iexcl$1,igrave:igrave$1,iquest:iquest$1,iuml:iuml$1,laquo:laquo$1,lt:lt$1,macr:macr$1,micro:micro$1,middot:middot$1,nbsp:nbsp$1,not:not$1,ntilde:ntilde$1,oacute:oacute$1,ocirc:ocirc$1,ograve:ograve$1,ordf:ordf$1,ordm:ordm$1,oslash:oslash$1,otilde:otilde$1,ouml:ouml$1,para:para$1,plusmn:plusmn$1,pound:pound$1,quot:quot$1,raquo:raquo$1,reg:reg$1,sect:sect$1,shy:shy$1,sup1:sup1$1,sup2:sup2$1,sup3:sup3$1,szlig:szlig$1,thorn:thorn$1,times:times$1,uacute:uacute$1,ucirc:ucirc$1,ugrave:ugrave$1,uml:uml$1,uuml:uuml$1,yacute:yacute$1,yen:yen$1,yuml:yuml$1,default:index$16}),index$18={0:"�",128:"€",130:"‚",131:"ƒ",132:"„",133:"…",134:"†",135:"‡",136:"ˆ",137:"‰",138:"Š",139:"‹",140:"Œ",142:"Ž",145:"‘",146:"’",147:"“",148:"”",149:"•",150:"–",151:"—",152:"˜",153:"™",154:"š",155:"›",156:"œ",158:"ž",159:"Ÿ"},index$19=Object.freeze({default:index$18}),index$20=decimal$1,index$22=hexadecimal$1,index$26=alphabetical$1,alphabetical=index$26,decimal$2=index$20,index$24=alphanumerical$1,require$$0$5=index$15&&index$14||index$15,require$$1$4=index$17&&index$16||index$17,require$$2$1=index$19&&index$18||index$19,characterEntities=require$$0$5,legacy=require$$1$4,invalid=require$$2$1,decimal=index$20,hexadecimal=index$22,alphanumerical=index$24,index$12=wrapper,own$1={}.hasOwnProperty,fromCharCode=String.fromCharCode,noop=Function.prototype,REPLACEMENT="�",FORM_FEED="\f",AMPERSAND="&",OCTOTHORP="#",SEMICOLON=";",NEWLINE="\n",X_LOWER="x",X_UPPER="X",SPACE=" ",LESS_THAN="<",EQUAL="=",EMPTY="",TAB="\t",defaults={warning:null,reference:null,text:null,warningContext:null,referenceContext:null,textContext:null,position:{},additional:null,attribute:!1,nonTerminated:!0},NAMED="named",HEXADECIMAL="hexadecimal",DECIMAL="decimal",BASE={};BASE[HEXADECIMAL]=16,BASE[DECIMAL]=10;var TESTS={};TESTS[NAMED]=alphanumerical,TESTS[DECIMAL]=decimal,TESTS[HEXADECIMAL]=hexadecimal;var NAMED_NOT_TERMINATED=1,NUMERIC_NOT_TERMINATED=2,NAMED_EMPTY=3,NUMERIC_EMPTY=4,NAMED_UNKNOWN=5,NUMERIC_DISALLOWED=6,NUMERIC_PROHIBITED=7,NUMERIC_REFERENCE="Numeric character references",NAMED_REFERENCE="Named character references",TERMINATED=" must be terminated by a semicolon",VOID=" cannot be empty",MESSAGES={};MESSAGES[NAMED_NOT_TERMINATED]=NAMED_REFERENCE+TERMINATED,MESSAGES[NUMERIC_NOT_TERMINATED]=NUMERIC_REFERENCE+TERMINATED,MESSAGES[NAMED_EMPTY]=NAMED_REFERENCE+VOID,MESSAGES[NUMERIC_EMPTY]=NUMERIC_REFERENCE+VOID,MESSAGES[NAMED_UNKNOWN]=NAMED_REFERENCE+" must be known",MESSAGES[NUMERIC_DISALLOWED]=NUMERIC_REFERENCE+" cannot be disallowed",MESSAGES[NUMERIC_PROHIBITED]=NUMERIC_REFERENCE+" cannot be outside the permissible Unicode range";var entities=index$12,decode$1=factory$3,tokenizer$1=factory$4,MERGEABLE_NODES={text:mergeText,blockquote:mergeBlockquote},index$28=escapes$1,defaults$2=["\\","`","*","{","}","[","]","(",")","#","+","-",".","!","_",">"],gfm=defaults$2.concat(["~","|"]),commonmark=gfm.concat(["\n",'"',"$","%","&","'",",","/",":",";","<","=","?","@","^"]);escapes$1.default=defaults$2,escapes$1.gfm=gfm,escapes$1.commonmark=commonmark;var blockElements=["address","article","aside","base","basefont","blockquote","body","caption","center","col","colgroup","dd","details","dialog","dir","div","dl","dt","fieldset","figcaption","figure","footer","form","frame","frameset","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","iframe","legend","li","link","main","menu","menuitem","meta","nav","noframes","ol","optgroup","option","p","param","pre","section","source","title","summary","table","tbody","td","tfoot","th","thead","title","tr","track","ul"],blockElements$1=Object.freeze({default:blockElements}),require$$0$7=blockElements$1&&blockElements||blockElements$1,defaults$3={position:!0,gfm:!0,commonmark:!1,footnotes:!1,pedantic:!1,blocks:require$$0$7},xtend$4=immutable,escapes=index$28,defaults$1=defaults$3,setOptions_1=setOptions,index$32=visit$1,visit=index$32,index$30=removePosition$1,xtend$5=immutable,removePosition=index$30,parse_1=parse$6,C_NEWLINE="\n",EXPRESSION_LINE_BREAKS=/\r\n|\r/g,index$34=whitespace$1,fromCode=String.fromCharCode,re$1=/\s/,whitespace=index$34,newline_1=newline,res="",cache,index$36=repeat$1,index$38=trimTrailingLines,line="\n",repeat=index$36,trim=index$38,codeIndented=indentedCode,C_NEWLINE$1="\n",C_TAB="\t",C_SPACE=" ",CODE_INDENT_COUNT=4,CODE_INDENT=repeat(C_SPACE,CODE_INDENT_COUNT),trim$1=index$38,codeFenced=fencedCode,C_NEWLINE$2="\n",C_TAB$1="\t",C_SPACE$1=" ",C_TILDE="~",C_TICK="`",MIN_FENCE_COUNT=3,CODE_INDENT_COUNT$1=4,index$40=createCommonjsModule(function(r,e){(e=r.exports=function(r){return r.replace(/^\s*|\s*$/g,"")}).left=function(r){return r.replace(/^\s*/,"")},e.right=function(r){return r.replace(/\s*$/,"")}}),interrupt_1=interrupt$1,trim$2=index$40,interrupt=interrupt_1,blockquote_1=blockquote,C_NEWLINE$3="\n",C_TAB$2="\t",C_SPACE$2=" ",C_GT=">",headingAtx=atxHeading,C_NEWLINE$4="\n",C_TAB$3="\t",C_SPACE$3=" ",C_HASH="#",MAX_ATX_COUNT=6,thematicBreak_1=thematicBreak,C_NEWLINE$5="\n",C_TAB$4="\t",C_SPACE$4=" ",C_ASTERISK="*",C_UNDERSCORE="_",C_DASH="-",THEMATIC_BREAK_MARKER_COUNT=3,getIndentation=indentation,characters={" ":1,"\t":4},trim$4=index$40,repeat$3=index$36,getIndent$1=getIndentation,removeIndentation=indentation$1,C_SPACE$6=" ",C_NEWLINE$7="\n",C_TAB$6="\t",trim$3=index$40,repeat$2=index$36,decimal$3=index$20,getIndent=getIndentation,removeIndent=removeIndentation,interrupt$2=interrupt_1,list_1=list,C_ASTERISK$1="*",C_UNDERSCORE$1="_",C_PLUS="+",C_DASH$1="-",C_DOT=".",C_SPACE$5=" ",C_NEWLINE$6="\n",C_TAB$5="\t",C_PAREN_CLOSE=")",C_X_LOWER="x",TAB_SIZE=4,EXPRESSION_LOOSE_LIST_ITEM=/\n\n(?!\s*$)/,EXPRESSION_TASK_ITEM=/^\[([ \t]|x|X)][ \t]/,EXPRESSION_BULLET=/^([ \t]*)([*+-]|\d+[.)])( {1,4}(?! )| |\t|$|(?=\n))([^\n]*)/,EXPRESSION_PEDANTIC_BULLET=/^([ \t]*)([*+-]|\d+[.)])([ \t]+)/,EXPRESSION_INITIAL_INDENT=/^( {1,4}|\t)?/gm,LIST_UNORDERED_MARKERS={};LIST_UNORDERED_MARKERS[C_ASTERISK$1]=!0,LIST_UNORDERED_MARKERS[C_PLUS]=!0,LIST_UNORDERED_MARKERS[C_DASH$1]=!0;var LIST_ORDERED_MARKERS={};LIST_ORDERED_MARKERS[C_DOT]=!0;var LIST_ORDERED_COMMONMARK_MARKERS={};LIST_ORDERED_COMMONMARK_MARKERS[C_DOT]=!0,LIST_ORDERED_COMMONMARK_MARKERS[C_PAREN_CLOSE]=!0;var headingSetext=setextHeading,C_NEWLINE$8="\n",C_TAB$7="\t",C_SPACE$7=" ",C_EQUALS="=",C_DASH$2="-",MAX_HEADING_INDENT=3,SETEXT_MARKERS={};SETEXT_MARKERS[C_EQUALS]=1,SETEXT_MARKERS[C_DASH$2]=2;var attributeName="[a-zA-Z_:][a-zA-Z0-9:._-]*",unquoted="[^\"'=<>`\\u0000-\\u0020]+",singleQuoted="'[^']*'",doubleQuoted='"[^"]*"',attributeValue="(?:"+unquoted+"|"+singleQuoted+"|"+doubleQuoted+")",attribute="(?:\\s+"+attributeName+"(?:\\s*=\\s*"+attributeValue+")?)",openTag="<[A-Za-z][A-Za-z0-9\\-]*"+attribute+"*\\s*\\/?>",closeTag="<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>",comment="\x3c!----\x3e|\x3c!--(?:-?[^>-])(?:-?[^-])*--\x3e",processing="<[?].*?[?]>",declaration="<![A-Za-z]+\\s+[^>]*>",cdata="<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",openCloseTag$1=new RegExp("^(?:"+openTag+"|"+closeTag+")"),tag=new RegExp("^(?:"+openTag+"|"+closeTag+"|"+comment+"|"+processing+"|"+declaration+"|"+cdata+")"),html={openCloseTag:openCloseTag$1,tag:tag},openCloseTag=html.openCloseTag,htmlBlock=blockHTML,C_TAB$8="\t",C_SPACE$8=" ",C_NEWLINE$9="\n",C_LT="<",index$42=collapse,collapseWhiteSpace=index$42,normalize_1=normalize$1,whitespace$2=index$34,normalize=normalize_1,footnoteDefinition_1=footnoteDefinition;footnoteDefinition.notInList=!0,footnoteDefinition.notInBlock=!0;var C_BACKSLASH="\\",C_NEWLINE$10="\n",C_TAB$9="\t",C_SPACE$9=" ",C_BRACKET_OPEN="[",C_BRACKET_CLOSE="]",C_CARET="^",C_COLON=":",EXPRESSION_INITIAL_TAB=/^( {4}|\t)?/gm,whitespace$3=index$34,normalize$2=normalize_1,definition_1=definition;definition.notInList=!0,definition.notInBlock=!0;var C_DOUBLE_QUOTE='"',C_SINGLE_QUOTE="'",C_BACKSLASH$1="\\",C_NEWLINE$11="\n",C_TAB$10="\t",C_SPACE$10=" ",C_BRACKET_OPEN$1="[",C_BRACKET_CLOSE$1="]",C_PAREN_OPEN="(",C_PAREN_CLOSE$1=")",C_COLON$1=":",C_LT$1="<",C_GT$1=">";isEnclosedURLCharacter.delimiter=C_GT$1;var whitespace$4=index$34,table_1=table,C_BACKSLASH$2="\\",C_TICK$1="`",C_DASH$3="-",C_PIPE="|",C_COLON$2=":",C_SPACE$11=" ",C_NEWLINE$12="\n",C_TAB$11="\t",MIN_TABLE_COLUMNS=1,MIN_TABLE_ROWS=2,TABLE_ALIGN_LEFT="left",TABLE_ALIGN_CENTER="center",TABLE_ALIGN_RIGHT="right",TABLE_ALIGN_NONE=null,trim$5=index$40,decimal$4=index$20,trimTrailingLines$1=index$38,interrupt$3=interrupt_1,paragraph_1=paragraph,C_NEWLINE$13="\n",C_TAB$12="\t",C_SPACE$12=" ",TAB_SIZE$1=4,_escape$2=locate$1,locate=_escape$2,_escape=escape;escape.locator=locate;var tag$1=locate$3,whitespace$5=index$34,decode$3=index$12,locate$2=tag$1,autoLink_1=autoLink;autoLink.locator=locate$2,autoLink.notInLink=!0;var C_LT$2="<",C_GT$2=">",C_AT_SIGN="@",C_SLASH="/",MAILTO="mailto:",MAILTO_LENGTH=MAILTO.length,url$1=locate$5,PROTOCOLS$1=["https://","http://","mailto:"],decode$4=index$12,whitespace$6=index$34,locate$4=url$1,url_1=url;url.locator=locate$4,url.notInLink=!0;var C_BRACKET_OPEN$2="[",C_BRACKET_CLOSE$2="]",C_PAREN_OPEN$1="(",C_PAREN_CLOSE$2=")",C_LT$3="<",C_AT_SIGN$1="@",HTTP_PROTOCOL="http://",HTTPS_PROTOCOL="https://",MAILTO_PROTOCOL="mailto:",PROTOCOLS=[HTTP_PROTOCOL,HTTPS_PROTOCOL,MAILTO_PROTOCOL],PROTOCOLS_LENGTH=PROTOCOLS.length,alphabetical$2=index$26,locate$6=tag$1,tag$3=html.tag,htmlInline=inlineHTML;inlineHTML.locator=locate$6;var EXPRESSION_HTML_LINK_OPEN=/^<a /i,EXPRESSION_HTML_LINK_CLOSE=/^<\/a>/i,link$1=locate$8,whitespace$7=index$34,locate$7=link$1,link_1=link;link.locator=locate$7;var own$2={}.hasOwnProperty,C_BACKSLASH$3="\\",C_BRACKET_OPEN$3="[",C_BRACKET_CLOSE$3="]",C_PAREN_OPEN$2="(",C_PAREN_CLOSE$3=")",C_LT$4="<",C_GT$3=">",C_TICK$2="`",C_DOUBLE_QUOTE$1='"',C_SINGLE_QUOTE$1="'",LINK_MARKERS={};LINK_MARKERS[C_DOUBLE_QUOTE$1]=C_DOUBLE_QUOTE$1,LINK_MARKERS[C_SINGLE_QUOTE$1]=C_SINGLE_QUOTE$1;var COMMONMARK_LINK_MARKERS={};COMMONMARK_LINK_MARKERS[C_DOUBLE_QUOTE$1]=C_DOUBLE_QUOTE$1,COMMONMARK_LINK_MARKERS[C_SINGLE_QUOTE$1]=C_SINGLE_QUOTE$1,COMMONMARK_LINK_MARKERS[C_PAREN_OPEN$2]=C_PAREN_CLOSE$3;var whitespace$8=index$34,locate$9=link$1,normalize$3=normalize_1,reference_1=reference;reference.locator=locate$9;var T_LINK="link",T_IMAGE="image",T_FOOTNOTE="footnote",REFERENCE_TYPE_SHORTCUT="shortcut",REFERENCE_TYPE_COLLAPSED="collapsed",REFERENCE_TYPE_FULL="full",C_CARET$1="^",C_BACKSLASH$4="\\",C_BRACKET_OPEN$4="[",C_BRACKET_CLOSE$4="]",strong$1=locate$11,trim$6=index$40,whitespace$9=index$34,locate$10=strong$1,strong_1=strong;strong.locator=locate$10;var C_ASTERISK$2="*",C_UNDERSCORE$2="_",index$44=wordCharacter,fromCode$1=String.fromCharCode,re$2=/\w/,emphasis$1=locate$13,trim$7=index$40,word=index$44,whitespace$10=index$34,locate$12=emphasis$1,emphasis_1=emphasis;emphasis.locator=locate$12;var C_ASTERISK$3="*",C_UNDERSCORE$3="_",_delete$2=locate$15,whitespace$11=index$34,locate$14=_delete$2,_delete=strikethrough;strikethrough.locator=locate$14;var C_TILDE$1="~",DOUBLE="~~",codeInline$2=locate$17,whitespace$12=index$34,locate$16=codeInline$2,codeInline=inlineCode;inlineCode.locator=locate$16;var C_TICK$3="`",_break$2=locate$19,locate$18=_break$2,_break=hardBreak;hardBreak.locator=locate$18;var MIN_BREAK_LENGTH=2,text_1=text,xtend$3=immutable,toggle=index$8,vfileLocation=index$10,unescape=_unescape,decode=decode$1,tokenizer=tokenizer$1,parser=Parser$1,proto=Parser$1.prototype;proto.setOptions=setOptions_1,proto.parse=parse_1,proto.options=defaults$3,proto.exitStart=toggle("atStart",!0),proto.enterList=toggle("inList",!1),proto.enterLink=toggle("inLink",!1),proto.enterBlock=toggle("inBlock",!1),proto.interruptParagraph=[["thematicBreak"],["atxHeading"],["fencedCode"],["blockquote"],["html"],["setextHeading",{commonmark:!1}],["definition",{commonmark:!1}],["footnote",{commonmark:!1}]],proto.interruptList=[["fencedCode",{pedantic:!1}],["thematicBreak",{pedantic:!1}],["definition",{commonmark:!1}],["footnote",{commonmark:!1}]],proto.interruptBlockquote=[["indentedCode",{commonmark:!0}],["fencedCode",{commonmark:!0}],["atxHeading",{commonmark:!0}],["setextHeading",{commonmark:!0}],["thematicBreak",{commonmark:!0}],["html",{commonmark:!0}],["list",{commonmark:!0}],["definition",{commonmark:!1}],["footnote",{commonmark:!1}]],proto.blockTokenizers={newline:newline_1,indentedCode:codeIndented,fencedCode:codeFenced,blockquote:blockquote_1,atxHeading:headingAtx,thematicBreak:thematicBreak_1,list:list_1,setextHeading:headingSetext,html:htmlBlock,footnote:footnoteDefinition_1,definition:definition_1,table:table_1,paragraph:paragraph_1},proto.inlineTokenizers={escape:_escape,autoLink:autoLink_1,url:url_1,html:htmlInline,link:link_1,reference:reference_1,strong:strong_1,emphasis:emphasis_1,deletion:_delete,code:codeInline,break:_break,text:text_1},proto.blockMethods=keys(proto.blockTokenizers),proto.inlineMethods=keys(proto.inlineTokenizers),proto.tokenizeBlock=tokenizer("block"),proto.tokenizeInline=tokenizer("inline"),proto.tokenizeFactory=tokenizer;var unherit=index$6,xtend$1=immutable,Parser=parser,index$4=parse$4;parse$4.Parser=Parser;var hasOwn=Object.prototype.hasOwnProperty,toStr=Object.prototype.toString,isArray=function(r){return"function"==typeof Array.isArray?Array.isArray(r):"[object Array]"===toStr.call(r)},isPlainObject=function(r){if(!r||"[object Object]"!==toStr.call(r))return!1;var e=hasOwn.call(r,"constructor"),t=r.constructor&&r.constructor.prototype&&hasOwn.call(r.constructor.prototype,"isPrototypeOf");if(r.constructor&&!e&&!t)return!1;var a;for(a in r);return void 0===a||hasOwn.call(r,a)},index$48=function r(){var e,t,a,o,n,i,s=arguments[0],c=1,l=arguments.length,u=!1;for("boolean"==typeof s&&(u=s,s=arguments[1]||{},c=2),(null==s||"object"!=typeof s&&"function"!=typeof s)&&(s={});c<l;++c)if(null!=(e=arguments[c]))for(t in e)a=s[t],s!==(o=e[t])&&(u&&o&&(isPlainObject(o)||(n=isArray(o)))?(n?(n=!1,i=a&&isArray(a)?a:[]):i=a&&isPlainObject(a)?a:{},s[t]=r(u,i,o)):void 0!==o&&(s[t]=o));return s},index$50=bail$1,path$2=path,index$54=replaceExt,own$5={}.hasOwnProperty,index_1$1=stringify$1,index$57=function(r){return null!=r&&(isBuffer(r)||isSlowBuffer(r)||!!r._isBuffer)},path$1=path,replace=index$54,stringify=index_1$1,buffer=index$57,index$52=VFile,own$4={}.hasOwnProperty,proto$1=VFile.prototype;proto$1.toString=toString,proto$1.message=message,proto$1.info=info,proto$1.fail=fail,proto$1.warn=message;var order$1=["history","path","basename","stem","extname","dirname"];Object.defineProperty(proto$1,"path",{get:function(){return this.history[this.history.length-1]},set:function(r){assertNonEmpty(r,"path"),r!==this.path&&this.history.push(r)}}),Object.defineProperty(proto$1,"dirname",{get:function(){return"string"==typeof this.path?path$1.dirname(this.path):void 0},set:function(r){assertPath(this.path,"dirname"),this.path=path$1.join(r||"",this.basename)}}),Object.defineProperty(proto$1,"basename",{get:function(){return"string"==typeof this.path?path$1.basename(this.path):void 0},set:function(r){assertNonEmpty(r,"basename"),assertPart(r,"basename"),this.path=path$1.join(this.dirname||"",r)}}),Object.defineProperty(proto$1,"extname",{get:function(){return"string"==typeof this.path?path$1.extname(this.path):void 0},set:function(r){var e=r||"";if(assertPart(e,"extname"),assertPath(this.path,"extname"),e){if("."!==e.charAt(0))throw new Error("`extname` must start with `.`");if(-1!==e.indexOf(".",1))throw new Error("`extname` cannot contain multiple dots")}this.path=replace(this.path,e)}}),Object.defineProperty(proto$1,"stem",{get:function(){return"string"==typeof this.path?path$1.basename(this.path,this.extname):void 0},set:function(r){assertNonEmpty(r,"stem"),assertPart(r,"stem"),this.path=path$1.join(this.dirname||"",r+(this.extname||""))}}),VMessagePrototype.prototype=Error.prototype,VMessage.prototype=new VMessagePrototype,(proto$1=VMessage.prototype).file="",proto$1.name="",proto$1.reason="",proto$1.message="",proto$1.stack="",proto$1.fatal=null,proto$1.column=null,proto$1.line=null;var index$59=trough$1,slice$1=[].slice,toString$1=Object.prototype.toString,index$61=isString,index$63=function(r){return"[object Function]"===Object.prototype.toString.call(r)},toString$2=Object.prototype.toString,index$65=function(r){var e;return"[object Object]"===toString$2.call(r)&&(null===(e=Object.getPrototypeOf(r))||e===Object.getPrototypeOf({}))},extend$1=index$48,bail=index$50,vfile=index$52,trough=index$59,string=index$61,func=index$63,plain=index$65,index$46=unified$1().freeze(),slice=[].slice,own$3={}.hasOwnProperty,pipeline=trough().use(pipelineParse).use(pipelineRun).use(pipelineStringify),index$71=()=>{const r=["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:[a-zA-Z\\d]*(?:;[a-zA-Z\\d]*)*)?\\u0007)","(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PRZcf-ntqry=><~]))"].join("|");return new RegExp(r,"g")};const ansiRegex=index$71;var index$69=r=>"string"==typeof r?r.replace(ansiRegex(),""):r,index$73=r=>!Number.isNaN(r)&&(r>=4352&&(r<=4447||9001===r||9002===r||11904<=r&&r<=12871&&12351!==r||12880<=r&&r<=19903||19968<=r&&r<=42182||43360<=r&&r<=43388||44032<=r&&r<=55203||63744<=r&&r<=64255||65040<=r&&r<=65049||65072<=r&&r<=65131||65281<=r&&r<=65376||65504<=r&&r<=65510||110592<=r&&r<=110593||127488<=r&&r<=127569||131072<=r&&r<=262141));const stripAnsi=index$69,isFullwidthCodePoint=index$73;var index$67=r=>{if("string"!=typeof r||0===r.length)return 0;r=stripAnsi(r);let e=0;for(let t=0;t<r.length;t++){const a=r.codePointAt(t);a<=31||a>=127&&a<=159||(a>=768&&a<=879||(a>65535&&t++,e+=isFullwidthCodePoint(a)?2:1))}return e},index$75=function(){return/\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74)\uDB40\uDC7F|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC68(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|[\u2695\u2696\u2708]\uFE0F|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92])|(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2695\u2696\u2708]\uFE0F|(?:\uD83C[\uDFFB-\uDFFF])\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]))|\uD83D\uDC69\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92])|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2695\u2696\u2708]|(?:(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)\uFE0F|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDD6-\uDDDD])(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\uD83D\uDC69\u200D[\u2695\u2696\u2708])\uFE0F|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D\uDC68(?:\u200D(?:(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D[\uDC66\uDC67])|\uD83C[\uDFFB-\uDFFF])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92])|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83C\uDDF4\uD83C\uDDF2|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF6\uD83C\uDDE6|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|[#\*0-9]\uFE0F\u20E3|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC70\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD36\uDDD1-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC69\uDC6E\uDC70-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD18-\uDD1C\uDD1E\uDD1F\uDD26\uDD30-\uDD39\uDD3D\uDD3E\uDDD1-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])?|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDEEB\uDEEC\uDEF4-\uDEF8]|\uD83E[\uDD10-\uDD3A\uDD3C-\uDD3E\uDD40-\uDD45\uDD47-\uDD4C\uDD50-\uDD6B\uDD80-\uDD97\uDDC0\uDDD0-\uDDE6])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u2660\u2663\u2665\u2666\u2668\u267B\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEF8]|\uD83E[\uDD10-\uDD3A\uDD3C-\uDD3E\uDD40-\uDD45\uDD47-\uDD4C\uDD50-\uDD6B\uDD80-\uDD97\uDDC0\uDDD0-\uDDE6])\uFE0F/g},matchOperatorsRe=/[|\\{}()[\]^$+*?.]/g,index$77=function(r){if("string"!=typeof r)throw new TypeError("Expected a string");return r.replace(matchOperatorsRe,"\\$&")},punctuation_ranges=[[12288,12351],[44032,55215],[65040,65055],[65072,65135],[65280,65376],[65504,65519]],character_ranges=[[4352,4607],[11904,12255],[12352,12687],[12800,19903],[19968,40959],[43360,43391],[63744,64255]];!function(r){r.punctuations=function(){return create_regex(punctuation_ranges)},r.characters=function(){return create_regex(character_ranges)}}(get_regex||(get_regex={}));var index$79=get_regex,data_generated=createCommonjsModule(function(r,e){e.__esModule=!0,e.get_data=function(){return{Pc:[[95,95],[8255,8256],[8276,8276],[65075,65076],[65101,65103],[65343,65343]],Pe:[[41,41],[93,93],[125,125],[3899,3899],[3901,3901],[5788,5788],[8262,8262],[8318,8318],[8334,8334],[8969,8969],[8971,8971],[9002,9002],[10089,10089],[10091,10091],[10093,10093],[10095,10095],[10097,10097],[10099,10099],[10101,10101],[10182,10182],[10215,10215],[10217,10217],[10219,10219],[10221,10221],[10223,10223],[10628,10628],[10630,10630],[10632,10632],[10634,10634],[10636,10636],[10638,10638],[10640,10640],[10642,10642],[10644,10644],[10646,10646],[10648,10648],[10713,10713],[10715,10715],[10749,10749],[11811,11811],[11813,11813],[11815,11815],[11817,11817],[12297,12297],[12299,12299],[12301,12301],[12303,12303],[12305,12305],[12309,12309],[12311,12311],[12313,12313],[12315,12315],[12318,12319],[64830,64830],[65048,65048],[65078,65078],[65080,65080],[65082,65082],[65084,65084],[65086,65086],[65088,65088],[65090,65090],[65092,65092],[65096,65096],[65114,65114],[65116,65116],[65118,65118],[65289,65289],[65341,65341],[65373,65373],[65376,65376],[65379,65379]],Ps:[[40,40],[91,91],[123,123],[3898,3898],[3900,3900],[5787,5787],[8218,8218],[8222,8222],[8261,8261],[8317,8317],[8333,8333],[8968,8968],[8970,8970],[9001,9001],[10088,10088],[10090,10090],[10092,10092],[10094,10094],[10096,10096],[10098,10098],[10100,10100],[10181,10181],[10214,10214],[10216,10216],[10218,10218],[10220,10220],[10222,10222],[10627,10627],[10629,10629],[10631,10631],[10633,10633],[10635,10635],[10637,10637],[10639,10639],[10641,10641],[10643,10643],[10645,10645],[10647,10647],[10712,10712],[10714,10714],[10748,10748],[11810,11810],[11812,11812],[11814,11814],[11816,11816],[11842,11842],[12296,12296],[12298,12298],[12300,12300],[12302,12302],[12304,12304],[12308,12308],[12310,12310],[12312,12312],[12314,12314],[12317,12317],[64831,64831],[65047,65047],[65077,65077],[65079,65079],[65081,65081],[65083,65083],[65085,65085],[65087,65087],[65089,65089],[65091,65091],[65095,65095],[65113,65113],[65115,65115],[65117,65117],[65288,65288],[65339,65339],[65371,65371],[65375,65375],[65378,65378]],Lm:[[688,705],[710,721],[736,740],[748,748],[750,750],[884,884],[890,890],[1369,1369],[1600,1600],[1765,1766],[2036,2037],[2042,2042],[2074,2074],[2084,2084],[2088,2088],[2417,2417],[3654,3654],[3782,3782],[4348,4348],[6103,6103],[6211,6211],[6823,6823],[7288,7293],[7468,7530],[7544,7544],[7579,7615],[8305,8305],[8319,8319],[8336,8348],[11388,11389],[11631,11631],[11823,11823],[12293,12293],[12337,12341],[12347,12347],[12445,12446],[12540,12542],[40981,40981],[42232,42237],[42508,42508],[42623,42623],[42652,42653],[42775,42783],[42864,42864],[42888,42888],[43e3,43001],[43471,43471],[43494,43494],[43632,43632],[43741,43741],[43763,43764],[43868,43871],[65392,65392],[65438,65439]],Mc:[[2307,2307],[2363,2363],[2366,2368],[2377,2380],[2382,2383],[2434,2435],[2494,2496],[2503,2504],[2507,2508],[2519,2519],[2563,2563],[2622,2624],[2691,2691],[2750,2752],[2761,2761],[2763,2764],[2818,2819],[2878,2878],[2880,2880],[2887,2888],[2891,2892],[2903,2903],[3006,3007],[3009,3010],[3014,3016],[3018,3020],[3031,3031],[3073,3075],[3137,3140],[3202,3203],[3262,3262],[3264,3268],[3271,3272],[3274,3275],[3285,3286],[3330,3331],[3390,3392],[3398,3400],[3402,3404],[3415,3415],[3458,3459],[3535,3537],[3544,3551],[3570,3571],[3902,3903],[3967,3967],[4139,4140],[4145,4145],[4152,4152],[4155,4156],[4182,4183],[4194,4196],[4199,4205],[4227,4228],[4231,4236],[4239,4239],[4250,4252],[6070,6070],[6078,6085],[6087,6088],[6435,6438],[6441,6443],[6448,6449],[6451,6456],[6681,6682],[6741,6741],[6743,6743],[6753,6753],[6755,6756],[6765,6770],[6916,6916],[6965,6965],[6971,6971],[6973,6977],[6979,6980],[7042,7042],[7073,7073],[7078,7079],[7082,7082],[7143,7143],[7146,7148],[7150,7150],[7154,7155],[7204,7211],[7220,7221],[7393,7393],[7410,7411],[7415,7415],[12334,12335],[43043,43044],[43047,43047],[43136,43137],[43188,43203],[43346,43347],[43395,43395],[43444,43445],[43450,43451],[43453,43456],[43567,43568],[43571,43572],[43597,43597],[43643,43643],[43645,43645],[43755,43755],[43758,43759],[43765,43765],[44003,44004],[44006,44007],[44009,44010],[44012,44012]],Zp:[[8233,8233]],Sc:[[36,36],[162,165],[1423,1423],[1547,1547],[2546,2547],[2555,2555],[2801,2801],[3065,3065],[3647,3647],[6107,6107],[8352,8383],[43064,43064],[65020,65020],[65129,65129],[65284,65284],[65504,65505],[65509,65510]],Me:[[1160,1161],[6846,6846],[8413,8416],[8418,8420],[42608,42610]],Sk:[[94,94],[96,96],[168,168],[175,175],[180,180],[184,184],[706,709],[722,735],[741,747],[749,749],[751,767],[885,885],[900,901],[8125,8125],[8127,8129],[8141,8143],[8157,8159],[8173,8175],[8189,8190],[12443,12444],[42752,42774],[42784,42785],[42889,42890],[43867,43867],[64434,64449],[65342,65342],[65344,65344],[65507,65507]],Cs:[[55296,55296],[56191,56192],[56319,56320],[57343,57343]],Nl:[[5870,5872],[8544,8578],[8581,8584],[12295,12295],[12321,12329],[12344,12346],[42726,42735]],So:[[166,166],[169,169],[174,174],[176,176],[1154,1154],[1421,1422],[1550,1551],[1758,1758],[1769,1769],[1789,1790],[2038,2038],[2554,2554],[2928,2928],[3059,3064],[3066,3066],[3199,3199],[3407,3407],[3449,3449],[3841,3843],[3859,3859],[3861,3863],[3866,3871],[3892,3892],[3894,3894],[3896,3896],[4030,4037],[4039,4044],[4046,4047],[4053,4056],[4254,4255],[5008,5017],[6464,6464],[6622,6655],[7009,7018],[7028,7036],[8448,8449],[8451,8454],[8456,8457],[8468,8468],[8470,8471],[8478,8483],[8485,8485],[8487,8487],[8489,8489],[8494,8494],[8506,8507],[8522,8522],[8524,8525],[8527,8527],[8586,8587],[8597,8601],[8604,8607],[8609,8610],[8612,8613],[8615,8621],[8623,8653],[8656,8657],[8659,8659],[8661,8691],[8960,8967],[8972,8991],[8994,9e3],[9003,9083],[9085,9114],[9140,9179],[9186,9254],[9280,9290],[9372,9449],[9472,9654],[9656,9664],[9666,9719],[9728,9838],[9840,10087],[10132,10175],[10240,10495],[11008,11055],[11077,11078],[11085,11123],[11126,11157],[11160,11193],[11197,11208],[11210,11218],[11244,11247],[11493,11498],[11904,11929],[11931,12019],[12032,12245],[12272,12283],[12292,12292],[12306,12307],[12320,12320],[12342,12343],[12350,12351],[12688,12689],[12694,12703],[12736,12771],[12800,12830],[12842,12871],[12880,12880],[12896,12927],[12938,12976],[12992,13054],[13056,13311],[19904,19967],[42128,42182],[43048,43051],[43062,43063],[43065,43065],[43639,43641],[65021,65021],[65508,65508],[65512,65512],[65517,65518],[65532,65533]],Lt:[[453,453],[456,456],[459,459],[498,498],[8072,8079],[8088,8095],[8104,8111],[8124,8124],[8140,8140],[8188,8188]],Zl:[[8232,8232]],Lo:[[170,170],[186,186],[443,443],[448,451],[660,660],[1488,1514],[1520,1522],[1568,1599],[1601,1610],[1646,1647],[1649,1747],[1749,1749],[1774,1775],[1786,1788],[1791,1791],[1808,1808],[1810,1839],[1869,1957],[1969,1969],[1994,2026],[2048,2069],[2112,2136],[2144,2154],[2208,2228],[2230,2237],[2308,2361],[2365,2365],[2384,2384],[2392,2401],[2418,2432],[2437,2444],[2447,2448],[2451,2472],[2474,2480],[2482,2482],[2486,2489],[2493,2493],[2510,2510],[2524,2525],[2527,2529],[2544,2545],[2556,2556],[2565,2570],[2575,2576],[2579,2600],[2602,2608],[2610,2611],[2613,2614],[2616,2617],[2649,2652],[2654,2654],[2674,2676],[2693,2701],[2703,2705],[2707,2728],[2730,2736],[2738,2739],[2741,2745],[2749,2749],[2768,2768],[2784,2785],[2809,2809],[2821,2828],[2831,2832],[2835,2856],[2858,2864],[2866,2867],[2869,2873],[2877,2877],[2908,2909],[2911,2913],[2929,2929],[2947,2947],[2949,2954],[2958,2960],[2962,2965],[2969,2970],[2972,2972],[2974,2975],[2979,2980],[2984,2986],[2990,3001],[3024,3024],[3077,3084],[3086,3088],[3090,3112],[3114,3129],[3133,3133],[3160,3162],[3168,3169],[3200,3200],[3205,3212],[3214,3216],[3218,3240],[3242,3251],[3253,3257],[3261,3261],[3294,3294],[3296,3297],[3313,3314],[3333,3340],[3342,3344],[3346,3386],[3389,3389],[3406,3406],[3412,3414],[3423,3425],[3450,3455],[3461,3478],[3482,3505],[3507,3515],[3517,3517],[3520,3526],[3585,3632],[3634,3635],[3648,3653],[3713,3714],[3716,3716],[3719,3720],[3722,3722],[3725,3725],[3732,3735],[3737,3743],[3745,3747],[3749,3749],[3751,3751],[3754,3755],[3757,3760],[3762,3763],[3773,3773],[3776,3780],[3804,3807],[3840,3840],[3904,3911],[3913,3948],[3976,3980],[4096,4138],[4159,4159],[4176,4181],[4186,4189],[4193,4193],[4197,4198],[4206,4208],[4213,4225],[4238,4238],[4304,4346],[4349,4680],[4682,4685],[4688,4694],[4696,4696],[4698,4701],[4704,4744],[4746,4749],[4752,4784],[4786,4789],[4792,4798],[4800,4800],[4802,4805],[4808,4822],[4824,4880],[4882,4885],[4888,4954],[4992,5007],[5121,5740],[5743,5759],[5761,5786],[5792,5866],[5873,5880],[5888,5900],[5902,5905],[5920,5937],[5952,5969],[5984,5996],[5998,6e3],[6016,6067],[6108,6108],[6176,6210],[6212,6263],[6272,6276],[6279,6312],[6314,6314],[6320,6389],[6400,6430],[6480,6509],[6512,6516],[6528,6571],[6576,6601],[6656,6678],[6688,6740],[6917,6963],[6981,6987],[7043,7072],[7086,7087],[7098,7141],[7168,7203],[7245,7247],[7258,7287],[7401,7404],[7406,7409],[7413,7414],[8501,8504],[11568,11623],[11648,11670],[11680,11686],[11688,11694],[11696,11702],[11704,11710],[11712,11718],[11720,11726],[11728,11734],[11736,11742],[12294,12294],[12348,12348],[12353,12438],[12447,12447],[12449,12538],[12543,12543],[12549,12590],[12593,12686],[12704,12730],[12784,12799],[13312,13312],[19893,19893],[19968,19968],[40938,40938],[40960,40980],[40982,42124],[42192,42231],[42240,42507],[42512,42527],[42538,42539],[42606,42606],[42656,42725],[42895,42895],[42999,42999],[43003,43009],[43011,43013],[43015,43018],[43020,43042],[43072,43123],[43138,43187],[43250,43255],[43259,43259],[43261,43261],[43274,43301],[43312,43334],[43360,43388],[43396,43442],[43488,43492],[43495,43503],[43514,43518],[43520,43560],[43584,43586],[43588,43595],[43616,43631],[43633,43638],[43642,43642],[43646,43695],[43697,43697],[43701,43702],[43705,43709],[43712,43712],[43714,43714],[43739,43740],[43744,43754],[43762,43762],[43777,43782],[43785,43790],[43793,43798],[43808,43814],[43816,43822],[43968,44002],[44032,44032],[55203,55203],[55216,55238],[55243,55291],[63744,64109],[64112,64217],[64285,64285],[64287,64296],[64298,64310],[64312,64316],[64318,64318],[64320,64321],[64323,64324],[64326,64433],[64467,64829],[64848,64911],[64914,64967],[65008,65019],[65136,65140],[65142,65276],[65382,65391],[65393,65437],[65440,65470],[65474,65479],[65482,65487],[65490,65495],[65498,65500]],Mn:[[768,879],[1155,1159],[1425,1469],[1471,1471],[1473,1474],[1476,1477],[1479,1479],[1552,1562],[1611,1631],[1648,1648],[1750,1756],[1759,1764],[1767,1768],[1770,1773],[1809,1809],[1840,1866],[1958,1968],[2027,2035],[2070,2073],[2075,2083],[2085,2087],[2089,2093],[2137,2139],[2260,2273],[2275,2306],[2362,2362],[2364,2364],[2369,2376],[2381,2381],[2385,2391],[2402,2403],[2433,2433],[2492,2492],[2497,2500],[2509,2509],[2530,2531],[2561,2562],[2620,2620],[2625,2626],[2631,2632],[2635,2637],[2641,2641],[2672,2673],[2677,2677],[2689,2690],[2748,2748],[2753,2757],[2759,2760],[2765,2765],[2786,2787],[2810,2815],[2817,2817],[2876,2876],[2879,2879],[2881,2884],[2893,2893],[2902,2902],[2914,2915],[2946,2946],[3008,3008],[3021,3021],[3072,3072],[3134,3136],[3142,3144],[3146,3149],[3157,3158],[3170,3171],[3201,3201],[3260,3260],[3263,3263],[3270,3270],[3276,3277],[3298,3299],[3328,3329],[3387,3388],[3393,3396],[3405,3405],[3426,3427],[3530,3530],[3538,3540],[3542,3542],[3633,3633],[3636,3642],[3655,3662],[3761,3761],[3764,3769],[3771,3772],[3784,3789],[3864,3865],[3893,3893],[3895,3895],[3897,3897],[3953,3966],[3968,3972],[3974,3975],[3981,3991],[3993,4028],[4038,4038],[4141,4144],[4146,4151],[4153,4154],[4157,4158],[4184,4185],[4190,4192],[4209,4212],[4226,4226],[4229,4230],[4237,4237],[4253,4253],[4957,4959],[5906,5908],[5938,5940],[5970,5971],[6002,6003],[6068,6069],[6071,6077],[6086,6086],[6089,6099],[6109,6109],[6155,6157],[6277,6278],[6313,6313],[6432,6434],[6439,6440],[6450,6450],[6457,6459],[6679,6680],[6683,6683],[6742,6742],[6744,6750],[6752,6752],[6754,6754],[6757,6764],[6771,6780],[6783,6783],[6832,6845],[6912,6915],[6964,6964],[6966,6970],[6972,6972],[6978,6978],[7019,7027],[7040,7041],[7074,7077],[7080,7081],[7083,7085],[7142,7142],[7144,7145],[7149,7149],[7151,7153],[7212,7219],[7222,7223],[7376,7378],[7380,7392],[7394,7400],[7405,7405],[7412,7412],[7416,7417],[7616,7673],[7675,7679],[8400,8412],[8417,8417],[8421,8432],[11503,11505],[11647,11647],[11744,11775],[12330,12333],[12441,12442],[42607,42607],[42612,42621],[42654,42655],[42736,42737],[43010,43010],[43014,43014],[43019,43019],[43045,43046],[43204,43205],[43232,43249],[43302,43309],[43335,43345],[43392,43394],[43443,43443],[43446,43449],[43452,43452],[43493,43493],[43561,43566],[43569,43570],[43573,43574],[43587,43587],[43596,43596],[43644,43644],[43696,43696],[43698,43700],[43703,43704],[43710,43711],[43713,43713],[43756,43757],[43766,43766],[44005,44005],[44008,44008],[44013,44013],[64286,64286],[65024,65039],[65056,65071]],Po:[[33,35],[37,39],[42,42],[44,44],[46,47],[58,59],[63,64],[92,92],[161,161],[167,167],[182,183],[191,191],[894,894],[903,903],[1370,1375],[1417,1417],[1472,1472],[1475,1475],[1478,1478],[1523,1524],[1545,1546],[1548,1549],[1563,1563],[1566,1567],[1642,1645],[1748,1748],[1792,1805],[2039,2041],[2096,2110],[2142,2142],[2404,2405],[2416,2416],[2557,2557],[2800,2800],[3572,3572],[3663,3663],[3674,3675],[3844,3858],[3860,3860],[3973,3973],[4048,4052],[4057,4058],[4170,4175],[4347,4347],[4960,4968],[5741,5742],[5867,5869],[5941,5942],[6100,6102],[6104,6106],[6144,6149],[6151,6154],[6468,6469],[6686,6687],[6816,6822],[6824,6829],[7002,7008],[7164,7167],[7227,7231],[7294,7295],[7360,7367],[7379,7379],[8214,8215],[8224,8231],[8240,8248],[8251,8254],[8257,8259],[8263,8273],[8275,8275],[8277,8286],[11513,11516],[11518,11519],[11632,11632],[11776,11777],[11782,11784],[11787,11787],[11790,11798],[11800,11801],[11803,11803],[11806,11807],[11818,11822],[11824,11833],[11836,11839],[11841,11841],[11843,11849],[12289,12291],[12349,12349],[12539,12539],[42238,42239],[42509,42511],[42611,42611],[42622,42622],[42738,42743],[43124,43127],[43214,43215],[43256,43258],[43260,43260],[43310,43311],[43359,43359],[43457,43469],[43486,43487],[43612,43615],[43742,43743],[43760,43761],[44011,44011],[65040,65046],[65049,65049],[65072,65072],[65093,65094],[65097,65100],[65104,65106],[65108,65111],[65119,65121],[65128,65128],[65130,65131],[65281,65283],[65285,65287],[65290,65290],[65292,65292],[65294,65295],[65306,65307],[65311,65312],[65340,65340],[65377,65377],[65380,65381]],Co:[[57344,57344],[63743,63743]],Sm:[[43,43],[60,62],[124,124],[126,126],[172,172],[177,177],[215,215],[247,247],[1014,1014],[1542,1544],[8260,8260],[8274,8274],[8314,8316],[8330,8332],[8472,8472],[8512,8516],[8523,8523],[8592,8596],[8602,8603],[8608,8608],[8611,8611],[8614,8614],[8622,8622],[8654,8655],[8658,8658],[8660,8660],[8692,8959],[8992,8993],[9084,9084],[9115,9139],[9180,9185],[9655,9655],[9665,9665],[9720,9727],[9839,9839],[10176,10180],[10183,10213],[10224,10239],[10496,10626],[10649,10711],[10716,10747],[10750,11007],[11056,11076],[11079,11084],[64297,64297],[65122,65122],[65124,65126],[65291,65291],[65308,65310],[65372,65372],[65374,65374],[65506,65506],[65513,65516]],Pf:[[187,187],[8217,8217],[8221,8221],[8250,8250],[11779,11779],[11781,11781],[11786,11786],[11789,11789],[11805,11805],[11809,11809]],Cc:[[0,31],[127,159]],Pi:[[171,171],[8216,8216],[8219,8220],[8223,8223],[8249,8249],[11778,11778],[11780,11780],[11785,11785],[11788,11788],[11804,11804],[11808,11808]],Lu:[[65,90],[192,214],[216,222],[256,256],[258,258],[260,260],[262,262],[264,264],[266,266],[268,268],[270,270],[272,272],[274,274],[276,276],[278,278],[280,280],[282,282],[284,284],[286,286],[288,288],[290,290],[292,292],[294,294],[296,296],[298,298],[300,300],[302,302],[304,304],[306,306],[308,308],[310,310],[313,313],[315,315],[317,317],[319,319],[321,321],[323,323],[325,325],[327,327],[330,330],[332,332],[334,334],[336,336],[338,338],[340,340],[342,342],[344,344],[346,346],[348,348],[350,350],[352,352],[354,354],[356,356],[358,358],[360,360],[362,362],[364,364],[366,366],[368,368],[370,370],[372,372],[374,374],[376,377],[379,379],[381,381],[385,386],[388,388],[390,391],[393,395],[398,401],[403,404],[406,408],[412,413],[415,416],[418,418],[420,420],[422,423],[425,425],[428,428],[430,431],[433,435],[437,437],[439,440],[444,444],[452,452],[455,455],[458,458],[461,461],[463,463],[465,465],[467,467],[469,469],[471,471],[473,473],[475,475],[478,478],[480,480],[482,482],[484,484],[486,486],[488,488],[490,490],[492,492],[494,494],[497,497],[500,500],[502,504],[506,506],[508,508],[510,510],[512,512],[514,514],[516,516],[518,518],[520,520],[522,522],[524,524],[526,526],[528,528],[530,530],[532,532],[534,534],[536,536],[538,538],[540,540],[542,542],[544,544],[546,546],[548,548],[550,550],[552,552],[554,554],[556,556],[558,558],[560,560],[562,562],[570,571],[573,574],[577,577],[579,582],[584,584],[586,586],[588,588],[590,590],[880,880],[882,882],[886,886],[895,895],[902,902],[904,906],[908,908],[910,911],[913,929],[931,939],[975,975],[978,980],[984,984],[986,986],[988,988],[990,990],[992,992],[994,994],[996,996],[998,998],[1e3,1e3],[1002,1002],[1004,1004],[1006,1006],[1012,1012],[1015,1015],[1017,1018],[1021,1071],[1120,1120],[1122,1122],[1124,1124],[1126,1126],[1128,1128],[1130,1130],[1132,1132],[1134,1134],[1136,1136],[1138,1138],[1140,1140],[1142,1142],[1144,1144],[1146,1146],[1148,1148],[1150,1150],[1152,1152],[1162,1162],[1164,1164],[1166,1166],[1168,1168],[1170,1170],[1172,1172],[1174,1174],[1176,1176],[1178,1178],[1180,1180],[1182,1182],[1184,1184],[1186,1186],[1188,1188],[1190,1190],[1192,1192],[1194,1194],[1196,1196],[1198,1198],[1200,1200],[1202,1202],[1204,1204],[1206,1206],[1208,1208],[1210,1210],[1212,1212],[1214,1214],[1216,1217],[1219,1219],[1221,1221],[1223,1223],[1225,1225],[1227,1227],[1229,1229],[1232,1232],[1234,1234],[1236,1236],[1238,1238],[1240,1240],[1242,1242],[1244,1244],[1246,1246],[1248,1248],[1250,1250],[1252,1252],[1254,1254],[1256,1256],[1258,1258],[1260,1260],[1262,1262],[1264,1264],[1266,1266],[1268,1268],[1270,1270],[1272,1272],[1274,1274],[1276,1276],[1278,1278],[1280,1280],[1282,1282],[1284,1284],[1286,1286],[1288,1288],[1290,1290],[1292,1292],[1294,1294],[1296,1296],[1298,1298],[1300,1300],[1302,1302],[1304,1304],[1306,1306],[1308,1308],[1310,1310],[1312,1312],[1314,1314],[1316,1316],[1318,1318],[1320,1320],[1322,1322],[1324,1324],[1326,1326],[1329,1366],[4256,4293],[4295,4295],[4301,4301],[5024,5109],[7680,7680],[7682,7682],[7684,7684],[7686,7686],[7688,7688],[7690,7690],[7692,7692],[7694,7694],[7696,7696],[7698,7698],[7700,7700],[7702,7702],[7704,7704],[7706,7706],[7708,7708],[7710,7710],[7712,7712],[7714,7714],[7716,7716],[7718,7718],[7720,7720],[7722,7722],[7724,7724],[7726,7726],[7728,7728],[7730,7730],[7732,7732],[7734,7734],[7736,7736],[7738,7738],[7740,7740],[7742,7742],[7744,7744],[7746,7746],[7748,7748],[7750,7750],[7752,7752],[7754,7754],[7756,7756],[7758,7758],[7760,7760],[7762,7762],[7764,7764],[7766,7766],[7768,7768],[7770,7770],[7772,7772],[7774,7774],[7776,7776],[7778,7778],[7780,7780],[7782,7782],[7784,7784],[7786,7786],[7788,7788],[7790,7790],[7792,7792],[7794,7794],[7796,7796],[7798,7798],[7800,7800],[7802,7802],[7804,7804],[7806,7806],[7808,7808],[7810,7810],[7812,7812],[7814,7814],[7816,7816],[7818,7818],[7820,7820],[7822,7822],[7824,7824],[7826,7826],[7828,7828],[7838,7838],[7840,7840],[7842,7842],[7844,7844],[7846,7846],[7848,7848],[7850,7850],[7852,7852],[7854,7854],[7856,7856],[7858,7858],[7860,7860],[7862,7862],[7864,7864],[7866,7866],[7868,7868],[7870,7870],[7872,7872],[7874,7874],[7876,7876],[7878,7878],[7880,7880],[7882,7882],[7884,7884],[7886,7886],[7888,7888],[7890,7890],[7892,7892],[7894,7894],[7896,7896],[7898,7898],[7900,7900],[7902,7902],[7904,7904],[7906,7906],[7908,7908],[7910,7910],[7912,7912],[7914,7914],[7916,7916],[7918,7918],[7920,7920],[7922,7922],[7924,7924],[7926,7926],[7928,7928],[7930,7930],[7932,7932],[7934,7934],[7944,7951],[7960,7965],[7976,7983],[7992,7999],[8008,8013],[8025,8025],[8027,8027],[8029,8029],[8031,8031],[8040,8047],[8120,8123],[8136,8139],[8152,8155],[8168,8172],[8184,8187],[8450,8450],[8455,8455],[8459,8461],[8464,8466],[8469,8469],[8473,8477],[8484,8484],[8486,8486],[8488,8488],[8490,8493],[8496,8499],[8510,8511],[8517,8517],[8579,8579],[11264,11310],[11360,11360],[11362,11364],[11367,11367],[11369,11369],[11371,11371],[11373,11376],[11378,11378],[11381,11381],[11390,11392],[11394,11394],[11396,11396],[11398,11398],[11400,11400],[11402,11402],[11404,11404],[11406,11406],[11408,11408],[11410,11410],[11412,11412],[11414,11414],[11416,11416],[11418,11418],[11420,11420],[11422,11422],[11424,11424],[11426,11426],[11428,11428],[11430,11430],[11432,11432],[11434,11434],[11436,11436],[11438,11438],[11440,11440],[11442,11442],[11444,11444],[11446,11446],[11448,11448],[11450,11450],[11452,11452],[11454,11454],[11456,11456],[11458,11458],[11460,11460],[11462,11462],[11464,11464],[11466,11466],[11468,11468],[11470,11470],[11472,11472],[11474,11474],[11476,11476],[11478,11478],[11480,11480],[11482,11482],[11484,11484],[11486,11486],[11488,11488],[11490,11490],[11499,11499],[11501,11501],[11506,11506],[42560,42560],[42562,42562],[42564,42564],[42566,42566],[42568,42568],[42570,42570],[42572,42572],[42574,42574],[42576,42576],[42578,42578],[42580,42580],[42582,42582],[42584,42584],[42586,42586],[42588,42588],[42590,42590],[42592,42592],[42594,42594],[42596,42596],[42598,42598],[42600,42600],[42602,42602],[42604,42604],[42624,42624],[42626,42626],[42628,42628],[42630,42630],[42632,42632],[42634,42634],[42636,42636],[42638,42638],[42640,42640],[42642,42642],[42644,42644],[42646,42646],[42648,42648],[42650,42650],[42786,42786],[42788,42788],[42790,42790],[42792,42792],[42794,42794],[42796,42796],[42798,42798],[42802,42802],[42804,42804],[42806,42806],[42808,42808],[42810,42810],[42812,42812],[42814,42814],[42816,42816],[42818,42818],[42820,42820],[42822,42822],[42824,42824],[42826,42826],[42828,42828],[42830,42830],[42832,42832],[42834,42834],[42836,42836],[42838,42838],[42840,42840],[42842,42842],[42844,42844],[42846,42846],[42848,42848],[42850,42850],[42852,42852],[42854,42854],[42856,42856],[42858,42858],[42860,42860],[42862,42862],[42873,42873],[42875,42875],[42877,42878],[42880,42880],[42882,42882],[42884,42884],[42886,42886],[42891,42891],[42893,42893],[42896,42896],[42898,42898],[42902,42902],[42904,42904],[42906,42906],[42908,42908],[42910,42910],[42912,42912],[42914,42914],[42916,42916],[42918,42918],[42920,42920],[42922,42926],[42928,42932],[42934,42934],[65313,65338]],Pd:[[45,45],[1418,1418],[1470,1470],[5120,5120],[6150,6150],[8208,8213],[11799,11799],[11802,11802],[11834,11835],[11840,11840],[12316,12316],[12336,12336],[12448,12448],[65073,65074],[65112,65112],[65123,65123],[65293,65293]],Cf:[[173,173],[1536,1541],[1564,1564],[1757,1757],[1807,1807],[2274,2274],[6158,6158],[8203,8207],[8234,8238],[8288,8292],[8294,8303],[65279,65279],[65529,65531]],Nd:[[48,57],[1632,1641],[1776,1785],[1984,1993],[2406,2415],[2534,2543],[2662,2671],[2790,2799],[2918,2927],[3046,3055],[3174,3183],[3302,3311],[3430,3439],[3558,3567],[3664,3673],[3792,3801],[3872,3881],[4160,4169],[4240,4249],[6112,6121],[6160,6169],[6470,6479],[6608,6617],[6784,6793],[6800,6809],[6992,7001],[7088,7097],[7232,7241],[7248,7257],[42528,42537],[43216,43225],[43264,43273],[43472,43481],[43504,43513],[43600,43609],[44016,44025],[65296,65305]],Ll:[[97,122],[181,181],[223,246],[248,255],[257,257],[259,259],[261,261],[263,263],[265,265],[267,267],[269,269],[271,271],[273,273],[275,275],[277,277],[279,279],[281,281],[283,283],[285,285],[287,287],[289,289],[291,291],[293,293],[295,295],[297,297],[299,299],[301,301],[303,303],[305,305],[307,307],[309,309],[311,312],[314,314],[316,316],[318,318],[320,320],[322,322],[324,324],[326,326],[328,329],[331,331],[333,333],[335,335],[337,337],[339,339],[341,341],[343,343],[345,345],[347,347],[349,349],[351,351],[353,353],[355,355],[357,357],[359,359],[361,361],[363,363],[365,365],[367,367],[369,369],[371,371],[373,373],[375,375],[378,378],[380,380],[382,384],[387,387],[389,389],[392,392],[396,397],[402,402],[405,405],[409,411],[414,414],[417,417],[419,419],[421,421],[424,424],[426,427],[429,429],[432,432],[436,436],[438,438],[441,442],[445,447],[454,454],[457,457],[460,460],[462,462],[464,464],[466,466],[468,468],[470,470],[472,472],[474,474],[476,477],[479,479],[481,481],[483,483],[485,485],[487,487],[489,489],[491,491],[493,493],[495,496],[499,499],[501,501],[505,505],[507,507],[509,509],[511,511],[513,513],[515,515],[517,517],[519,519],[521,521],[523,523],[525,525],[527,527],[529,529],[531,531],[533,533],[535,535],[537,537],[539,539],[541,541],[543,543],[545,545],[547,547],[549,549],[551,551],[553,553],[555,555],[557,557],[559,559],[561,561],[563,569],[572,572],[575,576],[578,578],[583,583],[585,585],[587,587],[589,589],[591,659],[661,687],[881,881],[883,883],[887,887],[891,893],[912,912],[940,974],[976,977],[981,983],[985,985],[987,987],[989,989],[991,991],[993,993],[995,995],[997,997],[999,999],[1001,1001],[1003,1003],[1005,1005],[1007,1011],[1013,1013],[1016,1016],[1019,1020],[1072,1119],[1121,1121],[1123,1123],[1125,1125],[1127,1127],[1129,1129],[1131,1131],[1133,1133],[1135,1135],[1137,1137],[1139,1139],[1141,1141],[1143,1143],[1145,1145],[1147,1147],[1149,1149],[1151,1151],[1153,1153],[1163,1163],[1165,1165],[1167,1167],[1169,1169],[1171,1171],[1173,1173],[1175,1175],[1177,1177],[1179,1179],[1181,1181],[1183,1183],[1185,1185],[1187,1187],[1189,1189],[1191,1191],[1193,1193],[1195,1195],[1197,1197],[1199,1199],[1201,1201],[1203,1203],[1205,1205],[1207,1207],[1209,1209],[1211,1211],[1213,1213],[1215,1215],[1218,1218],[1220,1220],[1222,1222],[1224,1224],[1226,1226],[1228,1228],[1230,1231],[1233,1233],[1235,1235],[1237,1237],[1239,1239],[1241,1241],[1243,1243],[1245,1245],[1247,1247],[1249,1249],[1251,1251],[1253,1253],[1255,1255],[1257,1257],[1259,1259],[1261,1261],[1263,1263],[1265,1265],[1267,1267],[1269,1269],[1271,1271],[1273,1273],[1275,1275],[1277,1277],[1279,1279],[1281,1281],[1283,1283],[1285,1285],[1287,1287],[1289,1289],[1291,1291],[1293,1293],[1295,1295],[1297,1297],[1299,1299],[1301,1301],[1303,1303],[1305,1305],[1307,1307],[1309,1309],[1311,1311],[1313,1313],[1315,1315],[1317,1317],[1319,1319],[1321,1321],[1323,1323],[1325,1325],[1327,1327],[1377,1415],[5112,5117],[7296,7304],[7424,7467],[7531,7543],[7545,7578],[7681,7681],[7683,7683],[7685,7685],[7687,7687],[7689,7689],[7691,7691],[7693,7693],[7695,7695],[7697,7697],[7699,7699],[7701,7701],[7703,7703],[7705,7705],[7707,7707],[7709,7709],[7711,7711],[7713,7713],[7715,7715],[7717,7717],[7719,7719],[7721,7721],[7723,7723],[7725,7725],[7727,7727],[7729,7729],[7731,7731],[7733,7733],[7735,7735],[7737,7737],[7739,7739],[7741,7741],[7743,7743],[7745,7745],[7747,7747],[7749,7749],[7751,7751],[7753,7753],[7755,7755],[7757,7757],[7759,7759],[7761,7761],[7763,7763],[7765,7765],[7767,7767],[7769,7769],[7771,7771],[7773,7773],[7775,7775],[7777,7777],[7779,7779],[7781,7781],[7783,7783],[7785,7785],[7787,7787],[7789,7789],[7791,7791],[7793,7793],[7795,7795],[7797,7797],[7799,7799],[7801,7801],[7803,7803],[7805,7805],[7807,7807],[7809,7809],[7811,7811],[7813,7813],[7815,7815],[7817,7817],[7819,7819],[7821,7821],[7823,7823],[7825,7825],[7827,7827],[7829,7837],[7839,7839],[7841,7841],[7843,7843],[7845,7845],[7847,7847],[7849,7849],[7851,7851],[7853,7853],[7855,7855],[7857,7857],[7859,7859],[7861,7861],[7863,7863],[7865,7865],[7867,7867],[7869,7869],[7871,7871],[7873,7873],[7875,7875],[7877,7877],[7879,7879],[7881,7881],[7883,7883],[7885,7885],[7887,7887],[7889,7889],[7891,7891],[7893,7893],[7895,7895],[7897,7897],[7899,7899],[7901,7901],[7903,7903],[7905,7905],[7907,7907],[7909,7909],[7911,7911],[7913,7913],[7915,7915],[7917,7917],[7919,7919],[7921,7921],[7923,7923],[7925,7925],[7927,7927],[7929,7929],[7931,7931],[7933,7933],[7935,7943],[7952,7957],[7968,7975],[7984,7991],[8e3,8005],[8016,8023],[8032,8039],[8048,8061],[8064,8071],[8080,8087],[8096,8103],[8112,8116],[8118,8119],[8126,8126],[8130,8132],[8134,8135],[8144,8147],[8150,8151],[8160,8167],[8178,8180],[8182,8183],[8458,8458],[8462,8463],[8467,8467],[8495,8495],[8500,8500],[8505,8505],[8508,8509],[8518,8521],[8526,8526],[8580,8580],[11312,11358],[11361,11361],[11365,11366],[11368,11368],[11370,11370],[11372,11372],[11377,11377],[11379,11380],[11382,11387],[11393,11393],[11395,11395],[11397,11397],[11399,11399],[11401,11401],[11403,11403],[11405,11405],[11407,11407],[11409,11409],[11411,11411],[11413,11413],[11415,11415],[11417,11417],[11419,11419],[11421,11421],[11423,11423],[11425,11425],[11427,11427],[11429,11429],[11431,11431],[11433,11433],[11435,11435],[11437,11437],[11439,11439],[11441,11441],[11443,11443],[11445,11445],[11447,11447],[11449,11449],[11451,11451],[11453,11453],[11455,11455],[11457,11457],[11459,11459],[11461,11461],[11463,11463],[11465,11465],[11467,11467],[11469,11469],[11471,11471],[11473,11473],[11475,11475],[11477,11477],[11479,11479],[11481,11481],[11483,11483],[11485,11485],[11487,11487],[11489,11489],[11491,11492],[11500,11500],[11502,11502],[11507,11507],[11520,11557],[11559,11559],[11565,11565],[42561,42561],[42563,42563],[42565,42565],[42567,42567],[42569,42569],[42571,42571],[42573,42573],[42575,42575],[42577,42577],[42579,42579],[42581,42581],[42583,42583],[42585,42585],[42587,42587],[42589,42589],[42591,42591],[42593,42593],[42595,42595],[42597,42597],[42599,42599],[42601,42601],[42603,42603],[42605,42605],[42625,42625],[42627,42627],[42629,42629],[42631,42631],[42633,42633],[42635,42635],[42637,42637],[42639,42639],[42641,42641],[42643,42643],[42645,42645],[42647,42647],[42649,42649],[42651,42651],[42787,42787],[42789,42789],[42791,42791],[42793,42793],[42795,42795],[42797,42797],[42799,42801],[42803,42803],[42805,42805],[42807,42807],[42809,42809],[42811,42811],[42813,42813],[42815,42815],[42817,42817],[42819,42819],[42821,42821],[42823,42823],[42825,42825],[42827,42827],[42829,42829],[42831,42831],[42833,42833],[42835,42835],[42837,42837],[42839,42839],[42841,42841],[42843,42843],[42845,42845],[42847,42847],[42849,42849],[42851,42851],[42853,42853],[42855,42855],[42857,42857],[42859,42859],[42861,42861],[42863,42863],[42865,42872],[42874,42874],[42876,42876],[42879,42879],[42881,42881],[42883,42883],[42885,42885],[42887,42887],[42892,42892],[42894,42894],[42897,42897],[42899,42901],[42903,42903],[42905,42905],[42907,42907],[42909,42909],[42911,42911],[42913,42913],[42915,42915],[42917,42917],[42919,42919],[42921,42921],[42933,42933],[42935,42935],[43002,43002],[43824,43866],[43872,43877],[43888,43967],[64256,64262],[64275,64279],[65345,65370]],No:[[178,179],[185,185],[188,190],[2548,2553],[2930,2935],[3056,3058],[3192,3198],[3416,3422],[3440,3448],[3882,3891],[4969,4988],[6128,6137],[6618,6618],[8304,8304],[8308,8313],[8320,8329],[8528,8543],[8585,8585],[9312,9371],[9450,9471],[10102,10131],[11517,11517],[12690,12693],[12832,12841],[12872,12879],[12881,12895],[12928,12937],[12977,12991],[43056,43061]],Zs:[[32,32],[160,160],[5760,5760],[8192,8202],[8239,8239],[8287,8287],[12288,12288]]}}}),utils=createCommonjsModule(function(r,e){function t(r){for(var e=r.toString(16);e.length<4;)e="0"+e;return e}e.__esModule=!0,e.normalize_ranges=function(r){return r.sort(function(r,e){return r[0]-e[0]}).reduce(function(r,e,t){if(0===t)return[e];var a=r[r.length-1],o=a[0],n=a[1],i=e[0],s=e[1];return n+1===i?r.slice(0,-1).concat([[o,s]]):r.concat([e])},[])},e.build_regex=function(r,e){var a=r.map(function(r){var e=r[0],a=r[1];return e===a?"\\u"+t(e):"\\u"+t(e)+"-\\u"+t(a)}).join("");return new RegExp("["+a+"]",e)}}),data_generated_1=data_generated,utils_1=utils,index$81=function(r,e){var t=data_generated_1.get_data(),a=r.reduce(function(r,e){return r.concat(t[e])},[]);return utils_1.build_regex(utils_1.normalize_ranges(a),e)};const stringWidth=index$67,emojiRegex=index$75(),escapeStringRegexp=index$77,getCjkRegex=index$79,getUnicodeRegex=index$81,cjkPattern=getCjkRegex().source,asciiPunctuationCharRange=escapeStringRegexp("!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~"),punctuationCharRange=`${asciiPunctuationCharRange}${getUnicodeRegex(["Pc","Pd","Pe","Pf","Pi","Po","Ps"]).source.slice(1,-1)}`,punctuationRegex=new RegExp(`[${punctuationCharRange}]`),skipWhitespace=skip(/\s/),skipSpaces=skip(" \t"),skipToLineEnd=skip(",; \t"),skipEverythingButNewLine=skip(/[^\r\n]/),PRECEDENCE={};[["|>"],["||","??"],["&&"],["|"],["^"],["&"],["==","===","!=","!=="],["<",">","<=",">=","in","instanceof"],[">>","<<",">>>"],["+","-"],["*","/","%"],["**"]].forEach((r,e)=>{r.forEach(r=>{PRECEDENCE[r]=e})});const equalityOperators={"==":!0,"!=":!0,"===":!0,"!==":!0},multiplicativeOperators={"*":!0,"/":!0,"%":!0},bitshiftOperators={">>":!0,">>>":!0,"<<":!0};var util$2={punctuationRegex:punctuationRegex,punctuationCharRange:punctuationCharRange,getStringWidth:getStringWidth,splitText:splitText$1,mapDoc:mapDoc,getMaxContinuousCount:getMaxContinuousCount,getPrecedence:getPrecedence,shouldFlatten:shouldFlatten,isBitwiseOperator:isBitwiseOperator,isExportDeclaration:isExportDeclaration,getParentExportDeclaration:getParentExportDeclaration,getPenultimate:getPenultimate,getLast:getLast,getNextNonSpaceNonCommentCharacterIndex:getNextNonSpaceNonCommentCharacterIndex,getNextNonSpaceNonCommentCharacter:getNextNonSpaceNonCommentCharacter,skipWhitespace:skipWhitespace,skipSpaces:skipSpaces,skipNewline:skipNewline,isNextLineEmptyAfterIndex:isNextLineEmptyAfterIndex,isNextLineEmpty:isNextLineEmpty,isPreviousLineEmpty:isPreviousLineEmpty,hasNewline:hasNewline,hasNewlineInRange:hasNewlineInRange,hasSpaces:hasSpaces,locStart:locStart,locEnd:locEnd,setLocStart:setLocStart,setLocEnd:setLocEnd,startsWithNoLookaheadToken:startsWithNoLookaheadToken,hasBlockComments:hasBlockComments,isBlockComment:isBlockComment,hasClosureCompilerTypeCastComment:hasClosureCompilerTypeCastComment,getAlignmentSize:getAlignmentSize,getIndentSize:getIndentSize,printString:printString,printNumber:printNumber};const remarkFrontmatter=index,remarkParse=index$4,unified=index$46,util$1=util$2;var parserMarkdown=parse;module.exports=parserMarkdown;
