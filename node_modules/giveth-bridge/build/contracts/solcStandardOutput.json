{
  "contracts": {
    "./contracts/ForeignGivethBridge.sol": {
      "ForeignGivethBridge": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "escapeHatchCaller",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newOwner",
                "type": "address"
              }
            ],
            "name": "changeOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "sender",
                "type": "address"
              },
              {
                "name": "mainToken",
                "type": "address"
              },
              {
                "name": "amount",
                "type": "uint256"
              },
              {
                "name": "homeTx",
                "type": "bytes32"
              },
              {
                "name": "data",
                "type": "bytes"
              }
            ],
            "name": "deposit",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "unpause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_from",
                "type": "address"
              },
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "onTransfer",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "paused",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_dac",
                "type": "address"
              }
            ],
            "name": "removeOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newOwnerCandidate",
                "type": "address"
              }
            ],
            "name": "proposeOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "liquidPledging",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "acceptOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "mainToken",
                "type": "address"
              },
              {
                "name": "tokenName",
                "type": "string"
              },
              {
                "name": "decimals",
                "type": "uint8"
              },
              {
                "name": "tokenSymbol",
                "type": "string"
              }
            ],
            "name": "addToken",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "pause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_token",
                "type": "address"
              }
            ],
            "name": "isTokenEscapable",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_token",
                "type": "address"
              }
            ],
            "name": "escapeHatch",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "name": "inverseTokenMapping",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "name": "tokenMapping",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "newOwnerCandidate",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newEscapeHatchCaller",
                "type": "address"
              }
            ],
            "name": "changeHatchEscapeCaller",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "onApprove",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "tokenFactory",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "sideToken",
                "type": "address"
              },
              {
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "withdraw",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              }
            ],
            "name": "proxyPayment",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": true,
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "escapeHatchDestination",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "name": "_escapeHatchCaller",
                "type": "address"
              },
              {
                "name": "_escapeHatchDestination",
                "type": "address"
              },
              {
                "name": "_tokenFactory",
                "type": "address"
              },
              {
                "name": "_liquidPledging",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "sender",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "token",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "amount",
                "type": "uint256"
              },
              {
                "indexed": false,
                "name": "homeTx",
                "type": "bytes32"
              },
              {
                "indexed": false,
                "name": "data",
                "type": "bytes"
              }
            ],
            "name": "Deposit",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "recipient",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "token",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "Withdraw",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "mainToken",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "sideToken",
                "type": "address"
              }
            ],
            "name": "TokenAdded",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "Pause",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "Unpause",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "token",
                "type": "address"
              }
            ],
            "name": "EscapeHatchBlackistedToken",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "token",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "EscapeHatchCalled",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "by",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              }
            ],
            "name": "OwnershipRequested",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "OwnershipRemoved",
            "type": "event"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "sourceMap": "878:3806:0:-;;;268:26:8;;;-1:-1:-1;;268:26:8;;;1482:428:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;993:5:7;:18;;-1:-1:-1;;;;;1001:10:7;993:18;;-1:-1:-1;;;;;;993:18:7;;;;;;;2101:17:6;:38;;;;;;;;;;;2149:22;:48;;;;;;;;;;;;;1482:428:0;;-1:-1:-1;1744:18:0;;;;;-1:-1:-1;1736:27:0;;;;;;-1:-1:-1;;;;;1781:20:0;;;;1773:29;;;;;;1813:12;:48;;-1:-1:-1;;;;;;1813:48:0;;-1:-1:-1;;;;;1813:48:0;;;;;;;1871:14;:32;;-1:-1:-1;;;;;;1871:32:0;;;;;;;;-1:-1:-1;878:3806:0;;-1:-1:-1;878:3806:0;;-1:-1:-1;878:3806:0;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "6060604052600436106200013d5763ffffffff60e060020a6000350416631f6eb6e78114620001425780632af4c31e14620001745780632b7c5dde14620001985780633f4ba83a14620001d65780634a39314914620001ec5780635c975abb146200022b578063666a34271462000241578063710bf322146200026357806374041d1f146200028557806379ba5097146200029b578063824f36f314620002b15780638456cb5914620002f2578063892db05714620003085780638da5cb5b146200032a578063a142d6081462000340578063af95e2d51462000362578063ba27f50b1462000384578063d091b55014620003a6578063d836fbe814620003bc578063da682aeb14620001ec578063e77772fe14620003de578063f3fef3a314620003f4578063f48c30541462000419578063f5b61230146200042f575b600080fd5b34156200014e57600080fd5b6200015862000445565b604051600160a060020a03909116815260200160405180910390f35b34156200018057600080fd5b62000196600160a060020a036004351662000454565b005b3415620001a457600080fd5b62000196600160a060020a036004803582169160248035909116916044359160643591608435918201910135620004f7565b3415620001e257600080fd5b6200019662000761565b3415620001f857600080fd5b62000217600160a060020a0360043581169060243516604435620007c7565b604051901515815260200160405180910390f35b34156200023757600080fd5b62000217620007d0565b34156200024d57600080fd5b62000196600160a060020a0360043516620007d9565b34156200026f57600080fd5b62000196600160a060020a036004351662000865565b34156200029157600080fd5b62000158620008e4565b3415620002a757600080fd5b62000196620008f3565b3415620002bd57600080fd5b6200019660048035600160a060020a0316906024803580820192908101359160443560ff169160643591820191013562000981565b3415620002fe57600080fd5b6200019662000b8f565b34156200031457600080fd5b62000217600160a060020a036004351662000bf7565b34156200033657600080fd5b6200015862000c16565b34156200034c57600080fd5b62000196600160a060020a036004351662000c25565b34156200036e57600080fd5b62000158600160a060020a036004351662000e52565b34156200039057600080fd5b62000158600160a060020a036004351662000e6d565b3415620003b257600080fd5b6200015862000e88565b3415620003c857600080fd5b62000196600160a060020a036004351662000e97565b3415620003ea57600080fd5b6200015862000efe565b34156200040057600080fd5b62000196600160a060020a036004351660243562000f12565b62000217600160a060020a036004351662001055565b34156200043b57600080fd5b620001586200105b565b600254600160a060020a031681565b6000805433600160a060020a039081169116146200047157600080fd5b600160a060020a03821615156200048757600080fd5b5060008054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff1980841691909117938490556001805490911690559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000805433600160a060020a039081169116146200051457600080fd5b50600160a060020a03808616600090815260076020526040902054168015156200053d57600080fd5b80600160a060020a031663827f32c0308760405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b15156200059257600080fd5b5af11515620005a057600080fd5b505050604051805150506006548590600160a060020a038084169163dd62ed3e9130911660405160e060020a63ffffffff8516028152600160a060020a03928316600482015291166024820152604401602060405180830381600087803b15156200060a57600080fd5b5af115156200061857600080fd5b5050506040518051905010156200069f57600654600160a060020a038083169163095ea7b3911660001960405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b15156200068657600080fd5b5af115156200069457600080fd5b505050604051805150505b600654600160a060020a03168383604051808383808284378201915050925050506000604051808303816000865af19150501515620006dd57600080fd5b86600160a060020a03167fff628606f5860a17beddc73a7046379d2539e0f878cb934e43ce2c5150bc91a58787878787604051600160a060020a0386168152602081018590526040810184905260806060820181815290820183905260a082018484808284378201915050965050505050505060405180910390a250505050505050565b60005433600160a060020a039081169116146200077d57600080fd5b60055460ff1615156200078f57600080fd5b6005805460ff191690557f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b60019392505050565b60055460ff1681565b60005433600160a060020a03908116911614620007f557600080fd5b610dac600160a060020a038216146200080d57600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff199081169091556001805490911690557f94e8b32e01b9eedfddd778ffbd051a7718cdc14781702884561162dca6f74dbb60405160405180910390a150565b60005433600160a060020a039081169116146200088157600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383811691909117918290559081169033167f13a4b3bc0d5234dd3d87c9f1557d8faefa37986da62c36ba49309e2fb2c9aec460405160405180910390a350565b600654600160a060020a031681565b60015460009033600160a060020a039081169116146200091257600080fd5b50600080546001805473ffffffffffffffffffffffffffffffffffffffff19808416600160a060020a03838116919091179586905591169091559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b6000805433600160a060020a039081169116146200099e57600080fd5b600160a060020a038088166000908152600760205260409020541615620009c457600080fd5b6005546101009004600160a060020a031660008088888888886001620009e96200106a565b600160a060020a03808b168252891660208201526040810188905260ff8516608082015281151560c082015260e06060820181815290820187905260a0820161010083018989808284379091018481038352868152602001905086868082843782019150509b505050505050505050505050604051809103906000f080151562000a7257600080fd5b600654909150600160a060020a038083169163095ea7b3911660001960405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151562000ad257600080fd5b5af1151562000ae057600080fd5b50505060405180515050600160a060020a038088166000818152600760209081526040808320805495871673ffffffffffffffffffffffffffffffffffffffff199687168117909155835260089091529081902080549093169091179091557fdffbd9ded1c09446f09377de547142dcce7dc541c8b0b028142b1eba7026b9e7908890839051600160a060020a039283168152911660208201526040908101905180910390a150505050505050565b60005433600160a060020a0390811691161462000bab57600080fd5b60055460ff161562000bbc57600080fd5b6005805460ff191660011790557f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b600160a060020a031660009081526004602052604090205460ff161590565b600054600160a060020a031681565b600254600090819033600160a060020a039081169116148062000c56575060005433600160a060020a039081169116145b151562000c6257600080fd5b600160a060020a03831660009081526004602052604090205460ff161562000c8957600080fd5b600160a060020a038316151562000d1e57600354600160a060020a033081163193501682156108fc0283604051600060405180830381858888f19350505050151562000cd457600080fd5b7fa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f28383604051600160a060020a03909216825260208201526040908101905180910390a162000e4d565b5081600160a060020a0381166370a082313060405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b151562000d6f57600080fd5b5af1151562000d7d57600080fd5b5050506040518051600354909350600160a060020a03808416925063a9059cbb91168460405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151562000de457600080fd5b5af1151562000df257600080fd5b50505060405180519050151562000e0857600080fd5b7fa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f28383604051600160a060020a03909216825260208201526040908101905180910390a15b505050565b600860205260009081526040902054600160a060020a031681565b600760205260009081526040902054600160a060020a031681565b600154600160a060020a031681565b60025433600160a060020a039081169116148062000ec3575060005433600160a060020a039081169116145b151562000ecf57600080fd5b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6005546101009004600160a060020a031681565b60055460009060ff161562000f2657600080fd5b50600160a060020a03808316600090815260086020526040902054168015158062000f8657506000805260076020527f6d5257204ebe7d88fd91ae87941cb2dd9d8062b64ae5a2bd2d28ec40b9fbf6df54600160a060020a038481169116145b151562000f9257600080fd5b82600160a060020a031663d3ce77fe338460405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151562000fe757600080fd5b5af1151562000ff557600080fd5b50505060405180519050507f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb338284604051600160a060020a039384168152919092166020820152604080820192909252606001905180910390a1505050565b50600090565b600354600160a060020a031681565b6040516119dd806200107c833901905600606060405260408051908101604052600781527f4d4d545f302e3200000000000000000000000000000000000000000000000000602082015260049080516200004d92916020019062000162565b5034156200005a57600080fd5b604051620019dd380380620019dd833981016040528080519190602001805191906020018051919060200180518201919060200180519190602001805182019190602001805160008054600160a060020a03338116600160a060020a031990921691909117909155600b8054918b166101000261010060a860020a0319909216919091179055915060019050848051620000f992916020019062000162565b506002805460ff191660ff851617905560038280516200011e92916020019062000162565b5060058054600160a060020a031916600160a060020a039790971696909617909555505050600655600b805460ff1916911515919091179055504360075562000207565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001a557805160ff1916838001178555620001d5565b82800160010185558215620001d5579182015b82811115620001d5578251825591602001919060010190620001b8565b50620001e3929150620001e7565b5090565b6200020491905b80821115620001e35760008155600101620001ee565b90565b6117c680620002176000396000f30060606040526004361061012f5763ffffffff60e060020a60003504166306fdde0381146101c4578063095ea7b31461024e578063176345141461028457806318160ddd146102a957806323b872dd146102bc578063313ce567146102e45780633cebb8231461030d5780634ee2cd7e1461032c57806354fd4d501461034e5780636638c0871461036157806370a082311461042557806380a5400114610444578063827f32c01461045757806395d89b4114610479578063981b24d01461048c578063a9059cbb146104a2578063bef97c87146104c4578063c5bcc4f1146104d7578063cae9ca51146104ea578063d3ce77fe1461054f578063dd62ed3e14610571578063df8de3e714610596578063e77772fe146105b5578063f41e60c5146105c8578063f77c4791146105e0575b60005461014490600160a060020a03166105f3565b151561014f57600080fd5b600054600160a060020a031663f48c3054343360405160e060020a63ffffffff8516028152600160a060020a0390911660048201526024016020604051808303818588803b151561019f57600080fd5b5af115156101ac57600080fd5b505050506040518051905015156101c257600080fd5b005b34156101cf57600080fd5b6101d7610620565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156102135780820151838201526020016101fb565b50505050905090810190601f1680156102405780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561025957600080fd5b610270600160a060020a03600435166024356106be565b604051901515815260200160405180910390f35b341561028f57600080fd5b610297610816565b60405190815260200160405180910390f35b34156102b457600080fd5b61029761081c565b34156102c757600080fd5b610270600160a060020a036004358116906024351660443561082d565b34156102ef57600080fd5b6102f76108cf565b60405160ff909116815260200160405180910390f35b341561031857600080fd5b6101c2600160a060020a03600435166108d8565b341561033757600080fd5b610297600160a060020a0360043516602435610922565b341561035957600080fd5b6101d7610a4b565b341561036c57600080fd5b61040960046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803560ff1690602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650508435946020013515159350610ab692505050565b604051600160a060020a03909116815260200160405180910390f35b341561043057600080fd5b610297600160a060020a0360043516610ccf565b341561044f57600080fd5b610409610ce3565b341561046257600080fd5b610270600160a060020a0360043516602435610cf2565b341561048457600080fd5b6101d7610dc2565b341561049757600080fd5b610297600435610e2d565b34156104ad57600080fd5b610270600160a060020a0360043516602435610f09565b34156104cf57600080fd5b610270610f28565b34156104e257600080fd5b610297610f31565b34156104f557600080fd5b61027060048035600160a060020a03169060248035919060649060443590810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650610f3795505050505050565b341561055a57600080fd5b610270600160a060020a036004351660243561104e565b341561057c57600080fd5b610297600160a060020a0360043581169060243516611118565b34156105a157600080fd5b6101c2600160a060020a0360043516611143565b34156105c057600080fd5b6104096112d4565b34156105d357600080fd5b6101c260043515156112e8565b34156105eb57600080fd5b610409611316565b600080600160a060020a038316151561060f576000915061061a565b823b90506000811191505b50919050565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106b65780601f1061068b576101008083540402835291602001916106b6565b820191906000526020600020905b81548152906001019060200180831161069957829003601f168201915b505050505081565b600b5460009060ff1615156106d257600080fd5b8115806107025750600160a060020a03338116600090815260096020908152604080832093871683529290522054155b151561070d57600080fd5b60005461072290600160a060020a03166105f3565b156107ac57600054600160a060020a031663da682aeb33858560405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401602060405180830381600087803b151561078a57600080fd5b5af1151561079757600080fd5b5050506040518051905015156107ac57600080fd5b600160a060020a03338116600081815260096020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b60075481565b600061082743610e2d565b90505b90565b6000805433600160a060020a039081169116146108ba57600b5460ff16151561085557600080fd5b600160a060020a03808516600090815260096020908152604080832033909416835292905220548290101561088c575060006108c8565b600160a060020a03808516600090815260096020908152604080832033909416835292905220805483900390555b6108c5848484611325565b90505b9392505050565b60025460ff1681565b60005433600160a060020a039081169116146108f357600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a038216600090815260086020526040812054158061097e5750600160a060020a03831660009081526008602052604081208054849290811061096757fe5b6000918252602090912001546001608060020a0316115b15610a2257600554600160a060020a031615610a1a57600554600654600160a060020a0390911690634ee2cd7e9085906109b99086906114f2565b60405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b15156109fc57600080fd5b5af11515610a0957600080fd5b505050604051805190509050610810565b506000610810565b600160a060020a0383166000908152600860205260409020610a449083611508565b9050610810565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106b65780601f1061068b576101008083540402835291602001916106b6565b600080831515610ac4574393505b600b546101009004600160a060020a0316635b7b72c130868a8a8a8960405160e060020a63ffffffff8916028152600160a060020a038716600482019081526024820187905260ff8516606483015282151560a483015260c0604483019081529091608481019060c40187818151815260200191508051906020019080838360005b83811015610b5e578082015183820152602001610b46565b50505050905090810190601f168015610b8b5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015610bc1578082015183820152602001610ba9565b50505050905090810190601f168015610bee5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b1515610c1257600080fd5b5af11515610c1f57600080fd5b5050506040518051915050600160a060020a038116633cebb8233360405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401600060405180830381600087803b1515610c7857600080fd5b5af11515610c8557600080fd5b50505080600160a060020a03167f086c875b377f900b07ce03575813022f05dd10ed7640b5282cf6d3c3fc352ade8560405190815260200160405180910390a29695505050505050565b6000610cdb8243610922565b90505b919050565b600554600160a060020a031681565b600080548190819033600160a060020a03908116911614610d1257600080fd5b610d1a61081c565b915083820182901015610d2c57600080fd5b610d3585610ccf565b905083810181901015610d4757600080fd5b610d54600a858401611667565b600160a060020a0385166000908152600860205260409020610d7890828601611667565b84600160a060020a031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8660405190815260200160405180910390a3506001949350505050565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106b65780601f1061068b576101008083540402835291602001916106b6565b600a546000901580610e62575081600a6000815481101515610e4b57fe5b6000918252602090912001546001608060020a0316115b15610ef757600554600160a060020a031615610eef57600554600654600160a060020a039091169063981b24d090610e9b9085906114f2565b60405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b1515610ed157600080fd5b5af11515610ede57600080fd5b505050604051805190509050610cde565b506000610cde565b610f02600a83611508565b9050610cde565b600b5460009060ff161515610f1d57600080fd5b6108c8338484611325565b600b5460ff1681565b60065481565b6000610f4384846106be565b1515610f4e57600080fd5b83600160a060020a0316638f4ffcb1338530866040518563ffffffff1660e060020a0281526004018085600160a060020a0316600160a060020a0316815260200184815260200183600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610fe6578082015183820152602001610fce565b50505050905090810190601f1680156110135780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b151561103457600080fd5b5af1151561104157600080fd5b5060019695505050505050565b600080548190819033600160a060020a0390811691161461106e57600080fd5b61107661081c565b91508382101561108557600080fd5b61108e85610ccf565b90508381101561109d57600080fd5b6110aa600a858403611667565b600160a060020a03851660009081526008602052604090206110ce90858303611667565b600085600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8660405190815260200160405180910390a3506001949350505050565b600160a060020a03918216600090815260096020908152604080832093909416825291909152205490565b60008054819033600160a060020a0390811691161461116157600080fd5b600160a060020a03831615156111af57600054600160a060020a039081169030163180156108fc0290604051600060405180830381858888f1935050505015156111aa57600080fd5b6112cf565b82915081600160a060020a03166370a082313060405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b151561120057600080fd5b5af1151561120d57600080fd5b5050506040518051600054909250600160a060020a03808516925063a9059cbb91168360405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561127357600080fd5b5af1151561128057600080fd5b50505060405180515050600054600160a060020a039081169084167ff931edb47c50b4b4104c187b5814a9aef5f709e17e2ecf9617e860cacade929c8360405190815260200160405180910390a35b505050565b600b546101009004600160a060020a031681565b60005433600160a060020a0390811691161461130357600080fd5b600b805460ff1916911515919091179055565b600054600160a060020a031681565b6000808083151561133957600192506114e9565b60065443901061134857600080fd5b600160a060020a03851615801590611372575030600160a060020a031685600160a060020a031614155b151561137d57600080fd5b6113878643610922565b91508382101561139a57600092506114e9565b6000546113af90600160a060020a03166105f3565b1561143957600054600160a060020a0316634a39314987878760405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401602060405180830381600087803b151561141757600080fd5b5af1151561142457600080fd5b50505060405180519050151561143957600080fd5b600160a060020a038616600090815260086020526040902061145d90858403611667565b6114678543610922565b90508381018190101561147957600080fd5b600160a060020a038516600090815260086020526040902061149d90828601611667565b84600160a060020a031686600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8660405190815260200160405180910390a3600192505b50509392505050565b600081831061150157816108c8565b5090919050565b600080600080858054905060001415611524576000935061165e565b85548690600019810190811061153657fe5b6000918252602090912001546001608060020a031685106115935785548690600019810190811061156357fe5b60009182526020909120015470010000000000000000000000000000000090046001608060020a0316935061165e565b8560008154811015156115a257fe5b6000918252602090912001546001608060020a03168510156115c7576000935061165e565b8554600093506000190191505b828211156116245760026001838501010490508486828154811015156115f657fe5b6000918252602090912001546001608060020a0316116116185780925061161f565b6001810391505b6115d4565b858381548110151561163257fe5b60009182526020909120015470010000000000000000000000000000000090046001608060020a031693505b50505092915050565b8154600090819015806116a05750835443908590600019810190811061168957fe5b6000918252602090912001546001608060020a0316105b1561171257835484906116b6826001830161175d565b815481106116c057fe5b600091825260209091200180546001608060020a03858116700100000000000000000000000000000000024382166fffffffffffffffffffffffffffffffff1990931692909217161781559150611757565b83548490600019810190811061172457fe5b600091825260209091200180546001608060020a0380861670010000000000000000000000000000000002911617815590505b50505050565b8154818355818115116112cf576000838152602090206112cf91810190830161082a91905b808211156117965760008155600101611782565b50905600a165627a7a7230582005c9c98a3395f1477580383a230dcb712727fb2333a7981f32c68597082d28050029a165627a7a723058208b7fea5ac7bc319aa7a9568643449e6a5a02ff786ee38b586f599a58c30e5b830029",
            "sourceMap": "878:3806:0:-;;;;;;;;;-1:-1:-1;;;878:3806:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1181:32:6;;;;;;;;;;;;;;;-1:-1:-1;;;;;1181:32:6;;;;;;;;;;;;;;2422:246:7;;;;;;;;;;-1:-1:-1;;;;;2422:246:7;;;;;;;2313:556:0;;;;;;;;;;-1:-1:-1;;;;;2313:556:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;912:102:8;;;;;;;;;;;;4091:111:0;;;;;;;;;;-1:-1:-1;;;;;4091:111:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;268:26:8;;;;;;;;;;;;3062:182:7;;;;;;;;;;-1:-1:-1;;;;;3062:182:7;;;;;1585:185;;;;;;;;;;-1:-1:-1;;;;;1585:185:7;;;;;1083:29:0;;;;;;;;;;;;1882:242:7;;;;;;;;;;;;2875:502:0;;;;;;;;;;;;;-1:-1:-1;;;;;2875:502:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;724:100:8;;;;;;;;;;;;3215:117:6;;;;;;;;;;-1:-1:-1;;;;;3215:117:6;;;;;638:20:7;;;;;;;;;;;;3540:611:6;;;;;;;;;;-1:-1:-1;;;;;3540:611:6;;;;;1172:54:0;;;;;;;;;;-1:-1:-1;;;;;1172:54:0;;;;;1119:47;;;;;;;;;;-1:-1:-1;;;;;1119:47:0;;;;;664:32:7;;;;;;;;;;;;4520:158:6;;;;;;;;;;-1:-1:-1;;;;;4520:158:6;;;;;1039:38:0;;;;;;;;;;;;1980:327;;;;;;;;;;-1:-1:-1;;;;;1980:327:0;;;;;;;3652:96;;-1:-1:-1;;;;;3652:96:0;;;;;1219:37:6;;;;;;;;;;;;1181:32;;;-1:-1:-1;;;;;1181:32:6;;:::o;2422:246:7:-;2529:16;1171:5;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;-1:-1:-1;;;;;2501:16:7;;;;2493:25;;;;;;-1:-1:-1;2548:5:7;;;-1:-1:-1;;;;;2563:17:7;;;-1:-1:-1;;2563:17:7;;;;;;;;;;;2548:5;2590:23;;;;;;;2548:5;;;;2655;2548;2624:37;;;;;;;;;;2422:246;;:::o;2313:556:0:-;2435:17;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;-1:-1:-1;;;;;;2455:23:0;;;;;;;:12;:23;;;;;;;2496:14;;;2488:23;;;;;;2534:9;-1:-1:-1;;;;;2522:37:0;;2568:4;2575:6;2522:60;;-1:-1:-1;;;2522:60:0;;;;;;-1:-1:-1;;;;;2522:60:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2645:14:0;;2663:6;;-1:-1:-1;;;;;2597:32:0;;;;;;2638:4;;2645:14;2597:63;;-1:-1:-1;;;2597:63:0;;;;;;-1:-1:-1;;;;;2597:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:72;2593:162;;;2716:14;;-1:-1:-1;;;;;2685:30:0;;;;;;2716:14;-1:-1:-1;;2685:59:0;;-1:-1:-1;;;2685:59:0;;;;;;-1:-1:-1;;;;;2685:59:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2593:162:0;2773:14;;-1:-1:-1;;;;;2773:14:0;2793:4;;2773:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2765:34;;;;;;;;2822:6;-1:-1:-1;;;;;2814:48:0;;2830:9;2841:6;2849;2857:4;;2814:48;;-1:-1:-1;;;;;2814:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2313:556;;;;;;;:::o;912:102:8:-;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;614:6:8;;;;606:15;;;;;;;;969:6;:14;;-1:-1:-1;;969:14:8;;;998:9;;;;;;;;;;912:102::o;4091:111:0:-;4191:4;4091:111;;;;;:::o;268:26:8:-;;;;;;:::o;3062:182:7:-;1171:5;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;3144:5;-1:-1:-1;;;;;3136:13:7;;;3128:22;;;;;;3168:3;3160:11;;-1:-1:-1;;3160:11:7;;;;;;;3181:23;;;;;;;3214:18;;;;;;;;;;3062:182;:::o;1585:185::-;1171:5;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;1666:17;:38;;-1:-1:-1;;1666:38:7;-1:-1:-1;;;;;1666:38:7;;;;;;;;;;;1745:17;;;;1733:10;1714:49;;;;;;;;;;;1585:185;:::o;1083:29:0:-;;;-1:-1:-1;;;;;1083:29:0;;:::o;1882:242:7:-;1948:17;;1977:16;;1934:10;-1:-1:-1;;;;;1934:31:7;;;1948:17;;1934:31;1926:40;;;;;;-1:-1:-1;1996:5:7;;;;2019:17;;-1:-1:-1;;2011:25:7;;;-1:-1:-1;;;;;2019:17:7;;;2011:25;;;;;;;;2046:23;;;;;1996:5;;;;2111;1996;2080:37;;;;;;;;;;1882:242;:::o;2875:502:0:-;3042:21;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;-1:-1:-1;;;;;3003:23:0;;;;;;;:12;:23;;;;;;;:28;2995:37;;;;;;3082:12;;;;;-1:-1:-1;;;;;3082:12:0;3096:3;;3104:9;;3115:8;3125:11;;3082:12;3066:77;;:::i;:::-;-1:-1:-1;;;;;3066:77:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3066:77:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3171:14;;3042:101;;-1:-1:-1;;;;;;3153:17:0;;;;;;3171:14;-1:-1:-1;;3153:46:0;;-1:-1:-1;;;3153:46:0;;;;;;-1:-1:-1;;;;;3153:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;3209:23:0;;;;;;;:12;:23;;;;;;;;:44;;;;;-1:-1:-1;;3209:44:0;;;;;;;;3263:39;;:19;:39;;;;;;;:51;;;;;;;;;;;3329:41;;3222:9;;3243;;3329:41;-1:-1:-1;;;;;3329:41:0;;;;;;;;;;;;;;;;;;;;;;2875:502;;;;;;;:::o;724:100:8:-;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;446:6:8;;;;445:7;437:16;;;;;;782:6;:13;;-1:-1:-1;;782:13:8;791:4;782:13;;;810:7;;;;;;;;;;724:100::o;3215:117:6:-;-1:-1:-1;;;;;3302:23:6;3278:4;3302:23;;;:15;:23;;;;;;;;3301:24;;3215:117::o;638:20:7:-;;;-1:-1:-1;;;;;638:20:7;;:::o;3540:611:6:-;2431:17;;3676:15;;;;2417:10;-1:-1:-1;;;;;2417:31:6;;;2431:17;;2417:31;;2416:56;;-1:-1:-1;2466:5:6;;2452:10;-1:-1:-1;;;;;2452:19:6;;;2466:5;;2452:19;2416:56;2407:66;;;;;;;;-1:-1:-1;;;;;3634:23:6;;;;;;:15;:23;;;;;;;;:30;3626:39;;;;;;-1:-1:-1;;;;;3739:13:6;;;3735:188;;;3804:22;;-1:-1:-1;;;;;3778:4:6;:12;;;;-1:-1:-1;3804:22:6;:40;;;;3778:12;3804:40;;;;;;;;;;;;;;;;;;;;;;;;;;3858:34;3876:6;3884:7;3858:34;;-1:-1:-1;;;;;3858:34:6;;;;;;;;;;;;;;;;;;;;3906:7;;3735:188;-1:-1:-1;3986:6:6;-1:-1:-1;;;;;4013:15:6;;;4029:4;4013:21;;-1:-1:-1;;;4013:21:6;;;;;;-1:-1:-1;;;;;4013:21:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4067:22;;4013:21;;-1:-1:-1;;;;;;4052:14:6;;;;-1:-1:-1;4052:14:6;;4067:22;4013:21;4052:47;;-1:-1:-1;;;4052:47:6;;;;;;-1:-1:-1;;;;;4052:47:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4044:56;;;;;;;;4110:34;4128:6;4136:7;4110:34;;-1:-1:-1;;;;;4110:34:6;;;;;;;;;;;;;;;;;;;;2483:1;3540:611;;;:::o;1172:54:0:-;;;;;;;;;;;;-1:-1:-1;;;;;1172:54:0;;:::o;1119:47::-;;;;;;;;;;;;-1:-1:-1;;;;;1119:47:0;;:::o;664:32:7:-;;;-1:-1:-1;;;;;664:32:7;;:::o;4520:158:6:-;2431:17;;2417:10;-1:-1:-1;;;;;2417:31:6;;;2431:17;;2417:31;;2416:56;;-1:-1:-1;2466:5:6;;2452:10;-1:-1:-1;;;;;2452:19:6;;;2466:5;;2452:19;2416:56;2407:66;;;;;;;;4630:17;:41;;-1:-1:-1;;4630:41:6;-1:-1:-1;;;;;4630:41:6;;;;;;;;;;4520:158::o;1039:38:0:-;;;;;;-1:-1:-1;;;;;1039:38:0;;:::o;1980:327::-;446:6:8;;2063:17:0;;446:6:8;;445:7;437:16;;;;;;-1:-1:-1;;;;;;2083:30:0;;;;;;;:19;:30;;;;;;;2131:14;;;;:46;;-1:-1:-1;2149:15:0;;;:12;:15;;;;-1:-1:-1;;;;;2149:28:0;;;:15;;:28;2131:46;2123:55;;;;;;;;2201:9;-1:-1:-1;;;;;2189:36:0;;2226:10;2238:6;2189:56;;-1:-1:-1;;;2189:56:0;;;;;;-1:-1:-1;;;;;2189:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2261:39;2270:10;2282:9;2293:6;2261:39;;-1:-1:-1;;;;;2261:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1980:327;;;:::o;3652:96::-;-1:-1:-1;3713:4:0;;3652:96::o;1219:37:6:-;;;-1:-1:-1;;;;;1219:37:6;;:::o;878:3806:0:-;;;;;;;;;;:::o"
          },
          "methodIdentifiers": {
            "acceptOwnership()": "79ba5097",
            "addToken(address,string,uint8,string)": "824f36f3",
            "changeHatchEscapeCaller(address)": "d836fbe8",
            "changeOwnership(address)": "2af4c31e",
            "deposit(address,address,uint256,bytes32,bytes)": "2b7c5dde",
            "escapeHatch(address)": "a142d608",
            "escapeHatchCaller()": "1f6eb6e7",
            "escapeHatchDestination()": "f5b61230",
            "inverseTokenMapping(address)": "af95e2d5",
            "isTokenEscapable(address)": "892db057",
            "liquidPledging()": "74041d1f",
            "newOwnerCandidate()": "d091b550",
            "onApprove(address,address,uint256)": "da682aeb",
            "onTransfer(address,address,uint256)": "4a393149",
            "owner()": "8da5cb5b",
            "pause()": "8456cb59",
            "paused()": "5c975abb",
            "proposeOwnership(address)": "710bf322",
            "proxyPayment(address)": "f48c3054",
            "removeOwnership(address)": "666a3427",
            "tokenFactory()": "e77772fe",
            "tokenMapping(address)": "ba27f50b",
            "unpause()": "3f4ba83a",
            "withdraw(address,uint256)": "f3fef3a3"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.21+commit.dfe3193c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"escapeHatchCaller\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"mainToken\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"homeTx\",\"type\":\"bytes32\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"onTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dac\",\"type\":\"address\"}],\"name\":\"removeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwnerCandidate\",\"type\":\"address\"}],\"name\":\"proposeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"liquidPledging\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"mainToken\",\"type\":\"address\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"decimals\",\"type\":\"uint8\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"name\":\"addToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isTokenEscapable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"escapeHatch\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"inverseTokenMapping\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenMapping\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwnerCandidate\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newEscapeHatchCaller\",\"type\":\"address\"}],\"name\":\"changeHatchEscapeCaller\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"onApprove\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenFactory\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sideToken\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"proxyPayment\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"escapeHatchDestination\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_escapeHatchCaller\",\"type\":\"address\"},{\"name\":\"_escapeHatchDestination\",\"type\":\"address\"},{\"name\":\"_tokenFactory\",\"type\":\"address\"},{\"name\":\"_liquidPledging\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"homeTx\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"mainToken\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"sideToken\",\"type\":\"address\"}],\"name\":\"TokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"}],\"name\":\"EscapeHatchBlackistedToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EscapeHatchCalled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"by\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"OwnershipRemoved\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"changeHatchEscapeCaller(address)\":{\"params\":{\"_newEscapeHatchCaller\":\"The address of a trusted account or  contract to call `escapeHatch()` to send the value in this contract to  the `escapeHatchDestination`; it would be ideal that `escapeHatchCaller`  cannot move funds out of `escapeHatchDestination`\"}},\"changeOwnership(address)\":{\"details\":\"In this 2nd option for ownership transfer `changeOwnership()` can  be called and it will immediately assign ownership to the `newOwner`\",\"params\":{\"_newOwner\":\"The address of the new owner\"}},\"escapeHatch(address)\":{\"params\":{\"_token\":\"to transfer, use 0x0 for ether\"}},\"isTokenEscapable(address)\":{\"params\":{\"_token\":\"the token address being queried\"},\"return\":\"False if `_token` is in the blacklist and can't be taken out of  the contract via the `escapeHatch()`\"},\"onApprove(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount in the `approve()` call\",\"_owner\":\"The address that calls `approve()`\",\"_spender\":\"The spender in the `approve()` call\"},\"return\":\"False if the controller does not authorize the approval\"},\"onTransfer(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount of the transfer\",\"_from\":\"The origin of the transfer\",\"_to\":\"The destination of the transfer\"},\"return\":\"False if the controller does not authorize the transfer\"},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"proposeOwnership(address)\":{\"details\":\"In this 1st option for ownership transfer `proposeOwnership()` must  be called first by the current `owner` then `acceptOwnership()` must be  called by the `newOwnerCandidate`\",\"params\":{\"_newOwnerCandidate\":\"The address being proposed as the new owner\"}},\"proxyPayment(address)\":{\"params\":{\"_owner\":\"The address that sent the ether to create tokens\"},\"return\":\"True if the ether is accepted, false if it throws\"},\"removeOwnership(address)\":{\"details\":\"In this 3rd option for ownership transfer `removeOwnership()` can  be called and it will immediately assign ownership to the 0x0 address;  it requires a 0xdece be input as a parameter to prevent accidental use\",\"params\":{\"_dac\":\"`0xdac` has to be entered for this function to work\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}}},\"userdoc\":{\"methods\":{\"acceptOwnership()\":{\"notice\":\"Can only be called by the `newOwnerCandidate`, accepts the  transfer of ownership\"},\"changeHatchEscapeCaller(address)\":{\"notice\":\"Changes the address assigned to call `escapeHatch()`\"},\"changeOwnership(address)\":{\"notice\":\"`owner` can step down and assign some other address to this role\"},\"escapeHatch(address)\":{\"notice\":\"The `escapeHatch()` should only be called as a last resort if a security issue is uncovered or something unexpected happened\"},\"isTokenEscapable(address)\":{\"notice\":\"Checks to see if `_token` is in the blacklist of tokens\"},\"onApprove(address,address,uint256)\":{\"notice\":\"Notifies the controller about an approval allowing the  controller to react if desired\"},\"onTransfer(address,address,uint256)\":{\"notice\":\"Notifies the controller about a token transfer allowing the  controller to react if desired\"},\"proposeOwnership(address)\":{\"notice\":\"`onlyOwner` Proposes to transfer control of the contract to a  new owner\"},\"proxyPayment(address)\":{\"notice\":\"/////////////Called when `_owner` sends ether to the MiniMe Token contract\"},\"removeOwnership(address)\":{\"notice\":\"Decentralizes the contract, this operation cannot be undone \"}}}},\"settings\":{\"compilationTarget\":{\"./contracts/ForeignGivethBridge.sol\":\"ForeignGivethBridge\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"./contracts/ForeignGivethBridge.sol\":{\"content\":\"pragma solidity ^0.4.21;\\n\\n/*\\n    Copyright 2017, RJ Ewing <perissology@protonmail.com>\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n*/\\n\\nimport \\\"giveth-common-contracts/contracts/Escapable.sol\\\";\\nimport \\\"minimetoken/contracts/MiniMeToken.sol\\\";\\nimport \\\"lib/Pausable.sol\\\";\\n\\ncontract ForeignGivethBridge is Escapable, Pausable, TokenController {\\n    // TODO: what happens when bridge shuts down? how do we transfer token mappings?\\n\\n    MiniMeTokenFactory public tokenFactory;\\n    address public liquidPledging;\\n\\n    mapping(address => address) public tokenMapping;\\n    mapping(address => address) public inverseTokenMapping;\\n\\n    event Deposit(address indexed sender, address token, uint amount, bytes32 homeTx, bytes data);\\n    event Withdraw(address recipient, address token, uint amount);\\n    event TokenAdded(address mainToken, address sideToken);\\n\\n    //== constructor\\n\\n    function ForeignGivethBridge(\\n        address _escapeHatchCaller,\\n        address _escapeHatchDestination, \\n        address _tokenFactory,\\n        address _liquidPledging\\n    ) Escapable(_escapeHatchCaller, _escapeHatchDestination) public \\n    {\\n        require(_tokenFactory != 0);\\n        require(_liquidPledging != 0);\\n\\n        tokenFactory = MiniMeTokenFactory(_tokenFactory);\\n        liquidPledging = _liquidPledging;\\n    }\\n\\n    //== public methods\\n\\n    // TODO: specify withdraw address?\\n    function withdraw(address sideToken, uint amount) whenNotPaused external {\\n        address mainToken = inverseTokenMapping[sideToken];\\n        require(mainToken != 0 || tokenMapping[0] == sideToken);\\n\\n        MiniMeToken(sideToken).destroyTokens(msg.sender, amount);\\n\\n        emit Withdraw(msg.sender, mainToken, amount);\\n    }\\n\\n    function deposit(address sender, address mainToken, uint amount, bytes32 homeTx, bytes data) onlyOwner external {\\n        address sideToken = tokenMapping[mainToken];\\n        require(sideToken != 0);\\n\\n        MiniMeToken(sideToken).generateTokens(address(this), amount);\\n\\n        if (MiniMeToken(sideToken).allowance(address(this), liquidPledging) < amount) {\\n            MiniMeToken(sideToken).approve(liquidPledging, uint(0 - 1));\\n        }\\n\\n        require(liquidPledging.call(data));\\n        emit Deposit(sender, mainToken, amount, homeTx, data);\\n    }\\n\\n    function addToken(address mainToken, string tokenName, uint8 decimals, string tokenSymbol) onlyOwner external {\\n        require(tokenMapping[mainToken] == 0);\\n        MiniMeToken sideToken = new MiniMeToken(tokenFactory, 0x0, 0, tokenName, decimals, tokenSymbol, true);\\n        sideToken.approve(liquidPledging, uint(0 - 1));\\n        tokenMapping[mainToken] = address(sideToken);\\n        inverseTokenMapping[address(sideToken)] = mainToken;\\n        emit TokenAdded(mainToken, address(sideToken));\\n    }\\n\\n////////////////\\n// TokenController\\n////////////////\\n\\n    /// @notice Called when `_owner` sends ether to the MiniMe Token contract\\n    /// @param _owner The address that sent the ether to create tokens\\n    /// @return True if the ether is accepted, false if it throws\\n    function proxyPayment(address _owner) public payable returns(bool) {\\n        return false;\\n    }\\n\\n    /// @notice Notifies the controller about a token transfer allowing the\\n    ///  controller to react if desired\\n    /// @param _from The origin of the transfer\\n    /// @param _to The destination of the transfer\\n    /// @param _amount The amount of the transfer\\n    /// @return False if the controller does not authorize the transfer\\n    function onTransfer(address _from, address _to, uint _amount) public returns(bool) {\\n        return true;\\n    }\\n\\n    /// @notice Notifies the controller about an approval allowing the\\n    ///  controller to react if desired\\n    /// @param _owner The address that calls `approve()`\\n    /// @param _spender The spender in the `approve()` call\\n    /// @param _amount The amount in the `approve()` call\\n    /// @return False if the controller does not authorize the approval\\n    function onApprove(address _owner, address _spender, uint _amount) public returns(bool) {\\n        return true;\\n    }\\n}\",\"keccak256\":\"0x5da8bb55fdfe738164b34ffbef0fcd6ce82655f0f0881eae5ffca4528f164d5c\"},\"giveth-common-contracts/contracts/ERC20.sol\":{\"content\":\"pragma solidity ^0.4.19;\\n\\n\\n/**\\n * @title ERC20\\n * @dev A standard interface for tokens.\\n * @dev https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\\n */\\ncontract ERC20 {\\n  \\n    /// @dev Returns the total token supply\\n    function totalSupply() public constant returns (uint256 supply);\\n\\n    /// @dev Returns the account balance of the account with address _owner\\n    function balanceOf(address _owner) public constant returns (uint256 balance);\\n\\n    /// @dev Transfers _value number of tokens to address _to\\n    function transfer(address _to, uint256 _value) public returns (bool success);\\n\\n    /// @dev Transfers _value number of tokens from address _from to address _to\\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\\n\\n    /// @dev Allows _spender to withdraw from the msg.sender's account up to the _value amount\\n    function approve(address _spender, uint256 _value) public returns (bool success);\\n\\n    /// @dev Returns the amount which _spender is still allowed to withdraw from _owner\\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining);\\n\\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\\n\\n}\\n\",\"keccak256\":\"0xe58902b5bdf9f918c6ec8ee4da44bf87faf225098fae84671ab07b46af427338\"},\"giveth-common-contracts/contracts/Escapable.sol\":{\"content\":\"pragma solidity ^0.4.19;\\n/*\\n    Copyright 2016, Jordi Baylina\\n    Contributor: Adrià Massanet <adria@codecontext.io>\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n*/\\n\\nimport \\\"./Owned.sol\\\";\\nimport \\\"./ERC20.sol\\\";\\n\\n\\n/// @dev `Escapable` is a base level contract built off of the `Owned`\\n///  contract; it creates an escape hatch function that can be called in an\\n///  emergency that will allow designated addresses to send any ether or tokens\\n///  held in the contract to an `escapeHatchDestination` as long as they were\\n///  not blacklisted\\ncontract Escapable is Owned {\\n    address public escapeHatchCaller;\\n    address public escapeHatchDestination;\\n    mapping (address=>bool) private escapeBlacklist; // Token contract addresses\\n\\n    /// @notice The Constructor assigns the `escapeHatchDestination` and the\\n    ///  `escapeHatchCaller`\\n    /// @param _escapeHatchCaller The address of a trusted account or contract\\n    ///  to call `escapeHatch()` to send the ether in this contract to the\\n    ///  `escapeHatchDestination` it would be ideal that `escapeHatchCaller`\\n    ///  cannot move funds out of `escapeHatchDestination`\\n    /// @param _escapeHatchDestination The address of a safe location (usu a\\n    ///  Multisig) to send the ether held in this contract; if a neutral address\\n    ///  is required, the WHG Multisig is an option:\\n    ///  0x8Ff920020c8AD673661c8117f2855C384758C572 \\n    function Escapable(address _escapeHatchCaller, address _escapeHatchDestination) public {\\n        escapeHatchCaller = _escapeHatchCaller;\\n        escapeHatchDestination = _escapeHatchDestination;\\n    }\\n\\n    /// @dev The addresses preassigned as `escapeHatchCaller` or `owner`\\n    ///  are the only addresses that can call a function with this modifier\\n    modifier onlyEscapeHatchCallerOrOwner {\\n        require ((msg.sender == escapeHatchCaller)||(msg.sender == owner));\\n        _;\\n    }\\n\\n    /// @notice Creates the blacklist of tokens that are not able to be taken\\n    ///  out of the contract; can only be done at the deployment, and the logic\\n    ///  to add to the blacklist will be in the constructor of a child contract\\n    /// @param _token the token contract address that is to be blacklisted \\n    function blacklistEscapeToken(address _token) internal {\\n        escapeBlacklist[_token] = true;\\n        EscapeHatchBlackistedToken(_token);\\n    }\\n\\n    /// @notice Checks to see if `_token` is in the blacklist of tokens\\n    /// @param _token the token address being queried\\n    /// @return False if `_token` is in the blacklist and can't be taken out of\\n    ///  the contract via the `escapeHatch()`\\n    function isTokenEscapable(address _token) view public returns (bool) {\\n        return !escapeBlacklist[_token];\\n    }\\n\\n    /// @notice The `escapeHatch()` should only be called as a last resort if a\\n    /// security issue is uncovered or something unexpected happened\\n    /// @param _token to transfer, use 0x0 for ether\\n    function escapeHatch(address _token) public onlyEscapeHatchCallerOrOwner {   \\n        require(escapeBlacklist[_token]==false);\\n\\n        uint256 balance;\\n\\n        /// @dev Logic for ether\\n        if (_token == 0x0) {\\n            balance = this.balance;\\n            escapeHatchDestination.transfer(balance);\\n            EscapeHatchCalled(_token, balance);\\n            return;\\n        }\\n        /// @dev Logic for tokens\\n        ERC20 token = ERC20(_token);\\n        balance = token.balanceOf(this);\\n        require(token.transfer(escapeHatchDestination, balance));\\n        EscapeHatchCalled(_token, balance);\\n    }\\n\\n    /// @notice Changes the address assigned to call `escapeHatch()`\\n    /// @param _newEscapeHatchCaller The address of a trusted account or\\n    ///  contract to call `escapeHatch()` to send the value in this contract to\\n    ///  the `escapeHatchDestination`; it would be ideal that `escapeHatchCaller`\\n    ///  cannot move funds out of `escapeHatchDestination`\\n    function changeHatchEscapeCaller(address _newEscapeHatchCaller) public onlyEscapeHatchCallerOrOwner {\\n        escapeHatchCaller = _newEscapeHatchCaller;\\n    }\\n\\n    event EscapeHatchBlackistedToken(address token);\\n    event EscapeHatchCalled(address token, uint amount);\\n}\\n\",\"keccak256\":\"0xd5d7b1a916841b21cfdee2bc9de4a178820421252b0c764070d78e846cd4511d\"},\"giveth-common-contracts/contracts/Owned.sol\":{\"content\":\"pragma solidity ^0.4.19;\\n\\n\\n/// @title Owned\\n/// @author Adrià Massanet <adria@codecontext.io>\\n/// @notice The Owned contract has an owner address, and provides basic \\n///  authorization control functions, this simplifies & the implementation of\\n///  user permissions; this contract has three work flows for a change in\\n///  ownership, the first requires the new owner to validate that they have the\\n///  ability to accept ownership, the second allows the ownership to be\\n///  directly transfered without requiring acceptance, and the third allows for\\n///  the ownership to be removed to allow for decentralization \\ncontract Owned {\\n\\n    address public owner;\\n    address public newOwnerCandidate;\\n\\n    event OwnershipRequested(address indexed by, address indexed to);\\n    event OwnershipTransferred(address indexed from, address indexed to);\\n    event OwnershipRemoved();\\n\\n    /// @dev The constructor sets the `msg.sender` as the`owner` of the contract\\n    function Owned() public {\\n        owner = msg.sender;\\n    }\\n\\n    /// @dev `owner` is the only address that can call a function with this\\n    /// modifier\\n    modifier onlyOwner() {\\n        require (msg.sender == owner);\\n        _;\\n    }\\n    \\n    /// @dev In this 1st option for ownership transfer `proposeOwnership()` must\\n    ///  be called first by the current `owner` then `acceptOwnership()` must be\\n    ///  called by the `newOwnerCandidate`\\n    /// @notice `onlyOwner` Proposes to transfer control of the contract to a\\n    ///  new owner\\n    /// @param _newOwnerCandidate The address being proposed as the new owner\\n    function proposeOwnership(address _newOwnerCandidate) public onlyOwner {\\n        newOwnerCandidate = _newOwnerCandidate;\\n        OwnershipRequested(msg.sender, newOwnerCandidate);\\n    }\\n\\n    /// @notice Can only be called by the `newOwnerCandidate`, accepts the\\n    ///  transfer of ownership\\n    function acceptOwnership() public {\\n        require(msg.sender == newOwnerCandidate);\\n\\n        address oldOwner = owner;\\n        owner = newOwnerCandidate;\\n        newOwnerCandidate = 0x0;\\n\\n        OwnershipTransferred(oldOwner, owner);\\n    }\\n\\n    /// @dev In this 2nd option for ownership transfer `changeOwnership()` can\\n    ///  be called and it will immediately assign ownership to the `newOwner`\\n    /// @notice `owner` can step down and assign some other address to this role\\n    /// @param _newOwner The address of the new owner\\n    function changeOwnership(address _newOwner) public onlyOwner {\\n        require(_newOwner != 0x0);\\n\\n        address oldOwner = owner;\\n        owner = _newOwner;\\n        newOwnerCandidate = 0x0;\\n\\n        OwnershipTransferred(oldOwner, owner);\\n    }\\n\\n    /// @dev In this 3rd option for ownership transfer `removeOwnership()` can\\n    ///  be called and it will immediately assign ownership to the 0x0 address;\\n    ///  it requires a 0xdece be input as a parameter to prevent accidental use\\n    /// @notice Decentralizes the contract, this operation cannot be undone \\n    /// @param _dac `0xdac` has to be entered for this function to work\\n    function removeOwnership(address _dac) public onlyOwner {\\n        require(_dac == 0xdac);\\n        owner = 0x0;\\n        newOwnerCandidate = 0x0;\\n        OwnershipRemoved();     \\n    }\\n} \\n\",\"keccak256\":\"0xc7d1401775fb1b41187de281757de68718fe27ba2660ba4bb194436aab7d0213\"},\"lib/Pausable.sol\":{\"content\":\"pragma solidity ^0.4.21;\\n\\nimport \\\"giveth-common-contracts/contracts/Owned.sol\\\";\\n\\n/**\\n * @title Pausable\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\n */\\ncontract Pausable is Owned {\\n    event Pause();\\n    event Unpause();\\n\\n    bool public paused = false;\\n\\n    /**\\n    * @dev Modifier to make a function callable only when the contract is not paused.\\n    */\\n    modifier whenNotPaused() {\\n        require(!paused);\\n        _;\\n    }\\n\\n    /**\\n    * @dev Modifier to make a function callable only when the contract is paused.\\n    */\\n    modifier whenPaused() {\\n        require(paused);\\n        _;\\n    }\\n\\n    /**\\n    * @dev called by the owner to pause, triggers stopped state\\n    */\\n    function pause() onlyOwner whenNotPaused public {\\n        paused = true;\\n        emit Pause();\\n    }\\n\\n    /**\\n    * @dev called by the owner to unpause, returns to normal state\\n    */\\n    function unpause() onlyOwner whenPaused public {\\n        paused = false;\\n        emit Unpause();\\n    }\\n}\",\"keccak256\":\"0xd134809350f024c16096d995915c6a348d770e1ec633723419f4f3acbd1e4b46\"},\"minimetoken/contracts/Controlled.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\ncontract Controlled {\\n    /// @notice The address of the controller is the only address that can call\\n    ///  a function with this modifier\\n    modifier onlyController { require(msg.sender == controller); _; }\\n\\n    address public controller;\\n\\n    function Controlled() public { controller = msg.sender;}\\n\\n    /// @notice Changes the controller of the contract\\n    /// @param _newController The new controller of the contract\\n    function changeController(address _newController) public onlyController {\\n        controller = _newController;\\n    }\\n}\\n\",\"keccak256\":\"0x770798704985a4588762ea932b913bc1df01b4625ab86c5a7278883bbde44b78\"},\"minimetoken/contracts/MiniMeToken.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/*\\n    Copyright 2016, Jordi Baylina\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n\\n/// @title MiniMeToken Contract\\n/// @author Jordi Baylina\\n/// @dev This token contract's goal is to make it easy for anyone to clone this\\n///  token using the token distribution at a given block, this will allow DAO's\\n///  and DApps to upgrade their features in a decentralized manner without\\n///  affecting the original token\\n/// @dev It is ERC20 compliant, but still needs to under go further testing.\\n\\nimport \\\"./Controlled.sol\\\";\\nimport \\\"./TokenController.sol\\\";\\n\\ncontract ApproveAndCallFallBack {\\n    function receiveApproval(address from, uint256 _amount, address _token, bytes _data) public;\\n}\\n\\n/// @dev The actual token contract, the default controller is the msg.sender\\n///  that deploys the contract, so usually this token will be deployed by a\\n///  token controller contract, which Giveth will call a \\\"Campaign\\\"\\ncontract MiniMeToken is Controlled {\\n\\n    string public name;                //The Token's name: e.g. DigixDAO Tokens\\n    uint8 public decimals;             //Number of decimals of the smallest unit\\n    string public symbol;              //An identifier: e.g. REP\\n    string public version = 'MMT_0.2'; //An arbitrary versioning scheme\\n\\n\\n    /// @dev `Checkpoint` is the structure that attaches a block number to a\\n    ///  given value, the block number attached is the one that last changed the\\n    ///  value\\n    struct  Checkpoint {\\n\\n        // `fromBlock` is the block number that the value was generated from\\n        uint128 fromBlock;\\n\\n        // `value` is the amount of tokens at a specific block number\\n        uint128 value;\\n    }\\n\\n    // `parentToken` is the Token address that was cloned to produce this token;\\n    //  it will be 0x0 for a token that was not cloned\\n    MiniMeToken public parentToken;\\n\\n    // `parentSnapShotBlock` is the block number from the Parent Token that was\\n    //  used to determine the initial distribution of the Clone Token\\n    uint public parentSnapShotBlock;\\n\\n    // `creationBlock` is the block number that the Clone Token was created\\n    uint public creationBlock;\\n\\n    // `balances` is the map that tracks the balance of each address, in this\\n    //  contract when the balance changes the block number that the change\\n    //  occurred is also included in the map\\n    mapping (address => Checkpoint[]) balances;\\n\\n    // `allowed` tracks any extra transfer rights as in all ERC20 tokens\\n    mapping (address => mapping (address => uint256)) allowed;\\n\\n    // Tracks the history of the `totalSupply` of the token\\n    Checkpoint[] totalSupplyHistory;\\n\\n    // Flag that determines if the token is transferable or not.\\n    bool public transfersEnabled;\\n\\n    // The factory used to create new clone tokens\\n    MiniMeTokenFactory public tokenFactory;\\n\\n////////////////\\n// Constructor\\n////////////////\\n\\n    /// @notice Constructor to create a MiniMeToken\\n    /// @param _tokenFactory The address of the MiniMeTokenFactory contract that\\n    ///  will create the Clone token contracts, the token factory needs to be\\n    ///  deployed first\\n    /// @param _parentToken Address of the parent token, set to 0x0 if it is a\\n    ///  new token\\n    /// @param _parentSnapShotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token, set to 0 if it\\n    ///  is a new token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    function MiniMeToken(\\n        address _tokenFactory,\\n        address _parentToken,\\n        uint _parentSnapShotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) public {\\n        tokenFactory = MiniMeTokenFactory(_tokenFactory);\\n        name = _tokenName;                                 // Set the name\\n        decimals = _decimalUnits;                          // Set the decimals\\n        symbol = _tokenSymbol;                             // Set the symbol\\n        parentToken = MiniMeToken(_parentToken);\\n        parentSnapShotBlock = _parentSnapShotBlock;\\n        transfersEnabled = _transfersEnabled;\\n        creationBlock = block.number;\\n    }\\n\\n\\n///////////////////\\n// ERC20 Methods\\n///////////////////\\n\\n    /// @notice Send `_amount` tokens to `_to` from `msg.sender`\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return Whether the transfer was successful or not\\n    function transfer(address _to, uint256 _amount) public returns (bool success) {\\n        require(transfersEnabled);\\n        return doTransfer(msg.sender, _to, _amount);\\n    }\\n\\n    /// @notice Send `_amount` tokens to `_to` from `_from` on the condition it\\n    ///  is approved by `_from`\\n    /// @param _from The address holding the tokens being transferred\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return True if the transfer was successful\\n    function transferFrom(address _from, address _to, uint256 _amount\\n    ) public returns (bool success) {\\n\\n        // The controller of this contract can move tokens around at will,\\n        //  this is important to recognize! Confirm that you trust the\\n        //  controller of this contract, which in most situations should be\\n        //  another open source smart contract or 0x0\\n        if (msg.sender != controller) {\\n            require(transfersEnabled);\\n\\n            // The standard ERC 20 transferFrom functionality\\n            if (allowed[_from][msg.sender] < _amount) return false;\\n            allowed[_from][msg.sender] -= _amount;\\n        }\\n        return doTransfer(_from, _to, _amount);\\n    }\\n\\n    /// @dev This is the actual transfer function in the token contract, it can\\n    ///  only be called by other functions in this contract.\\n    /// @param _from The address holding the tokens being transferred\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return True if the transfer was successful\\n    function doTransfer(address _from, address _to, uint _amount\\n    ) internal returns(bool) {\\n\\n           if (_amount == 0) {\\n               return true;\\n           }\\n\\n           require(parentSnapShotBlock < block.number);\\n\\n           // Do not allow transfer to 0x0 or the token contract itself\\n           require((_to != 0) && (_to != address(this)));\\n\\n           // If the amount being transfered is more than the balance of the\\n           //  account the transfer returns false\\n           var previousBalanceFrom = balanceOfAt(_from, block.number);\\n           if (previousBalanceFrom < _amount) {\\n               return false;\\n           }\\n\\n           // Alerts the token controller of the transfer\\n           if (isContract(controller)) {\\n               require(TokenController(controller).onTransfer(_from, _to, _amount));\\n           }\\n\\n           // First update the balance array with the new value for the address\\n           //  sending the tokens\\n           updateValueAtNow(balances[_from], previousBalanceFrom - _amount);\\n\\n           // Then update the balance array with the new value for the address\\n           //  receiving the tokens\\n           var previousBalanceTo = balanceOfAt(_to, block.number);\\n           require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\n           updateValueAtNow(balances[_to], previousBalanceTo + _amount);\\n\\n           // An event to make the transfer easy to find on the blockchain\\n           Transfer(_from, _to, _amount);\\n\\n           return true;\\n    }\\n\\n    /// @param _owner The address that's balance is being requested\\n    /// @return The balance of `_owner` at the current block\\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\\n        return balanceOfAt(_owner, block.number);\\n    }\\n\\n    /// @notice `msg.sender` approves `_spender` to spend `_amount` tokens on\\n    ///  its behalf. This is a modified version of the ERC20 approve function\\n    ///  to be a little bit safer\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @param _amount The amount of tokens to be approved for transfer\\n    /// @return True if the approval was successful\\n    function approve(address _spender, uint256 _amount) public returns (bool success) {\\n        require(transfersEnabled);\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender,0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require((_amount == 0) || (allowed[msg.sender][_spender] == 0));\\n\\n        // Alerts the token controller of the approve function call\\n        if (isContract(controller)) {\\n            require(TokenController(controller).onApprove(msg.sender, _spender, _amount));\\n        }\\n\\n        allowed[msg.sender][_spender] = _amount;\\n        Approval(msg.sender, _spender, _amount);\\n        return true;\\n    }\\n\\n    /// @dev This function makes it easy to read the `allowed[]` map\\n    /// @param _owner The address of the account that owns the token\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @return Amount of remaining tokens of _owner that _spender is allowed\\n    ///  to spend\\n    function allowance(address _owner, address _spender\\n    ) public constant returns (uint256 remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n    /// @notice `msg.sender` approves `_spender` to send `_amount` tokens on\\n    ///  its behalf, and then a function is triggered in the contract that is\\n    ///  being approved, `_spender`. This allows users to use their tokens to\\n    ///  interact with contracts in one function call instead of two\\n    /// @param _spender The address of the contract able to transfer the tokens\\n    /// @param _amount The amount of tokens to be approved for transfer\\n    /// @return True if the function call was successful\\n    function approveAndCall(address _spender, uint256 _amount, bytes _extraData\\n    ) public returns (bool success) {\\n        require(approve(_spender, _amount));\\n\\n        ApproveAndCallFallBack(_spender).receiveApproval(\\n            msg.sender,\\n            _amount,\\n            this,\\n            _extraData\\n        );\\n\\n        return true;\\n    }\\n\\n    /// @dev This function makes it easy to get the total number of tokens\\n    /// @return The total number of tokens\\n    function totalSupply() public constant returns (uint) {\\n        return totalSupplyAt(block.number);\\n    }\\n\\n\\n////////////////\\n// Query balance and totalSupply in History\\n////////////////\\n\\n    /// @dev Queries the balance of `_owner` at a specific `_blockNumber`\\n    /// @param _owner The address from which the balance will be retrieved\\n    /// @param _blockNumber The block number when the balance is queried\\n    /// @return The balance at `_blockNumber`\\n    function balanceOfAt(address _owner, uint _blockNumber) public constant\\n        returns (uint) {\\n\\n        // These next few lines are used when the balance of the token is\\n        //  requested before a check point was ever created for this token, it\\n        //  requires that the `parentToken.balanceOfAt` be queried at the\\n        //  genesis block for that token as this contains initial balance of\\n        //  this token\\n        if ((balances[_owner].length == 0)\\n            || (balances[_owner][0].fromBlock > _blockNumber)) {\\n            if (address(parentToken) != 0) {\\n                return parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock));\\n            } else {\\n                // Has no parent\\n                return 0;\\n            }\\n\\n        // This will return the expected balance during normal situations\\n        } else {\\n            return getValueAt(balances[_owner], _blockNumber);\\n        }\\n    }\\n\\n    /// @notice Total amount of tokens at a specific `_blockNumber`.\\n    /// @param _blockNumber The block number when the totalSupply is queried\\n    /// @return The total amount of tokens at `_blockNumber`\\n    function totalSupplyAt(uint _blockNumber) public constant returns(uint) {\\n\\n        // These next few lines are used when the totalSupply of the token is\\n        //  requested before a check point was ever created for this token, it\\n        //  requires that the `parentToken.totalSupplyAt` be queried at the\\n        //  genesis block for this token as that contains totalSupply of this\\n        //  token at this block number.\\n        if ((totalSupplyHistory.length == 0)\\n            || (totalSupplyHistory[0].fromBlock > _blockNumber)) {\\n            if (address(parentToken) != 0) {\\n                return parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock));\\n            } else {\\n                return 0;\\n            }\\n\\n        // This will return the expected totalSupply during normal situations\\n        } else {\\n            return getValueAt(totalSupplyHistory, _blockNumber);\\n        }\\n    }\\n\\n////////////////\\n// Clone Token Method\\n////////////////\\n\\n    /// @notice Creates a new clone token with the initial distribution being\\n    ///  this token at `_snapshotBlock`\\n    /// @param _cloneTokenName Name of the clone token\\n    /// @param _cloneDecimalUnits Number of decimals of the smallest unit\\n    /// @param _cloneTokenSymbol Symbol of the clone token\\n    /// @param _snapshotBlock Block when the distribution of the parent token is\\n    ///  copied to set the initial distribution of the new clone token;\\n    ///  if the block is zero than the actual block, the current block is used\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\n    /// @return The address of the new MiniMeToken Contract\\n    function createCloneToken(\\n        string _cloneTokenName,\\n        uint8 _cloneDecimalUnits,\\n        string _cloneTokenSymbol,\\n        uint _snapshotBlock,\\n        bool _transfersEnabled\\n        ) public returns(address) {\\n        if (_snapshotBlock == 0) _snapshotBlock = block.number;\\n        MiniMeToken cloneToken = tokenFactory.createCloneToken(\\n            this,\\n            _snapshotBlock,\\n            _cloneTokenName,\\n            _cloneDecimalUnits,\\n            _cloneTokenSymbol,\\n            _transfersEnabled\\n            );\\n\\n        cloneToken.changeController(msg.sender);\\n\\n        // An event to make the token easy to find on the blockchain\\n        NewCloneToken(address(cloneToken), _snapshotBlock);\\n        return address(cloneToken);\\n    }\\n\\n////////////////\\n// Generate and destroy tokens\\n////////////////\\n\\n    /// @notice Generates `_amount` tokens that are assigned to `_owner`\\n    /// @param _owner The address that will be assigned the new tokens\\n    /// @param _amount The quantity of tokens generated\\n    /// @return True if the tokens are generated correctly\\n    function generateTokens(address _owner, uint _amount\\n    ) public onlyController returns (bool) {\\n        uint curTotalSupply = totalSupply();\\n        require(curTotalSupply + _amount >= curTotalSupply); // Check for overflow\\n        uint previousBalanceTo = balanceOf(_owner);\\n        require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply + _amount);\\n        updateValueAtNow(balances[_owner], previousBalanceTo + _amount);\\n        Transfer(0, _owner, _amount);\\n        return true;\\n    }\\n\\n\\n    /// @notice Burns `_amount` tokens from `_owner`\\n    /// @param _owner The address that will lose the tokens\\n    /// @param _amount The quantity of tokens to burn\\n    /// @return True if the tokens are burned correctly\\n    function destroyTokens(address _owner, uint _amount\\n    ) onlyController public returns (bool) {\\n        uint curTotalSupply = totalSupply();\\n        require(curTotalSupply >= _amount);\\n        uint previousBalanceFrom = balanceOf(_owner);\\n        require(previousBalanceFrom >= _amount);\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply - _amount);\\n        updateValueAtNow(balances[_owner], previousBalanceFrom - _amount);\\n        Transfer(_owner, 0, _amount);\\n        return true;\\n    }\\n\\n////////////////\\n// Enable tokens transfers\\n////////////////\\n\\n\\n    /// @notice Enables token holders to transfer their tokens freely if true\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\n    function enableTransfers(bool _transfersEnabled) public onlyController {\\n        transfersEnabled = _transfersEnabled;\\n    }\\n\\n////////////////\\n// Internal helper functions to query and set a value in a snapshot array\\n////////////////\\n\\n    /// @dev `getValueAt` retrieves the number of tokens at a given block number\\n    /// @param checkpoints The history of values being queried\\n    /// @param _block The block number to retrieve the value at\\n    /// @return The number of tokens being queried\\n    function getValueAt(Checkpoint[] storage checkpoints, uint _block\\n    ) constant internal returns (uint) {\\n        if (checkpoints.length == 0) return 0;\\n\\n        // Shortcut for the actual value\\n        if (_block >= checkpoints[checkpoints.length-1].fromBlock)\\n            return checkpoints[checkpoints.length-1].value;\\n        if (_block < checkpoints[0].fromBlock) return 0;\\n\\n        // Binary search of the value in the array\\n        uint min = 0;\\n        uint max = checkpoints.length-1;\\n        while (max > min) {\\n            uint mid = (max + min + 1)/ 2;\\n            if (checkpoints[mid].fromBlock<=_block) {\\n                min = mid;\\n            } else {\\n                max = mid-1;\\n            }\\n        }\\n        return checkpoints[min].value;\\n    }\\n\\n    /// @dev `updateValueAtNow` used to update the `balances` map and the\\n    ///  `totalSupplyHistory`\\n    /// @param checkpoints The history of data being updated\\n    /// @param _value The new number of tokens\\n    function updateValueAtNow(Checkpoint[] storage checkpoints, uint _value\\n    ) internal  {\\n        if ((checkpoints.length == 0)\\n        || (checkpoints[checkpoints.length -1].fromBlock < block.number)) {\\n               Checkpoint storage newCheckPoint = checkpoints[ checkpoints.length++ ];\\n               newCheckPoint.fromBlock =  uint128(block.number);\\n               newCheckPoint.value = uint128(_value);\\n           } else {\\n               Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length-1];\\n               oldCheckPoint.value = uint128(_value);\\n           }\\n    }\\n\\n    /// @dev Internal function to determine if an address is a contract\\n    /// @param _addr The address being queried\\n    /// @return True if `_addr` is a contract\\n    function isContract(address _addr) constant internal returns(bool) {\\n        uint size;\\n        if (_addr == 0) return false;\\n        assembly {\\n            size := extcodesize(_addr)\\n        }\\n        return size>0;\\n    }\\n\\n    /// @dev Helper function to return a min betwen the two uints\\n    function min(uint a, uint b) pure internal returns (uint) {\\n        return a < b ? a : b;\\n    }\\n\\n    /// @notice The fallback function: If the contract's controller has not been\\n    ///  set to 0, then the `proxyPayment` method is called which relays the\\n    ///  ether and creates tokens as described in the token controller contract\\n    function () public payable {\\n        require(isContract(controller));\\n        require(TokenController(controller).proxyPayment.value(msg.value)(msg.sender));\\n    }\\n\\n//////////\\n// Safety Methods\\n//////////\\n\\n    /// @notice This method can be used by the controller to extract mistakenly\\n    ///  sent tokens to this contract.\\n    /// @param _token The address of the token contract that you want to recover\\n    ///  set to 0 in case you want to extract ether.\\n    function claimTokens(address _token) public onlyController {\\n        if (_token == 0x0) {\\n            controller.transfer(this.balance);\\n            return;\\n        }\\n\\n        MiniMeToken token = MiniMeToken(_token);\\n        uint balance = token.balanceOf(this);\\n        token.transfer(controller, balance);\\n        ClaimedTokens(_token, controller, balance);\\n    }\\n\\n////////////////\\n// Events\\n////////////////\\n    event ClaimedTokens(address indexed _token, address indexed _controller, uint _amount);\\n    event Transfer(address indexed _from, address indexed _to, uint256 _amount);\\n    event NewCloneToken(address indexed _cloneToken, uint _snapshotBlock);\\n    event Approval(\\n        address indexed _owner,\\n        address indexed _spender,\\n        uint256 _amount\\n        );\\n\\n}\\n\\n\\n////////////////\\n// MiniMeTokenFactory\\n////////////////\\n\\n/// @dev This contract is used to generate clone contracts from a contract.\\n///  In solidity this is the way to create a contract from a contract of the\\n///  same class\\ncontract MiniMeTokenFactory {\\n\\n    /// @notice Update the DApp by creating a new token with new functionalities\\n    ///  the msg.sender becomes the controller of this clone token\\n    /// @param _parentToken Address of the token being cloned\\n    /// @param _snapshotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    /// @return The address of the new token contract\\n    function createCloneToken(\\n        address _parentToken,\\n        uint _snapshotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) public returns (MiniMeToken) {\\n        MiniMeToken newToken = new MiniMeToken(\\n            this,\\n            _parentToken,\\n            _snapshotBlock,\\n            _tokenName,\\n            _decimalUnits,\\n            _tokenSymbol,\\n            _transfersEnabled\\n            );\\n\\n        newToken.changeController(msg.sender);\\n        return newToken;\\n    }\\n}\\n\",\"keccak256\":\"0x3dba5ff0dd1de9ebff6cd48898e78f7ce7c9996d345c702dca6a3a7d69750ed4\"},\"minimetoken/contracts/TokenController.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/// @dev The token controller contract must implement these functions\\ncontract TokenController {\\n    /// @notice Called when `_owner` sends ether to the MiniMe Token contract\\n    /// @param _owner The address that sent the ether to create tokens\\n    /// @return True if the ether is accepted, false if it throws\\n    function proxyPayment(address _owner) public payable returns(bool);\\n\\n    /// @notice Notifies the controller about a token transfer allowing the\\n    ///  controller to react if desired\\n    /// @param _from The origin of the transfer\\n    /// @param _to The destination of the transfer\\n    /// @param _amount The amount of the transfer\\n    /// @return False if the controller does not authorize the transfer\\n    function onTransfer(address _from, address _to, uint _amount) public returns(bool);\\n\\n    /// @notice Notifies the controller about an approval allowing the\\n    ///  controller to react if desired\\n    /// @param _owner The address that calls `approve()`\\n    /// @param _spender The spender in the `approve()` call\\n    /// @param _amount The amount in the `approve()` call\\n    /// @return False if the controller does not authorize the approval\\n    function onApprove(address _owner, address _spender, uint _amount) public\\n        returns(bool);\\n}\\n\",\"keccak256\":\"0xf8bf7de20c0412ab90ec43c1432508a8316e17bd246adffa737e0d779413ff5e\"}},\"version\":1}"
      }
    },
    "./contracts/GivethBridge.sol": {
      "GivethBridge": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "maxSecurityGuardDelay",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "token",
                "type": "address"
              },
              {
                "name": "accepted",
                "type": "bool"
              }
            ],
            "name": "whitelistToken",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "giver",
                "type": "address"
              },
              {
                "name": "receiverId",
                "type": "uint64"
              },
              {
                "name": "token",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "donateAndCreateGiver",
            "outputs": [],
            "payable": true,
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_token",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "escapeFunds",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newTimeLock",
                "type": "uint256"
              }
            ],
            "name": "setTimelock",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "escapeHatchCaller",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newOwner",
                "type": "address"
              }
            ],
            "name": "changeOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "unpause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "giverId",
                "type": "uint64"
              },
              {
                "name": "receiverId",
                "type": "uint64"
              },
              {
                "name": "token",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "donate",
            "outputs": [],
            "payable": true,
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "paused",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_dac",
                "type": "address"
              }
            ],
            "name": "removeOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "numberOfAuthorizedPayments",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newOwnerCandidate",
                "type": "address"
              }
            ],
            "name": "proposeOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_authorize",
                "type": "bool"
              }
            ],
            "name": "authorizeSpender",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "acceptOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_idPayment",
                "type": "uint256"
              }
            ],
            "name": "cancelPayment",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "pause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_idPayment",
                "type": "uint256"
              },
              {
                "name": "_delay",
                "type": "uint256"
              }
            ],
            "name": "delayPayment",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_token",
                "type": "address"
              }
            ],
            "name": "isTokenEscapable",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "giver",
                "type": "address"
              },
              {
                "name": "receiverId",
                "type": "uint64"
              }
            ],
            "name": "donateAndCreateGiver",
            "outputs": [],
            "payable": true,
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_idPayment",
                "type": "uint256"
              }
            ],
            "name": "collectAuthorizedPayment",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "name": "authorizedPayments",
            "outputs": [
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "reference",
                "type": "bytes32"
              },
              {
                "name": "spender",
                "type": "address"
              },
              {
                "name": "earliestPayTime",
                "type": "uint256"
              },
              {
                "name": "canceled",
                "type": "bool"
              },
              {
                "name": "paid",
                "type": "bool"
              },
              {
                "name": "recipient",
                "type": "address"
              },
              {
                "name": "token",
                "type": "address"
              },
              {
                "name": "amount",
                "type": "uint256"
              },
              {
                "name": "securityGuardDelay",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_token",
                "type": "address"
              }
            ],
            "name": "escapeHatch",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "securityGuard",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newSecurityGuard",
                "type": "address"
              }
            ],
            "name": "setSecurityGuard",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "giverId",
                "type": "uint64"
              },
              {
                "name": "receiverId",
                "type": "uint64"
              }
            ],
            "name": "donate",
            "outputs": [],
            "payable": true,
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "timeLock",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "newOwnerCandidate",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newEscapeHatchCaller",
                "type": "address"
              }
            ],
            "name": "changeHatchEscapeCaller",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "name": "allowedSpenders",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_maxSecurityGuardDelay",
                "type": "uint256"
              }
            ],
            "name": "setMaxSecurityGuardDelay",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "absoluteMinTimeLock",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_name",
                "type": "string"
              },
              {
                "name": "_reference",
                "type": "bytes32"
              },
              {
                "name": "_recipient",
                "type": "address"
              },
              {
                "name": "_token",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              },
              {
                "name": "_paymentDelay",
                "type": "uint256"
              }
            ],
            "name": "authorizePayment",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "escapeHatchDestination",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "name": "_escapeHatchCaller",
                "type": "address"
              },
              {
                "name": "_escapeHatchDestination",
                "type": "address"
              },
              {
                "name": "_absoluteMinTimeLock",
                "type": "uint256"
              },
              {
                "name": "_timeLock",
                "type": "uint256"
              },
              {
                "name": "_securityGuard",
                "type": "address"
              },
              {
                "name": "_maxSecurityGuardDelay",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "giverId",
                "type": "uint64"
              },
              {
                "indexed": false,
                "name": "receiverId",
                "type": "uint64"
              },
              {
                "indexed": false,
                "name": "token",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "Donate",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "giver",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "receiverId",
                "type": "uint64"
              },
              {
                "indexed": false,
                "name": "token",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "DonateAndCreateGiver",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "token",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "EscapeFundsCalled",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "idPayment",
                "type": "uint256"
              },
              {
                "indexed": true,
                "name": "recipient",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "amount",
                "type": "uint256"
              },
              {
                "indexed": false,
                "name": "token",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "reference",
                "type": "bytes32"
              }
            ],
            "name": "PaymentAuthorized",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "idPayment",
                "type": "uint256"
              },
              {
                "indexed": true,
                "name": "recipient",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "amount",
                "type": "uint256"
              },
              {
                "indexed": false,
                "name": "token",
                "type": "address"
              }
            ],
            "name": "PaymentExecuted",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "idPayment",
                "type": "uint256"
              }
            ],
            "name": "PaymentCanceled",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "authorized",
                "type": "bool"
              }
            ],
            "name": "SpenderAuthorization",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "Pause",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "Unpause",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "token",
                "type": "address"
              }
            ],
            "name": "EscapeHatchBlackistedToken",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "token",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "EscapeHatchCalled",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "by",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              }
            ],
            "name": "OwnershipRequested",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "OwnershipRemoved",
            "type": "event"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "60606040526005805460ff19169055341561001957600080fd5b60405160c080611ab283398101604052808051919060200180519190602001805191906020018051919060200180519190602001805160008054600160a060020a03338116600160a060020a0319928316178355600280549b82169b83169b909b17909a5560038054998b1699821699909917909855600896909655600994909455505060078054959091169490931693909317909155600a919091558052600c6020527f13649b2456f1b42fef0f0040b3aaeabcd21a76a0f3f5defd4f583839455116e8805460ff191660011790556119ba806100f86000396000f30060606040526004361061019d5763ffffffff60e060020a6000350416630b2e742381146101a25780630ffb1d8b146101c75780631870c10f146101ed5780631b28591c146102185780631e891c0a1461023a5780631f6eb6e7146102505780632af4c31e1461027f5780633f4ba83a1461029e5780634c4316c7146102b15780635c975abb146102db578063666a34271461030257806368b8c5a114610321578063710bf32214610334578063793c0fd41461035357806379ba5097146103775780638422927d1461038a5780638456cb59146103a0578063846a5dde146103b3578063892db057146103cc5780638da5cb5b146103eb57806391f5c3a8146103fe57806392e4b8a41461041f578063a0927a6a14610435578063a142d60814610519578063b2ca3ec414610538578063bb2a51d11461054b578063bde60ac91461056a578063d085835a14610585578063d091b55014610598578063d836fbe8146105ab578063d8528af0146105ca578063da4793ac146105e9578063ea8a66c7146105ff578063f37b74ca14610612578063f5b612301461064c575b600080fd5b34156101ad57600080fd5b6101b561065f565b60405190815260200160405180910390f35b34156101d257600080fd5b6101eb600160a060020a03600435166024351515610665565b005b6101eb600160a060020a0360043581169067ffffffffffffffff6024351690604435166064356106bb565b341561022357600080fd5b6101eb600160a060020a036004351660243561076f565b341561024557600080fd5b6101eb6004356108fd565b341561025b57600080fd5b61026361092c565b604051600160a060020a03909116815260200160405180910390f35b341561028a57600080fd5b6101eb600160a060020a036004351661093b565b34156102a957600080fd5b6101eb6109cf565b6101eb67ffffffffffffffff60043581169060243516600160a060020a0360443516606435610a33565b34156102e657600080fd5b6102ee610ae8565b604051901515815260200160405180910390f35b341561030d57600080fd5b6101eb600160a060020a0360043516610af1565b341561032c57600080fd5b6101b5610b6e565b341561033f57600080fd5b6101eb600160a060020a0360043516610b75565b341561035e57600080fd5b6101eb600160a060020a03600435166024351515610be6565b341561038257600080fd5b6101eb610c60565b341561039557600080fd5b6101eb600435610ce0565b34156103ab57600080fd5b6101eb610d94565b34156103be57600080fd5b6101eb600435602435610dfa565b34156103d757600080fd5b6102ee600160a060020a0360043516610eb0565b34156103f657600080fd5b610263610ecf565b6101eb600160a060020a036004351667ffffffffffffffff60243516610ede565b341561042a57600080fd5b6101eb600435610eef565b341561044057600080fd5b61044b600435611127565b604051602081018a9052600160a060020a03808a16604083015260608201899052871515608083015286151560a083015285811660c0830152841660e082015261010081018390526101208101829052610140808252819081018c818151815260200191508051906020019080838360005b838110156104d55780820151838201526020016104bd565b50505050905090810190601f1680156105025780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390f35b341561052457600080fd5b6101eb600160a060020a036004351661123b565b341561054357600080fd5b61026361145c565b341561055657600080fd5b6101eb600160a060020a036004351661146b565b6101eb67ffffffffffffffff600435811690602435166114a8565b341561059057600080fd5b6101b56114b5565b34156105a357600080fd5b6102636114bb565b34156105b657600080fd5b6101eb600160a060020a03600435166114ca565b34156105d557600080fd5b6102ee600160a060020a0360043516611522565b34156105f457600080fd5b6101eb600435611537565b341561060a57600080fd5b6101b5611557565b341561061d57600080fd5b6101b5602460048035828101929101359035600160a060020a036044358116906064351660843560a43561155d565b341561065757600080fd5b61026361170f565b600a5481565b60055460ff161561067557600080fd5b60005433600160a060020a0390811691161461069057600080fd5b600160a060020a03919091166000908152600c60205260409020805460ff1916911515919091179055565b60055460009060ff16156106ce57600080fd5b600160a060020a03851615156106e357600080fd5b67ffffffffffffffff841615156106f957600080fd5b610703838361171e565b90507f300ed237d4114d1c2df9984e698721646d6c45633d6c1c5430450cdecf61571d85858584604051600160a060020a03948516815267ffffffffffffffff909316602084015292166040808301919091526060820192909252608001905180910390a15050505050565b60025460009033600160a060020a039081169116148061079d575060005433600160a060020a039081169116145b15156107a857600080fd5b600160a060020a038316151561083457600354600160a060020a031682156108fc0283604051600060405180830381858888f1935050505015156107eb57600080fd5b7f4ccddcd1a4e33721aee316370fb3e014294985be0755a68c88009b31e1dc4ae38383604051600160a060020a03909216825260208201526040908101905180910390a16108f8565b506003548290600160a060020a038083169163a9059cbb91168460405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561089157600080fd5b5af1151561089e57600080fd5b5050506040518051905015156108b357600080fd5b7f4ccddcd1a4e33721aee316370fb3e014294985be0755a68c88009b31e1dc4ae38383604051600160a060020a03909216825260208201526040908101905180910390a15b505050565b60005433600160a060020a0390811691161461091857600080fd5b60085481101561092757600080fd5b600955565b600254600160a060020a031681565b6000805433600160a060020a0390811691161461095757600080fd5b600160a060020a038216151561096c57600080fd5b5060008054600160a060020a03838116600160a060020a031980841691909117938490556001805490911690559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60005433600160a060020a039081169116146109ea57600080fd5b60055460ff1615156109fb57600080fd5b6005805460ff191690557f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b60055460009060ff1615610a4657600080fd5b67ffffffffffffffff85161515610a5c57600080fd5b67ffffffffffffffff84161515610a7257600080fd5b610a7c838361171e565b90507fc77b8feedf86922981aed41179f4a071d80467c7f17c5c13837269e363ac545b8585858460405167ffffffffffffffff9485168152929093166020830152600160a060020a03166040808301919091526060820192909252608001905180910390a15050505050565b60055460ff1681565b60005433600160a060020a03908116911614610b0c57600080fd5b610dac600160a060020a03821614610b2357600080fd5b60008054600160a060020a03199081169091556001805490911690557f94e8b32e01b9eedfddd778ffbd051a7718cdc14781702884561162dca6f74dbb60405160405180910390a150565b6006545b90565b60005433600160a060020a03908116911614610b9057600080fd5b60018054600160a060020a031916600160a060020a0383811691909117918290559081169033167f13a4b3bc0d5234dd3d87c9f1557d8faefa37986da62c36ba49309e2fb2c9aec460405160405180910390a350565b60005433600160a060020a03908116911614610c0157600080fd5b600160a060020a0382166000818152600b602052604090819020805460ff19168415151790557f801f568efbc3346a6ae3d0c3eb335a30d64e0d3cf08f1c39626d62cd5c82728190839051901515815260200160405180910390a25050565b60015460009033600160a060020a03908116911614610c7e57600080fd5b506000805460018054600160a060020a0319808416600160a060020a03838116919091179586905591169091559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b6000805433600160a060020a03908116911614610cfc57600080fd5b6006548210610d0a57600080fd5b6006805483908110610d1857fe5b60009182526020909120600890910201600481015490915060ff1615610d3d57600080fd5b6004810154610100900460ff1615610d5457600080fd5b60048101805460ff19166001179055817ffdf197ed54809861dafe0b4d391843652730ac67274c1e9e46db7687dccaa30160405160405180910390a25050565b60005433600160a060020a03908116911614610daf57600080fd5b60055460ff1615610dbf57600080fd5b6005805460ff191660011790557f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b60075460009033600160a060020a03908116911614610e1857600080fd5b6006548310610e2657600080fd5b670de0b6b3a7640000821115610e3b57600080fd5b6006805484908110610e4957fe5b90600052602060002090600802019050600a548282600701540111151515610e7057600080fd5b6004810154610100900460ff1615610e8757600080fd5b600481015460ff1615610e9957600080fd5b600781018054830190556003018054909101905550565b600160a060020a031660009081526004602052604090205460ff161590565b600054600160a060020a031681565b610eeb82826000806106bb565b5050565b60055460009060ff1615610f0257600080fd5b6006548210610f1057600080fd5b6006805483908110610f1e57fe5b6000918252602090912060046008909202019081015490915033600160a060020a03908116620100009092041614610f5557600080fd5b6002810154600160a060020a03166000908152600b602052604090205460ff161515610f8057600080fd5b8060030154610f8d6117ff565b1015610f9857600080fd5b600481015460ff1615610faa57600080fd5b6004810154610100900460ff1615610fc157600080fd5b60048101805461ff0019166101001790556005810154600160a060020a0316151561102d576004810154600682015462010000909104600160a060020a0316906108fc81150290604051600060405180830381858888f19350505050151561102857600080fd5b6110bb565b600581015460048201546006830154600160a060020a039283169263a9059cbb92620100009004169060405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561109957600080fd5b5af115156110a657600080fd5b5050506040518051905015156110bb57600080fd5b600481015460068201546005830154600160a060020a036201000090930483169285927f354f3c0c8efabe1a1a07cf222842b008ef284ac185e63bdf8245be8cd2d97f5192909116604051918252600160a060020a031660208201526040908101905180910390a35050565b600680548290811061113557fe5b9060005260206000209060080201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111e15780601f106111b6576101008083540402835291602001916111e1565b820191906000526020600020905b8154815290600101906020018083116111c457829003601f168201915b5050505060018301546002840154600385015460048601546005870154600688015460079098015496979496600160a060020a039485169650929460ff80841695610100850490911694620100009094048116939216918a565b600254600090819033600160a060020a039081169116148061126b575060005433600160a060020a039081169116145b151561127657600080fd5b600160a060020a03831660009081526004602052604090205460ff161561129c57600080fd5b600160a060020a038316151561132e57600354600160a060020a033081163193501682156108fc0283604051600060405180830381858888f1935050505015156112e557600080fd5b7fa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f28383604051600160a060020a03909216825260208201526040908101905180910390a16108f8565b5081600160a060020a0381166370a082313060405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b151561137e57600080fd5b5af1151561138b57600080fd5b5050506040518051600354909350600160a060020a03808416925063a9059cbb91168460405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b15156113f157600080fd5b5af115156113fe57600080fd5b50505060405180519050151561141357600080fd5b7fa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f28383604051600160a060020a03909216825260208201526040908101905180910390a1505050565b600754600160a060020a031681565b60005433600160a060020a0390811691161461148657600080fd5b60078054600160a060020a031916600160a060020a0392909216919091179055565b610eeb8282600080610a33565b60095481565b600154600160a060020a031681565b60025433600160a060020a03908116911614806114f5575060005433600160a060020a039081169116145b151561150057600080fd5b60028054600160a060020a031916600160a060020a0392909216919091179055565b600b6020526000908152604090205460ff1681565b60005433600160a060020a0390811691161461155257600080fd5b600a55565b60085481565b6005546000908190819060ff161561157457600080fd5b600160a060020a0333166000908152600b602052604090205460ff16151561159b57600080fd5b60068054925082906115b09060018301611803565b5060068054839081106115bf57fe5b60009182526020909120600890910201600281018054600160a060020a03191633600160a060020a03161790559050670de0b6b3a764000084111561160357600080fd5b60095484101561161e576009546116186117ff565b01611629565b836116276117ff565b015b600382015560048101805475ffffffffffffffffffffffffffffffffffffffff0000191662010000600160a060020a038a160217905560068101859055611671818b8b61182f565b5060018101889055600581018054600160a060020a031916600160a060020a038881169190911791829055600483015460068401546201000090910482169285927fd11935115aa93b9f1f616d0d7702f4593572daa610390123241b3785430281c49291168c604051928352600160a060020a0390911660208301526040808301919091526060909101905180910390a35098975050505050505050565b600354600160a060020a031681565b600160a060020a0382166000908152600c602052604081205460ff16151561174557600080fd5b5080600160a060020a038316151561175a5750345b6000811161176757600080fd5b600160a060020a038316156117f95782600160a060020a03166323b872dd33308460405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401602060405180830381600087803b15156117d757600080fd5b5af115156117e457600080fd5b5050506040518051905015156117f957600080fd5b92915050565b4290565b8154818355818115116108f8576008028160080283600052602060002091820191016108f891906118ad565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106118705782800160ff1982351617855561189d565b8280016001018555821561189d579182015b8281111561189d578235825591602001919060010190611882565b506118a992915061192d565b5090565b610b7291905b808211156118a95760006118c78282611947565b50600060018201819055600282018054600160a060020a03199081169091556003830182905560048301805475ffffffffffffffffffffffffffffffffffffffffffff1916905560058301805490911690556006820181905560078201556008016118b3565b610b7291905b808211156118a95760008155600101611933565b50805460018160011615610100020316600290046000825580601f1061196d575061198b565b601f01602090049060005260206000209081019061198b919061192d565b505600a165627a7a72305820cb45d5da542d800123ae090d58712c67dd5f493902e5ffdb7bb483bcc3a4313b0029",
            "sourceMap": "1245:5921:1:-;;;268:26:3;;;-1:-1:-1;;268:26:3;;;2711:487:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;993:5:7;:18;;-1:-1:-1;;;;;1001:10:7;993:18;;-1:-1:-1;;;;;;993:18:7;;;;;;2101:17:6;:38;;;;;;;;;;;;;;;2149:22;:48;;;;;;;;;;;;;;;4837:19:4;:42;;;;4889:8;:20;;;;-1:-1:-1;;4919:13:4;:30;;;;;;;;;;;;;;;;;4959:21;:46;;;;3143:17:1;;:14;2711:487;3143:17;;:24;;-1:-1:-1;;3143:24:1;993:18:7;3143:24:1;;;1245:5921;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "60606040526004361061019d5763ffffffff60e060020a6000350416630b2e742381146101a25780630ffb1d8b146101c75780631870c10f146101ed5780631b28591c146102185780631e891c0a1461023a5780631f6eb6e7146102505780632af4c31e1461027f5780633f4ba83a1461029e5780634c4316c7146102b15780635c975abb146102db578063666a34271461030257806368b8c5a114610321578063710bf32214610334578063793c0fd41461035357806379ba5097146103775780638422927d1461038a5780638456cb59146103a0578063846a5dde146103b3578063892db057146103cc5780638da5cb5b146103eb57806391f5c3a8146103fe57806392e4b8a41461041f578063a0927a6a14610435578063a142d60814610519578063b2ca3ec414610538578063bb2a51d11461054b578063bde60ac91461056a578063d085835a14610585578063d091b55014610598578063d836fbe8146105ab578063d8528af0146105ca578063da4793ac146105e9578063ea8a66c7146105ff578063f37b74ca14610612578063f5b612301461064c575b600080fd5b34156101ad57600080fd5b6101b561065f565b60405190815260200160405180910390f35b34156101d257600080fd5b6101eb600160a060020a03600435166024351515610665565b005b6101eb600160a060020a0360043581169067ffffffffffffffff6024351690604435166064356106bb565b341561022357600080fd5b6101eb600160a060020a036004351660243561076f565b341561024557600080fd5b6101eb6004356108fd565b341561025b57600080fd5b61026361092c565b604051600160a060020a03909116815260200160405180910390f35b341561028a57600080fd5b6101eb600160a060020a036004351661093b565b34156102a957600080fd5b6101eb6109cf565b6101eb67ffffffffffffffff60043581169060243516600160a060020a0360443516606435610a33565b34156102e657600080fd5b6102ee610ae8565b604051901515815260200160405180910390f35b341561030d57600080fd5b6101eb600160a060020a0360043516610af1565b341561032c57600080fd5b6101b5610b6e565b341561033f57600080fd5b6101eb600160a060020a0360043516610b75565b341561035e57600080fd5b6101eb600160a060020a03600435166024351515610be6565b341561038257600080fd5b6101eb610c60565b341561039557600080fd5b6101eb600435610ce0565b34156103ab57600080fd5b6101eb610d94565b34156103be57600080fd5b6101eb600435602435610dfa565b34156103d757600080fd5b6102ee600160a060020a0360043516610eb0565b34156103f657600080fd5b610263610ecf565b6101eb600160a060020a036004351667ffffffffffffffff60243516610ede565b341561042a57600080fd5b6101eb600435610eef565b341561044057600080fd5b61044b600435611127565b604051602081018a9052600160a060020a03808a16604083015260608201899052871515608083015286151560a083015285811660c0830152841660e082015261010081018390526101208101829052610140808252819081018c818151815260200191508051906020019080838360005b838110156104d55780820151838201526020016104bd565b50505050905090810190601f1680156105025780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390f35b341561052457600080fd5b6101eb600160a060020a036004351661123b565b341561054357600080fd5b61026361145c565b341561055657600080fd5b6101eb600160a060020a036004351661146b565b6101eb67ffffffffffffffff600435811690602435166114a8565b341561059057600080fd5b6101b56114b5565b34156105a357600080fd5b6102636114bb565b34156105b657600080fd5b6101eb600160a060020a03600435166114ca565b34156105d557600080fd5b6102ee600160a060020a0360043516611522565b34156105f457600080fd5b6101eb600435611537565b341561060a57600080fd5b6101b5611557565b341561061d57600080fd5b6101b5602460048035828101929101359035600160a060020a036044358116906064351660843560a43561155d565b341561065757600080fd5b61026361170f565b600a5481565b60055460ff161561067557600080fd5b60005433600160a060020a0390811691161461069057600080fd5b600160a060020a03919091166000908152600c60205260409020805460ff1916911515919091179055565b60055460009060ff16156106ce57600080fd5b600160a060020a03851615156106e357600080fd5b67ffffffffffffffff841615156106f957600080fd5b610703838361171e565b90507f300ed237d4114d1c2df9984e698721646d6c45633d6c1c5430450cdecf61571d85858584604051600160a060020a03948516815267ffffffffffffffff909316602084015292166040808301919091526060820192909252608001905180910390a15050505050565b60025460009033600160a060020a039081169116148061079d575060005433600160a060020a039081169116145b15156107a857600080fd5b600160a060020a038316151561083457600354600160a060020a031682156108fc0283604051600060405180830381858888f1935050505015156107eb57600080fd5b7f4ccddcd1a4e33721aee316370fb3e014294985be0755a68c88009b31e1dc4ae38383604051600160a060020a03909216825260208201526040908101905180910390a16108f8565b506003548290600160a060020a038083169163a9059cbb91168460405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561089157600080fd5b5af1151561089e57600080fd5b5050506040518051905015156108b357600080fd5b7f4ccddcd1a4e33721aee316370fb3e014294985be0755a68c88009b31e1dc4ae38383604051600160a060020a03909216825260208201526040908101905180910390a15b505050565b60005433600160a060020a0390811691161461091857600080fd5b60085481101561092757600080fd5b600955565b600254600160a060020a031681565b6000805433600160a060020a0390811691161461095757600080fd5b600160a060020a038216151561096c57600080fd5b5060008054600160a060020a03838116600160a060020a031980841691909117938490556001805490911690559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60005433600160a060020a039081169116146109ea57600080fd5b60055460ff1615156109fb57600080fd5b6005805460ff191690557f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b60055460009060ff1615610a4657600080fd5b67ffffffffffffffff85161515610a5c57600080fd5b67ffffffffffffffff84161515610a7257600080fd5b610a7c838361171e565b90507fc77b8feedf86922981aed41179f4a071d80467c7f17c5c13837269e363ac545b8585858460405167ffffffffffffffff9485168152929093166020830152600160a060020a03166040808301919091526060820192909252608001905180910390a15050505050565b60055460ff1681565b60005433600160a060020a03908116911614610b0c57600080fd5b610dac600160a060020a03821614610b2357600080fd5b60008054600160a060020a03199081169091556001805490911690557f94e8b32e01b9eedfddd778ffbd051a7718cdc14781702884561162dca6f74dbb60405160405180910390a150565b6006545b90565b60005433600160a060020a03908116911614610b9057600080fd5b60018054600160a060020a031916600160a060020a0383811691909117918290559081169033167f13a4b3bc0d5234dd3d87c9f1557d8faefa37986da62c36ba49309e2fb2c9aec460405160405180910390a350565b60005433600160a060020a03908116911614610c0157600080fd5b600160a060020a0382166000818152600b602052604090819020805460ff19168415151790557f801f568efbc3346a6ae3d0c3eb335a30d64e0d3cf08f1c39626d62cd5c82728190839051901515815260200160405180910390a25050565b60015460009033600160a060020a03908116911614610c7e57600080fd5b506000805460018054600160a060020a0319808416600160a060020a03838116919091179586905591169091559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b6000805433600160a060020a03908116911614610cfc57600080fd5b6006548210610d0a57600080fd5b6006805483908110610d1857fe5b60009182526020909120600890910201600481015490915060ff1615610d3d57600080fd5b6004810154610100900460ff1615610d5457600080fd5b60048101805460ff19166001179055817ffdf197ed54809861dafe0b4d391843652730ac67274c1e9e46db7687dccaa30160405160405180910390a25050565b60005433600160a060020a03908116911614610daf57600080fd5b60055460ff1615610dbf57600080fd5b6005805460ff191660011790557f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b60075460009033600160a060020a03908116911614610e1857600080fd5b6006548310610e2657600080fd5b670de0b6b3a7640000821115610e3b57600080fd5b6006805484908110610e4957fe5b90600052602060002090600802019050600a548282600701540111151515610e7057600080fd5b6004810154610100900460ff1615610e8757600080fd5b600481015460ff1615610e9957600080fd5b600781018054830190556003018054909101905550565b600160a060020a031660009081526004602052604090205460ff161590565b600054600160a060020a031681565b610eeb82826000806106bb565b5050565b60055460009060ff1615610f0257600080fd5b6006548210610f1057600080fd5b6006805483908110610f1e57fe5b6000918252602090912060046008909202019081015490915033600160a060020a03908116620100009092041614610f5557600080fd5b6002810154600160a060020a03166000908152600b602052604090205460ff161515610f8057600080fd5b8060030154610f8d6117ff565b1015610f9857600080fd5b600481015460ff1615610faa57600080fd5b6004810154610100900460ff1615610fc157600080fd5b60048101805461ff0019166101001790556005810154600160a060020a0316151561102d576004810154600682015462010000909104600160a060020a0316906108fc81150290604051600060405180830381858888f19350505050151561102857600080fd5b6110bb565b600581015460048201546006830154600160a060020a039283169263a9059cbb92620100009004169060405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561109957600080fd5b5af115156110a657600080fd5b5050506040518051905015156110bb57600080fd5b600481015460068201546005830154600160a060020a036201000090930483169285927f354f3c0c8efabe1a1a07cf222842b008ef284ac185e63bdf8245be8cd2d97f5192909116604051918252600160a060020a031660208201526040908101905180910390a35050565b600680548290811061113557fe5b9060005260206000209060080201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111e15780601f106111b6576101008083540402835291602001916111e1565b820191906000526020600020905b8154815290600101906020018083116111c457829003601f168201915b5050505060018301546002840154600385015460048601546005870154600688015460079098015496979496600160a060020a039485169650929460ff80841695610100850490911694620100009094048116939216918a565b600254600090819033600160a060020a039081169116148061126b575060005433600160a060020a039081169116145b151561127657600080fd5b600160a060020a03831660009081526004602052604090205460ff161561129c57600080fd5b600160a060020a038316151561132e57600354600160a060020a033081163193501682156108fc0283604051600060405180830381858888f1935050505015156112e557600080fd5b7fa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f28383604051600160a060020a03909216825260208201526040908101905180910390a16108f8565b5081600160a060020a0381166370a082313060405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b151561137e57600080fd5b5af1151561138b57600080fd5b5050506040518051600354909350600160a060020a03808416925063a9059cbb91168460405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b15156113f157600080fd5b5af115156113fe57600080fd5b50505060405180519050151561141357600080fd5b7fa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f28383604051600160a060020a03909216825260208201526040908101905180910390a1505050565b600754600160a060020a031681565b60005433600160a060020a0390811691161461148657600080fd5b60078054600160a060020a031916600160a060020a0392909216919091179055565b610eeb8282600080610a33565b60095481565b600154600160a060020a031681565b60025433600160a060020a03908116911614806114f5575060005433600160a060020a039081169116145b151561150057600080fd5b60028054600160a060020a031916600160a060020a0392909216919091179055565b600b6020526000908152604090205460ff1681565b60005433600160a060020a0390811691161461155257600080fd5b600a55565b60085481565b6005546000908190819060ff161561157457600080fd5b600160a060020a0333166000908152600b602052604090205460ff16151561159b57600080fd5b60068054925082906115b09060018301611803565b5060068054839081106115bf57fe5b60009182526020909120600890910201600281018054600160a060020a03191633600160a060020a03161790559050670de0b6b3a764000084111561160357600080fd5b60095484101561161e576009546116186117ff565b01611629565b836116276117ff565b015b600382015560048101805475ffffffffffffffffffffffffffffffffffffffff0000191662010000600160a060020a038a160217905560068101859055611671818b8b61182f565b5060018101889055600581018054600160a060020a031916600160a060020a038881169190911791829055600483015460068401546201000090910482169285927fd11935115aa93b9f1f616d0d7702f4593572daa610390123241b3785430281c49291168c604051928352600160a060020a0390911660208301526040808301919091526060909101905180910390a35098975050505050505050565b600354600160a060020a031681565b600160a060020a0382166000908152600c602052604081205460ff16151561174557600080fd5b5080600160a060020a038316151561175a5750345b6000811161176757600080fd5b600160a060020a038316156117f95782600160a060020a03166323b872dd33308460405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401602060405180830381600087803b15156117d757600080fd5b5af115156117e457600080fd5b5050506040518051905015156117f957600080fd5b92915050565b4290565b8154818355818115116108f8576008028160080283600052602060002091820191016108f891906118ad565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106118705782800160ff1982351617855561189d565b8280016001018555821561189d579182015b8281111561189d578235825591602001919060010190611882565b506118a992915061192d565b5090565b610b7291905b808211156118a95760006118c78282611947565b50600060018201819055600282018054600160a060020a03199081169091556003830182905560048301805475ffffffffffffffffffffffffffffffffffffffffffff1916905560058301805490911690556006820181905560078201556008016118b3565b610b7291905b808211156118a95760008155600101611933565b50805460018160011615610100020316600290046000825580601f1061196d575061198b565b601f01602090049060005260206000209081019061198b919061192d565b505600a165627a7a72305820cb45d5da542d800123ae090d58712c67dd5f493902e5ffdb7bb483bcc3a4313b0029",
            "sourceMap": "1245:5921:1:-;;;;;;;;;-1:-1:-1;;;1245:5921:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2458:33:4;;;;;;;;;;;;;;;;;;;;;;;;;;;5885:136:1;;;;;;;;;;-1:-1:-1;;;;;5885:136:1;;;;;;;;;;;4258:317;;-1:-1:-1;;;;;4258:317:1;;;;;;;;;;;;;;;;;6287:479;;;;;;;;;;-1:-1:-1;;;;;6287:479:1;;;;;;;10425:153:4;;;;;;;;;;;;;;1181:32:6;;;;;;;;;;;;;;;-1:-1:-1;;;;;1181:32:6;;;;;;;;;;;;;;2422:246:7;;;;;;;;;;-1:-1:-1;;;;;2422:246:7;;;;;912:102:3;;;;;;;;;;;;5585:294:1;;;;;;;;;;;-1:-1:-1;;;;;5585:294:1;;;;;;;268:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3062:182:7;;;;;;;;;;-1:-1:-1;;;;;3062:182:7;;;;;5221:114:4;;;;;;;;;;;;1585:185:7;;;;;;;;;;-1:-1:-1;;;;;1585:185:7;;;;;9706:192:4;;;;;;;;;;-1:-1:-1;;;;;9706:192:4;;;;;;;;;1882:242:7;;;;;;;;;;;;9148:312:4;;;;;;;;;;;;;;724:100:3;;;;;;;;;;;;8514:473:4;;;;;;;;;;;;;;;;3215:117:6;;;;;;;;;;-1:-1:-1;;;;;3215:117:6;;;;;638:20:7;;;;;;;;;;;;3669:143:1;;-1:-1:-1;;;;;3669:143:1;;;;;;;;;7346:902:4;;;;;;;;;;;;;;2319:35;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2319:35:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2319:35:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3540:611:6;;;;;;;;;;-1:-1:-1;;;;;3540:611:6;;;;;2361:28:4;;;;;;;;;;;;10035:122;;;;;;;;;;-1:-1:-1;;;;;10035:122:4;;;;;5021:118:1;;;;;;;;;;;;;2432:20:4;;;;;;;;;;;;664:32:7;;;;;;;;;;;;4520:158:6;;;;;;;;;;-1:-1:-1;;;;;4520:158:6;;;;;2611:48:4;;;;;;;;;;-1:-1:-1;;;;;2611:48:4;;;;;10842:145;;;;;;;;;;;;;;2395:31;;;;;;;;;;;;5914:1195;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5914:1195:4;;;;;;;;;;;;;;1219:37:6;;;;;;;;;;;;2458:33:4;;;;:::o;5885:136:1:-;446:6:3;;;;445:7;437:16;;;;;;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;-1:-1:-1;;;;;5982:21:1;;;;;;;;:14;:21;;;;;:32;;-1:-1:-1;;5982:32:1;;;;;;;;;;5885:136::o;4258:317::-;446:6:3;;4453:11:1;;446:6:3;;445:7;437:16;;;;;;-1:-1:-1;;;;;4398:10:1;;;;4390:19;;;;;;4427:15;;;;;4419:24;;;;;;4467:32;4484:5;4491:7;4467:16;:32::i;:::-;4453:46;;4514:54;4535:5;4542:10;4554:5;4561:6;4514:54;;-1:-1:-1;;;;;4514:54:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4258:317;;;;;:::o;6287:479::-;2431:17:6;;6617:11:1;;2417:10:6;-1:-1:-1;;;;;2417:31:6;;;2431:17;;2417:31;;2416:56;;-1:-1:-1;2466:5:6;;2452:10;-1:-1:-1;;;;;2452:19:6;;;2466:5;;2452:19;2416:56;2407:66;;;;;;;;-1:-1:-1;;;;;6423:11:1;;;6419:155;;;6450:22;;-1:-1:-1;;;;;6450:22:1;:40;;;;6482:7;6450:40;;;;;;;;;;;;;;;;;;;;;;;;;;6509:34;6527:6;6535:7;6509:34;;-1:-1:-1;;;;;6509:34:1;;;;;;;;;;;;;;;;;;;;6557:7;;6419:155;-1:-1:-1;6677:22:1;;6637:6;;-1:-1:-1;;;;;6662:14:1;;;;;;6677:22;6701:7;6662:47;;-1:-1:-1;;;6662:47:1;;;;;;-1:-1:-1;;;;;6662:47:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6654:56;;;;;;;;6725:34;6743:6;6751:7;6725:34;;-1:-1:-1;;;;;6725:34:1;;;;;;;;;;;;;;;;;;;;2483:1:6;6287:479:1;;;:::o;10425:153:4:-;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;10518:19:4;;10502:35;;;10494:44;;;;;;10548:8;:23;10425:153::o;1181:32:6:-;;;-1:-1:-1;;;;;1181:32:6;;:::o;2422:246:7:-;2529:16;1171:5;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;-1:-1:-1;;;;;2501:16:7;;;;2493:25;;;;;;-1:-1:-1;2548:5:7;;;-1:-1:-1;;;;;2563:17:7;;;-1:-1:-1;;;;;;2563:17:7;;;;;;;;;;;2548:5;2590:23;;;;;;;2548:5;;;;2655;2548;2624:37;;;;;;;;;;2422:246;;:::o;912:102:3:-;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;614:6:3;;;;606:15;;;;;;;;969:6;:14;;-1:-1:-1;;969:14:3;;;998:9;;;;;;;;;;912:102::o;5585:294:1:-;446:6:3;;5769:11:1;;446:6:3;;445:7;437:16;;;;;;5712:12:1;;;;;5704:21;;;;;;5743:15;;;;;5735:24;;;;;;5783:32;5800:5;5807:7;5783:16;:32::i;:::-;5769:46;;5830:42;5837:7;5846:10;5858:5;5865:6;5830:42;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5830:42:1;;;;;;;;;;;;;;;;;;;;;;;;;5585:294;;;;;:::o;268:26:3:-;;;;;;:::o;3062:182:7:-;1171:5;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;3144:5;-1:-1:-1;;;;;3136:13:7;;;3128:22;;;;;;3168:3;3160:11;;-1:-1:-1;;;;;;3160:11:7;;;;;;;3181:23;;;;;;;3214:18;;;;;;;;;;3062:182;:::o;5221:114:4:-;5303:18;:25;5221:114;;:::o;1585:185:7:-;1171:5;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;1666:17;:38;;-1:-1:-1;;;;;;1666:38:7;-1:-1:-1;;;;;1666:38:7;;;;;;;;;;;1745:17;;;;1733:10;1714:49;;;;;;;;;;;1585:185;:::o;9706:192:4:-;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;-1:-1:-1;;;;;9796:25:4;;;;;;:15;:25;;;;;;;:38;;-1:-1:-1;;9796:38:4;;;;;;;9849:42;;9796:38;;9849:42;;;;;;;;;;;;;;;9706:192;;:::o;1882:242:7:-;1948:17;;1977:16;;1934:10;-1:-1:-1;;;;;1934:31:7;;;1948:17;;1934:31;1926:40;;;;;;-1:-1:-1;1996:5:7;;;;2019:17;;-1:-1:-1;;;;;;2011:25:7;;;-1:-1:-1;;;;;2019:17:7;;;2011:25;;;;;;;;2046:23;;;;;1996:5;;;;2111;1996;2080:37;;;;;;;;;;1882:242;:::o;9148:312:4:-;9275:17;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;9238:18:4;:25;9225:38;;9217:47;;;;;;9295:18;:30;;9314:10;;9295:30;;;;;;;;;;;;;;;;;;;9346:10;;;;9295:30;;-1:-1:-1;9346:10:4;;9345:11;9337:20;;;;;;9376:6;;;;;;;;;9375:7;9367:16;;;;;;9394:10;;;:17;;-1:-1:-1;;9394:17:4;9407:4;9394:17;;;9442:10;9426:27;;;;;;;;;;9148:312;;:::o;724:100:3:-;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;446:6:3;;;;445:7;437:16;;;;;;782:6;:13;;-1:-1:-1;;782:13:3;791:4;782:13;;;810:7;;;;;;;;;;724:100::o;8514:473:4:-;3302:13;;8722:17;;3288:10;-1:-1:-1;;;;;3288:27:4;;;3302:13;;3288:27;3280:36;;;;;;8624:18;:25;8611:38;;8603:47;;;;;;8704:6;8694:16;;;8686:25;;;;;;8742:18;:30;;8761:10;;8742:30;;;;;;;;;;;;;;;;8722:50;;8824:21;;8814:6;8791:1;:20;;;:29;:54;;8783:63;;;;;;;;8865:6;;;;;;;;;8864:7;8856:16;;;;;;8891:10;;;;;;8890:11;8882:20;;;;;;8913;;;:30;;;;;;8953:17;;:27;;;;;;;-1:-1:-1;8514:473:4:o;3215:117:6:-;-1:-1:-1;;;;;3302:23:6;3278:4;3302:23;;;:15;:23;;;;;;;;3301:24;;3215:117::o;638:20:7:-;;;-1:-1:-1;;;;;638:20:7;;:::o;3669:143:1:-;3760:45;3781:5;3788:10;3800:1;3803;3760:20;:45::i;:::-;3669:143;;:::o;7346:902:4:-;446:6:3;;7566:17:4;;446:6:3;;445:7;437:16;;;;;;7529:18:4;:25;7516:38;;7508:47;;;;;;7586:18;:30;;7605:10;;7586:30;;;;;;;;;;;;;;7708:11;7586:30;;;;;7708:11;;;;7586:30;;-1:-1:-1;7694:10:4;-1:-1:-1;;;;;7694:25:4;;;7708:11;;;;;7694:25;7686:34;;;;;;7754:9;;;;-1:-1:-1;;;;;7754:9:4;7738:26;;;;:15;:26;;;;;;;;7730:35;;;;;;;;7797:1;:17;;;7783:10;:8;:10::i;:::-;:31;;7775:40;;;;;;7834:10;;;;;;7833:11;7825:20;;;;;;7864:6;;;;;;;;;7863:7;7855:16;;;;;;7923:6;;;:13;;-1:-1:-1;;7923:13:4;;;;;8012:7;;;;-1:-1:-1;;;;;8012:7:4;:12;8008:159;;;8040:11;;;;8061:8;;;;8040:11;;;;-1:-1:-1;;;;;8040:11:4;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8008:159;;;8115:7;;;;8133:11;;;;8146:8;;;;-1:-1:-1;;;;;8115:7:4;;;;8109:23;;8133:11;;;;;8109:46;;-1:-1:-1;;;8109:46:4;;;;;;-1:-1:-1;;;;;8109:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8101:55;;;;;;;;8210:11;;;;8223:8;;;;8233:7;;;;-1:-1:-1;;;;;8210:11:4;;;;;;;8198:10;;8182:59;;8223:8;;8233:7;8182:59;;;;;-1:-1:-1;;;;;8182:59:4;;;;;;;;;;;;;;;;7346:902;;:::o;2319:35::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2319:35:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2319:35:4;;;;-1:-1:-1;2319:35:4;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3540:611:6:-;2431:17;;3676:15;;;;2417:10;-1:-1:-1;;;;;2417:31:6;;;2431:17;;2417:31;;2416:56;;-1:-1:-1;2466:5:6;;2452:10;-1:-1:-1;;;;;2452:19:6;;;2466:5;;2452:19;2416:56;2407:66;;;;;;;;-1:-1:-1;;;;;3634:23:6;;;;;;:15;:23;;;;;;;;:30;3626:39;;;;;;-1:-1:-1;;;;;3739:13:6;;;3735:188;;;3804:22;;-1:-1:-1;;;;;3778:4:6;:12;;;;-1:-1:-1;3804:22:6;:40;;;;3778:12;3804:40;;;;;;;;;;;;;;;;;;;;;;;;;;3858:34;3876:6;3884:7;3858:34;;-1:-1:-1;;;;;3858:34:6;;;;;;;;;;;;;;;;;;;;3906:7;;3735:188;-1:-1:-1;3986:6:6;-1:-1:-1;;;;;4013:15:6;;;4029:4;4013:21;;-1:-1:-1;;;4013:21:6;;;;;;-1:-1:-1;;;;;4013:21:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4067:22;;4013:21;;-1:-1:-1;;;;;;4052:14:6;;;;-1:-1:-1;4052:14:6;;4067:22;4013:21;4052:47;;-1:-1:-1;;;4052:47:6;;;;;;-1:-1:-1;;;;;4052:47:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4044:56;;;;;;;;4110:34;4128:6;4136:7;4110:34;;-1:-1:-1;;;;;4110:34:6;;;;;;;;;;;;;;;;;;;;3540:611;;;:::o;2361:28:4:-;;;-1:-1:-1;;;;;2361:28:4;;:::o;10035:122::-;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;10117:13:4;:33;;-1:-1:-1;;;;;;10117:33:4;-1:-1:-1;;;;;10117:33:4;;;;;;;;;;10035:122::o;5021:118:1:-;5099:33;5106:7;5115:10;5127:1;5130;5099:6;:33::i;2432:20:4:-;;;;:::o;664:32:7:-;;;-1:-1:-1;;;;;664:32:7;;:::o;4520:158:6:-;2431:17;;2417:10;-1:-1:-1;;;;;2417:31:6;;;2431:17;;2417:31;;2416:56;;-1:-1:-1;2466:5:6;;2452:10;-1:-1:-1;;;;;2452:19:6;;;2466:5;;2452:19;2416:56;2407:66;;;;;;;;4630:17;:41;;-1:-1:-1;;;;;;4630:41:6;-1:-1:-1;;;;;4630:41:6;;;;;;;;;;4520:158::o;2611:48:4:-;;;;;;;;;;;;;;;:::o;10842:145::-;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;10934:21:4;:46;10842:145::o;2395:31::-;;;;:::o;5914:1195::-;446:6:3;;6129:4:4;;;;;;446:6:3;;445:7;437:16;;;;;;-1:-1:-1;;;;;6235:10:4;6219:27;;;;;:15;:27;;;;;;;;6211:36;;;;;;;;6274:18;:25;;;-1:-1:-1;6274:25:4;;6336:27;;;;;;:::i;:::-;-1:-1:-1;6453:18:4;:29;;6472:9;;6453:29;;;;;;;;;;;;;;;;;;;6492:9;;;:22;;-1:-1:-1;;;;;;6492:22:4;6504:10;-1:-1:-1;;;;;6492:22:4;;;;6453:29;-1:-1:-1;6581:6:4;6564:23;;;6556:32;;;;;;6717:8;;6700:13;:25;;:142;;6834:8;;6821:10;:8;:10::i;:::-;:21;6700:142;;;6773:13;6760:10;:8;:10::i;:::-;:26;6700:142;6680:17;;;:162;6852:11;;;:24;;-1:-1:-1;;6852:24:4;;-1:-1:-1;;;;;6852:24:4;;;;;;6886:8;;;:18;;;6914:14;6680:17;6923:5;;6914:14;:::i;:::-;-1:-1:-1;6938:11:4;;;:24;;;6972:7;;;:16;;-1:-1:-1;;;;;;6972:16:4;-1:-1:-1;;;;;6972:16:4;;;;;;;;;;;7032:11;;;;7045:8;;;;7032:11;;;;;;;7021:9;;7003:73;;7045:8;7055:7;6938:24;7003:73;;;;;-1:-1:-1;;;;;7003:73:4;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7093:9:4;5914:1195;-1:-1:-1;;;;;;;;5914:1195:4:o;1219:37:6:-;;;-1:-1:-1;;;;;1219:37:6;;:::o;6772:392:1:-;-1:-1:-1;;;;;6875:21:1;;6844:11;6875:21;;;:14;:21;;;;;;;;6867:30;;;;;;;;-1:-1:-1;6916:7:1;-1:-1:-1;;;;;6962:10:1;;;6958:59;;;-1:-1:-1;6997:9:1;6958:59;7044:1;7035:10;;7027:19;;;;;;-1:-1:-1;;;;;7061:10:1;;;7057:101;;7101:5;-1:-1:-1;;;;;7095:25:1;;7121:10;7133:4;7139:6;7095:51;;-1:-1:-1;;;7095:51:1;;;;;;-1:-1:-1;;;;;7095:51:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7087:60;;;;;;;;6772:392;;;;:::o;11030:76:4:-;11096:3;11030:76;:::o;1245:5921:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1245:5921:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1245:5921:1;;;-1:-1:-1;1245:5921:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1245:5921:1;;;;;;;;;;;;-1:-1:-1;;;;;;1245:5921:1;;;;;;;;;;;;;;;;;-1:-1:-1;;1245:5921:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o"
          },
          "methodIdentifiers": {
            "absoluteMinTimeLock()": "ea8a66c7",
            "acceptOwnership()": "79ba5097",
            "allowedSpenders(address)": "d8528af0",
            "authorizePayment(string,bytes32,address,address,uint256,uint256)": "f37b74ca",
            "authorizeSpender(address,bool)": "793c0fd4",
            "authorizedPayments(uint256)": "a0927a6a",
            "cancelPayment(uint256)": "8422927d",
            "changeHatchEscapeCaller(address)": "d836fbe8",
            "changeOwnership(address)": "2af4c31e",
            "collectAuthorizedPayment(uint256)": "92e4b8a4",
            "delayPayment(uint256,uint256)": "846a5dde",
            "donate(uint64,uint64)": "bde60ac9",
            "donate(uint64,uint64,address,uint256)": "4c4316c7",
            "donateAndCreateGiver(address,uint64)": "91f5c3a8",
            "donateAndCreateGiver(address,uint64,address,uint256)": "1870c10f",
            "escapeFunds(address,uint256)": "1b28591c",
            "escapeHatch(address)": "a142d608",
            "escapeHatchCaller()": "1f6eb6e7",
            "escapeHatchDestination()": "f5b61230",
            "isTokenEscapable(address)": "892db057",
            "maxSecurityGuardDelay()": "0b2e7423",
            "newOwnerCandidate()": "d091b550",
            "numberOfAuthorizedPayments()": "68b8c5a1",
            "owner()": "8da5cb5b",
            "pause()": "8456cb59",
            "paused()": "5c975abb",
            "proposeOwnership(address)": "710bf322",
            "removeOwnership(address)": "666a3427",
            "securityGuard()": "b2ca3ec4",
            "setMaxSecurityGuardDelay(uint256)": "da4793ac",
            "setSecurityGuard(address)": "bb2a51d1",
            "setTimelock(uint256)": "1e891c0a",
            "timeLock()": "d085835a",
            "unpause()": "3f4ba83a",
            "whitelistToken(address,bool)": "0ffb1d8b"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.21+commit.dfe3193c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"maxSecurityGuardDelay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"accepted\",\"type\":\"bool\"}],\"name\":\"whitelistToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"giver\",\"type\":\"address\"},{\"name\":\"receiverId\",\"type\":\"uint64\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"donateAndCreateGiver\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"escapeFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newTimeLock\",\"type\":\"uint256\"}],\"name\":\"setTimelock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"escapeHatchCaller\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"giverId\",\"type\":\"uint64\"},{\"name\":\"receiverId\",\"type\":\"uint64\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"donate\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dac\",\"type\":\"address\"}],\"name\":\"removeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numberOfAuthorizedPayments\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwnerCandidate\",\"type\":\"address\"}],\"name\":\"proposeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_authorize\",\"type\":\"bool\"}],\"name\":\"authorizeSpender\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_idPayment\",\"type\":\"uint256\"}],\"name\":\"cancelPayment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_idPayment\",\"type\":\"uint256\"},{\"name\":\"_delay\",\"type\":\"uint256\"}],\"name\":\"delayPayment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isTokenEscapable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"giver\",\"type\":\"address\"},{\"name\":\"receiverId\",\"type\":\"uint64\"}],\"name\":\"donateAndCreateGiver\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_idPayment\",\"type\":\"uint256\"}],\"name\":\"collectAuthorizedPayment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"authorizedPayments\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"reference\",\"type\":\"bytes32\"},{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"earliestPayTime\",\"type\":\"uint256\"},{\"name\":\"canceled\",\"type\":\"bool\"},{\"name\":\"paid\",\"type\":\"bool\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"securityGuardDelay\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"escapeHatch\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"securityGuard\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newSecurityGuard\",\"type\":\"address\"}],\"name\":\"setSecurityGuard\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"giverId\",\"type\":\"uint64\"},{\"name\":\"receiverId\",\"type\":\"uint64\"}],\"name\":\"donate\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"timeLock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwnerCandidate\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newEscapeHatchCaller\",\"type\":\"address\"}],\"name\":\"changeHatchEscapeCaller\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedSpenders\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maxSecurityGuardDelay\",\"type\":\"uint256\"}],\"name\":\"setMaxSecurityGuardDelay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"absoluteMinTimeLock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_reference\",\"type\":\"bytes32\"},{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_paymentDelay\",\"type\":\"uint256\"}],\"name\":\"authorizePayment\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"escapeHatchDestination\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_escapeHatchCaller\",\"type\":\"address\"},{\"name\":\"_escapeHatchDestination\",\"type\":\"address\"},{\"name\":\"_absoluteMinTimeLock\",\"type\":\"uint256\"},{\"name\":\"_timeLock\",\"type\":\"uint256\"},{\"name\":\"_securityGuard\",\"type\":\"address\"},{\"name\":\"_maxSecurityGuardDelay\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"giverId\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"receiverId\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Donate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"giver\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"receiverId\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DonateAndCreateGiver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EscapeFundsCalled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"idPayment\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"reference\",\"type\":\"bytes32\"}],\"name\":\"PaymentAuthorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"idPayment\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"}],\"name\":\"PaymentExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"idPayment\",\"type\":\"uint256\"}],\"name\":\"PaymentCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"authorized\",\"type\":\"bool\"}],\"name\":\"SpenderAuthorization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"}],\"name\":\"EscapeHatchBlackistedToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EscapeHatchCalled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"by\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"OwnershipRemoved\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"authorizePayment(string,bytes32,address,address,uint256,uint256)\":{\"params\":{\"_amount\":\"Amount to be paid in wei\",\"_name\":\"Brief description of the payment that is authorized\",\"_paymentDelay\":\"Number of miliseconds the payment is to be delayed, if  this value is below `timeLock` then the `timeLock` determines the delay\",\"_recipient\":\"Destination of the payment\",\"_reference\":\"External reference of the payment\"},\"return\":\"The Payment ID number for the new authorized payment\"},\"authorizeSpender(address,bool)\":{\"params\":{\"_authorize\":\"`true` if authorizing and `false` if unauthorizing\",\"_spender\":\"The address of the contract being authorized/unauthorized\"}},\"cancelPayment(uint256)\":{\"params\":{\"_idPayment\":\"ID of the payment to be canceled.\"}},\"changeHatchEscapeCaller(address)\":{\"params\":{\"_newEscapeHatchCaller\":\"The address of a trusted account or  contract to call `escapeHatch()` to send the value in this contract to  the `escapeHatchDestination`; it would be ideal that `escapeHatchCaller`  cannot move funds out of `escapeHatchDestination`\"}},\"changeOwnership(address)\":{\"details\":\"In this 2nd option for ownership transfer `changeOwnership()` can  be called and it will immediately assign ownership to the `newOwner`\",\"params\":{\"_newOwner\":\"The address of the new owner\"}},\"collectAuthorizedPayment(uint256)\":{\"params\":{\"_idPayment\":\"The payment ID to be executed\"}},\"delayPayment(uint256,uint256)\":{\"params\":{\"_delay\":\"The number of miliseconds to delay the payment\",\"_idPayment\":\"ID of the payment to be delayed\"}},\"escapeFunds(address,uint256)\":{\"params\":{\"_amount\":\"to transfer\",\"_token\":\"to transfer\"}},\"escapeHatch(address)\":{\"params\":{\"_token\":\"to transfer, use 0x0 for ether\"}},\"isTokenEscapable(address)\":{\"params\":{\"_token\":\"the token address being queried\"},\"return\":\"False if `_token` is in the blacklist and can't be taken out of  the contract via the `escapeHatch()`\"},\"numberOfAuthorizedPayments()\":{\"return\":\"The number of payments ever authorized even if they were canceled\"},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"proposeOwnership(address)\":{\"details\":\"In this 1st option for ownership transfer `proposeOwnership()` must  be called first by the current `owner` then `acceptOwnership()` must be  called by the `newOwnerCandidate`\",\"params\":{\"_newOwnerCandidate\":\"The address being proposed as the new owner\"}},\"removeOwnership(address)\":{\"details\":\"In this 3rd option for ownership transfer `removeOwnership()` can  be called and it will immediately assign ownership to the 0x0 address;  it requires a 0xdece be input as a parameter to prevent accidental use\",\"params\":{\"_dac\":\"`0xdac` has to be entered for this function to work\"}},\"setMaxSecurityGuardDelay(uint256)\":{\"params\":{\"_maxSecurityGuardDelay\":\"The new maximum delay in seconds that  `securityGuard` can delay the payment's execution in total\"}},\"setSecurityGuard(address)\":{\"params\":{\"_newSecurityGuard\":\"Address of the new security guard\"}},\"setTimelock(uint256)\":{\"params\":{\"_newTimeLock\":\"Sets the new minimum default `timeLock` in miliseconds;  pending payments maintain their `earliestPayTime`\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}}},\"userdoc\":{\"methods\":{\"acceptOwnership()\":{\"notice\":\"Can only be called by the `newOwnerCandidate`, accepts the  transfer of ownership\"},\"authorizePayment(string,bytes32,address,address,uint256,uint256)\":{\"notice\":\"/////only `allowedSpenders[]` Creates a new `Payment`\"},\"authorizeSpender(address,bool)\":{\"notice\":\"`onlyOwner` Adds a spender to the `allowedSpenders[]` white list\"},\"cancelPayment(uint256)\":{\"notice\":\"////`onlyOwner` Cancel a payment all together\"},\"changeHatchEscapeCaller(address)\":{\"notice\":\"Changes the address assigned to call `escapeHatch()`\"},\"changeOwnership(address)\":{\"notice\":\"`owner` can step down and assign some other address to this role\"},\"collectAuthorizedPayment(uint256)\":{\"notice\":\"only `allowedSpenders[]` The recipient of a payment calls this  function to send themselves the ether after the `earliestPayTime` has  expired\"},\"delayPayment(uint256,uint256)\":{\"notice\":\"//////`onlySecurityGuard` Delays a payment for a set number of miliseconds\"},\"escapeFunds(address,uint256)\":{\"notice\":\"Transfer tokens/eth to the escapeHatchDestination. Used as a safety mechanism to prevent the bridge from holding too much value before being thoroughly battle-tested.\"},\"escapeHatch(address)\":{\"notice\":\"The `escapeHatch()` should only be called as a last resort if a security issue is uncovered or something unexpected happened\"},\"isTokenEscapable(address)\":{\"notice\":\"Checks to see if `_token` is in the blacklist of tokens\"},\"numberOfAuthorizedPayments()\":{\"notice\":\"//////States the total number of authorized payments in this contract\"},\"proposeOwnership(address)\":{\"notice\":\"`onlyOwner` Proposes to transfer control of the contract to a  new owner\"},\"removeOwnership(address)\":{\"notice\":\"Decentralizes the contract, this operation cannot be undone \"},\"setMaxSecurityGuardDelay(uint256)\":{\"notice\":\"`onlyOwner` Changes the maximum number of miliseconds `securityGuard` can delay a payment\"},\"setSecurityGuard(address)\":{\"notice\":\"`onlyOwner` Sets the address of `securityGuard`\"},\"setTimelock(uint256)\":{\"notice\":\"`onlyOwner` Changes `timeLock`; the new `timeLock` cannot be  lower than `absoluteMinTimeLock`\"}}}},\"settings\":{\"compilationTarget\":{\"./contracts/GivethBridge.sol\":\"GivethBridge\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"./contracts/GivethBridge.sol\":{\"content\":\"pragma solidity ^0.4.21;\\n\\n/*\\n    Copyright 2017, RJ Ewing <perissology@protonmail.com>\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n*/\\n\\nimport \\\"giveth-common-contracts/contracts/ERC20.sol\\\";\\nimport \\\"./lib/Vault.sol\\\";\\n\\n// @notice NOTICE: It is not recommened to call this function outside of the giveth dapp (giveth.io)\\n// this function is bridged to a side chain. If for some reason the sidechain tx fails, the donation\\n// will end up in the givers control inside LiquidPledging contract. If you do not use the dapp, there\\n// will be no way of notifying the sender/giver that the giver has to take action (withdraw/donate) in\\n// the dapp\\ncontract GivethBridge is Vault {\\n\\n    mapping(address => bool) tokenWhitelist;\\n\\n    event Donate(uint64 giverId, uint64 receiverId, address token, uint amount);\\n    event DonateAndCreateGiver(address giver, uint64 receiverId, address token, uint amount);\\n    event EscapeFundsCalled(address token, uint amount);\\n\\n    //== constructor\\n\\n    /// @param _escapeHatchCaller The address of a trusted account or contract to\\n    ///  call `escapeHatch()` to send the ether in this contract to the\\n    ///  `escapeHatchDestination` it would be ideal if `escapeHatchCaller` cannot move\\n    ///  funds out of `escapeHatchDestination`\\n    /// @param _escapeHatchDestination The address of a safe location (usu a\\n    ///  Multisig) to send the ether held in this contract in an emergency\\n    /// @param _absoluteMinTimeLock The minimum number of seconds `timelock` can\\n    ///  be set to, if set to 0 the `owner` can remove the `timeLock` completely\\n    /// @param _timeLock Initial number of seconds that payments are delayed\\n    ///  after they are authorized (a security precaution)\\n    /// @param _securityGuard Address that will be able to delay the payments\\n    ///  beyond the initial timelock requirements; can be set to 0x0 to remove\\n    ///  the `securityGuard` functionality\\n    /// @param _maxSecurityGuardDelay The maximum number of seconds in total\\n    ///   that `securityGuard` can delay a payment so that the owner can cancel\\n    ///   the payment if needed\\n    function GivethBridge(\\n        address _escapeHatchCaller,\\n        address _escapeHatchDestination,\\n        uint _absoluteMinTimeLock,\\n        uint _timeLock,\\n        address _securityGuard,\\n        uint _maxSecurityGuardDelay\\n    ) Vault(\\n        _escapeHatchCaller,\\n        _escapeHatchDestination,\\n        _absoluteMinTimeLock,\\n        _timeLock,\\n        _securityGuard,\\n        _maxSecurityGuardDelay\\n    ) public\\n    {\\n        tokenWhitelist[0] = true; // enable eth transfers\\n    }\\n\\n    //== public methods\\n\\n    // @notice NOTICE: It is not recommened to call this function outside of the giveth dapp (giveth.io)\\n    // this function is bridged to a side chain. If for some reason the sidechain tx fails, the donation\\n    // will end up in the givers control inside LiquidPledging contract. If you do not use the dapp, there\\n    // will be no way of notifying the sender/giver that the giver has to take action (withdraw/donate) in\\n    // the dapp\\n    function donateAndCreateGiver(address giver, uint64 receiverId) payable external {\\n        donateAndCreateGiver(giver, receiverId, 0, 0);\\n    }\\n\\n    // @notice NOTICE: It is not recommened to call this function outside of the giveth dapp (giveth.io)\\n    // this function is bridged to a side chain. If for some reason the sidechain tx fails, the donation\\n    // will end up in the givers control inside LiquidPledging contract. If you do not use the dapp, there\\n    // will be no way of notifying the sender/giver that the giver has to take action (withdraw/donate) in\\n    // the dapp\\n    function donateAndCreateGiver(address giver, uint64 receiverId, address token, uint _amount) whenNotPaused payable public {\\n        require(giver != 0);\\n        require(receiverId != 0);\\n        uint amount = _receiveDonation(token, _amount);\\n        emit DonateAndCreateGiver(giver, receiverId, token, amount);\\n    }\\n\\n    // @notice NOTICE: It is not recommened to call this function outside of the giveth dapp (giveth.io)\\n    // this function is bridged to a side chain. If for some reason the sidechain tx fails, the donation\\n    // will end up in the givers control inside LiquidPledging contract. If you do not use the dapp, there\\n    // will be no way of notifying the sender/giver that the giver has to take action (withdraw/donate) in\\n    // the dapp\\n    function donate(uint64 giverId, uint64 receiverId) payable external {\\n        donate(giverId, receiverId, 0, 0);\\n    }\\n\\n    // @notice NOTICE: It is not recommened to call this function outside of the giveth dapp (giveth.io)\\n    // this function is bridged to a side chain. If for some reason the sidechain tx fails, the donation\\n    // will end up in the givers control inside LiquidPledging contract. If you do not use the dapp, there\\n    // will be no way of notifying the sender/giver that the giver has to take action (withdraw/donate) in\\n    // the dapp\\n    function donate(uint64 giverId, uint64 receiverId, address token, uint _amount) whenNotPaused payable public {\\n        require(giverId != 0);\\n        require(receiverId != 0);\\n        uint amount = _receiveDonation(token, _amount);\\n        emit Donate(giverId, receiverId, token, amount);\\n    }\\n\\n    function whitelistToken(address token, bool accepted) whenNotPaused onlyOwner external {\\n        tokenWhitelist[token] = accepted;\\n    }\\n\\n    /// Transfer tokens/eth to the escapeHatchDestination.\\n    /// Used as a safety mechanism to prevent the bridge from holding too much value\\n    /// before being thoroughly battle-tested.\\n    /// @param _token to transfer\\n    /// @param _amount to transfer\\n    function escapeFunds(address _token, uint _amount) external onlyEscapeHatchCallerOrOwner {\\n        /// @dev Logic for ether\\n        if (_token == 0) {\\n            escapeHatchDestination.transfer(_amount);\\n            emit EscapeFundsCalled(_token, _amount);\\n            return;\\n        }\\n        /// @dev Logic for tokens\\n        ERC20 token = ERC20(_token);\\n        require(token.transfer(escapeHatchDestination, _amount));\\n        emit EscapeFundsCalled(_token, _amount);\\n    }\\n\\n    function _receiveDonation(address token, uint _amount) internal returns(uint amount) {\\n        require(tokenWhitelist[token]);\\n        amount = _amount;\\n\\n        // eth donation\\n        if (token == 0) {\\n            amount = msg.value;\\n        }\\n\\n        require(amount > 0);\\n\\n        if (token != 0) {\\n            require(ERC20(token).transferFrom(msg.sender, this, amount));\\n        }\\n    }\\n}\",\"keccak256\":\"0xb497f47a2ce2d4ea1f85a3239671e844e4a70551e97329f48e1fb7fecb570c83\"},\"./contracts/lib/Pausable.sol\":{\"content\":\"pragma solidity ^0.4.21;\\n\\nimport \\\"giveth-common-contracts/contracts/Owned.sol\\\";\\n\\n/**\\n * @title Pausable\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\n */\\ncontract Pausable is Owned {\\n    event Pause();\\n    event Unpause();\\n\\n    bool public paused = false;\\n\\n    /**\\n    * @dev Modifier to make a function callable only when the contract is not paused.\\n    */\\n    modifier whenNotPaused() {\\n        require(!paused);\\n        _;\\n    }\\n\\n    /**\\n    * @dev Modifier to make a function callable only when the contract is paused.\\n    */\\n    modifier whenPaused() {\\n        require(paused);\\n        _;\\n    }\\n\\n    /**\\n    * @dev called by the owner to pause, triggers stopped state\\n    */\\n    function pause() onlyOwner whenNotPaused public {\\n        paused = true;\\n        emit Pause();\\n    }\\n\\n    /**\\n    * @dev called by the owner to unpause, returns to normal state\\n    */\\n    function unpause() onlyOwner whenPaused public {\\n        paused = false;\\n        emit Unpause();\\n    }\\n}\",\"keccak256\":\"0xd134809350f024c16096d995915c6a348d770e1ec633723419f4f3acbd1e4b46\"},\"./contracts/lib/Vault.sol\":{\"content\":\"pragma solidity ^0.4.21;\\n\\n/*\\n    Copyright 2016, Jordi Baylina, RJ Ewing\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n\\n/// @title Vault Contract\\n/// @author Jordi Baylina, RJ Ewing\\n/// @notice This contract holds funds for Campaigns and automates payments. For\\n///  this iteration the funds will come straight from the Giveth Multisig as a\\n///  safety precaution, but once fully tested and optimized this contract will\\n///  be a safe place to store funds equipped with optional variable time delays\\n///  to allow for an optional escape hatch\\n\\nimport \\\"giveth-common-contracts/contracts/Escapable.sol\\\";\\nimport \\\"./Pausable.sol\\\";\\n\\n/// @dev `Vault` is a higher level contract built off of the `Escapable`\\n///  contract that holds funds for Campaigns and automates payments.\\ncontract Vault is Escapable, Pausable {\\n\\n    /// @dev `Payment` is a public structure that describes the details of\\n    ///  each payment making it easy to track the movement of funds\\n    ///  transparently\\n    struct Payment {\\n        string name;     // What is the purpose of this payment\\n        bytes32 reference;  // Reference of the payment.\\n        address spender;        // Who is sending the funds\\n        uint earliestPayTime;   // The earliest a payment can be made (Unix Time)\\n        bool canceled;         // If True then the payment has been canceled\\n        bool paid;              // If True then the payment has been paid\\n        address recipient;      // Who is receiving the funds\\n        address token;          // Token this payment represents\\n        uint amount;            // The amount of wei sent in the payment\\n        uint securityGuardDelay;// The miliseconds `securityGuard` can delay payment\\n    }\\n\\n    Payment[] public authorizedPayments;\\n\\n    address public securityGuard;\\n    uint public absoluteMinTimeLock;\\n    uint public timeLock;\\n    uint public maxSecurityGuardDelay;\\n\\n    /// @dev The white list of approved addresses allowed to set up && receive\\n    ///  payments from this vault\\n    mapping (address => bool) public allowedSpenders;\\n\\n    // @dev Events to make the payment movements easy to find on the blockchain\\n    event PaymentAuthorized(uint indexed idPayment, address indexed recipient, uint amount, address token, bytes32 reference);\\n    event PaymentExecuted(uint indexed idPayment, address indexed recipient, uint amount, address token);\\n    event PaymentCanceled(uint indexed idPayment);\\n    event SpenderAuthorization(address indexed spender, bool authorized);\\n\\n    /// @dev The address assigned the role of `securityGuard` is the only\\n    ///  addresses that can call a function with this modifier\\n    modifier onlySecurityGuard { \\n        require(msg.sender == securityGuard);\\n        _;\\n    }\\n\\n    /// @notice The Constructor creates the Vault on the blockchain\\n    /// @param _escapeHatchCaller The address of a trusted account or contract to\\n    ///  call `escapeHatch()` to send the ether in this contract to the\\n    ///  `escapeHatchDestination` it would be ideal if `escapeHatchCaller` cannot move\\n    ///  funds out of `escapeHatchDestination`\\n    /// @param _escapeHatchDestination The address of a safe location (usu a\\n    ///  Multisig) to send the ether held in this contract in an emergency\\n    /// @param _absoluteMinTimeLock The minimum number of seconds `timelock` can\\n    ///  be set to, if set to 0 the `owner` can remove the `timeLock` completely\\n    /// @param _timeLock Initial number of seconds that payments are delayed\\n    ///  after they are authorized (a security precaution)\\n    /// @param _securityGuard Address that will be able to delay the payments\\n    ///  beyond the initial timelock requirements; can be set to 0x0 to remove\\n    ///  the `securityGuard` functionality\\n    /// @param _maxSecurityGuardDelay The maximum number of seconds in total\\n    ///   that `securityGuard` can delay a payment so that the owner can cancel\\n    ///   the payment if needed\\n    function Vault(\\n        address _escapeHatchCaller,\\n        address _escapeHatchDestination,\\n        uint _absoluteMinTimeLock,\\n        uint _timeLock,\\n        address _securityGuard,\\n        uint _maxSecurityGuardDelay\\n    ) Escapable(_escapeHatchCaller, _escapeHatchDestination) public\\n    {\\n        absoluteMinTimeLock = _absoluteMinTimeLock;\\n        timeLock = _timeLock;\\n        securityGuard = _securityGuard;\\n        maxSecurityGuardDelay = _maxSecurityGuardDelay;\\n    }\\n\\n/////////\\n// Helper functions\\n/////////\\n\\n    /// @notice States the total number of authorized payments in this contract\\n    /// @return The number of payments ever authorized even if they were canceled\\n    function numberOfAuthorizedPayments() public view returns (uint) {\\n        return authorizedPayments.length;\\n    }\\n\\n////////\\n// Spender Interface\\n////////\\n\\n    /// @notice only `allowedSpenders[]` Creates a new `Payment`\\n    /// @param _name Brief description of the payment that is authorized\\n    /// @param _reference External reference of the payment\\n    /// @param _recipient Destination of the payment\\n    /// @param _amount Amount to be paid in wei\\n    /// @param _paymentDelay Number of miliseconds the payment is to be delayed, if\\n    ///  this value is below `timeLock` then the `timeLock` determines the delay\\n    /// @return The Payment ID number for the new authorized payment\\n    function authorizePayment(\\n        string _name,\\n        bytes32 _reference,\\n        address _recipient,\\n        address _token,\\n        uint _amount,\\n        uint _paymentDelay\\n    ) whenNotPaused external returns(uint) {\\n\\n        // Fail if you arent on the `allowedSpenders` white list\\n        require(allowedSpenders[msg.sender]);\\n        uint idPayment = authorizedPayments.length;       // Unique Payment ID\\n        authorizedPayments.length++;\\n\\n        // The following lines fill out the payment struct\\n        Payment storage p = authorizedPayments[idPayment];\\n        p.spender = msg.sender;\\n\\n        // Overflow protection\\n        require(_paymentDelay <= 10**18);\\n\\n        // Determines the earliest the recipient can receive payment (Unix time)\\n        p.earliestPayTime = _paymentDelay >= timeLock ?\\n                                _getTime() + _paymentDelay :\\n                                _getTime() + timeLock;\\n        p.recipient = _recipient;\\n        p.amount = _amount;\\n        p.name = _name;\\n        p.reference = _reference;\\n        p.token = _token;\\n        emit PaymentAuthorized(idPayment, p.recipient, p.amount, p.token, p.reference);\\n        return idPayment;\\n    }\\n\\n    /// @notice only `allowedSpenders[]` The recipient of a payment calls this\\n    ///  function to send themselves the ether after the `earliestPayTime` has\\n    ///  expired\\n    /// @param _idPayment The payment ID to be executed\\n    function collectAuthorizedPayment(uint _idPayment) whenNotPaused external {\\n\\n        // Check that the `_idPayment` has been added to the payments struct\\n        require(_idPayment < authorizedPayments.length);\\n\\n        Payment storage p = authorizedPayments[_idPayment];\\n\\n        // Checking for reasons not to execute the payment\\n        require(msg.sender == p.recipient);\\n        require(allowedSpenders[p.spender]);\\n        require(_getTime() >= p.earliestPayTime);\\n        require(!p.canceled);\\n        require(!p.paid);\\n        // if (this.balance < p.amount);\\n\\n        p.paid = true; // Set the payment to being paid\\n\\n        // Make the payment\\n        if (p.token == 0) {\\n            p.recipient.transfer(p.amount);\\n        } else {\\n            require(ERC20(p.token).transfer(p.recipient, p.amount));\\n        }\\n\\n        emit PaymentExecuted(_idPayment, p.recipient, p.amount, p.token);\\n    }\\n\\n/////////\\n// SecurityGuard Interface\\n/////////\\n\\n    /// @notice `onlySecurityGuard` Delays a payment for a set number of miliseconds\\n    /// @param _idPayment ID of the payment to be delayed\\n    /// @param _delay The number of miliseconds to delay the payment\\n    function delayPayment(uint _idPayment, uint _delay) onlySecurityGuard external {\\n        require(_idPayment < authorizedPayments.length);\\n\\n        // Overflow test\\n        require(_delay <= 10**18);\\n\\n        Payment storage p = authorizedPayments[_idPayment];\\n\\n        require(p.securityGuardDelay + _delay <= maxSecurityGuardDelay);\\n        require(!p.paid);\\n        require(!p.canceled);\\n\\n        p.securityGuardDelay += _delay;\\n        p.earliestPayTime += _delay;\\n    }\\n\\n////////\\n// Owner Interface\\n///////\\n\\n    /// @notice `onlyOwner` Cancel a payment all together\\n    /// @param _idPayment ID of the payment to be canceled.\\n    function cancelPayment(uint _idPayment) onlyOwner external {\\n        require(_idPayment < authorizedPayments.length);\\n\\n        Payment storage p = authorizedPayments[_idPayment];\\n\\n\\n        require(!p.canceled);\\n        require(!p.paid);\\n\\n        p.canceled = true;\\n        emit PaymentCanceled(_idPayment);\\n    }\\n\\n    /// @notice `onlyOwner` Adds a spender to the `allowedSpenders[]` white list\\n    /// @param _spender The address of the contract being authorized/unauthorized\\n    /// @param _authorize `true` if authorizing and `false` if unauthorizing\\n    function authorizeSpender(address _spender, bool _authorize) onlyOwner external {\\n        allowedSpenders[_spender] = _authorize;\\n        emit SpenderAuthorization(_spender, _authorize);\\n    }\\n\\n    /// @notice `onlyOwner` Sets the address of `securityGuard`\\n    /// @param _newSecurityGuard Address of the new security guard\\n    function setSecurityGuard(address _newSecurityGuard) onlyOwner external {\\n        securityGuard = _newSecurityGuard;\\n    }\\n\\n    /// @notice `onlyOwner` Changes `timeLock`; the new `timeLock` cannot be\\n    ///  lower than `absoluteMinTimeLock`\\n    /// @param _newTimeLock Sets the new minimum default `timeLock` in miliseconds;\\n    ///  pending payments maintain their `earliestPayTime`\\n    function setTimelock(uint _newTimeLock) onlyOwner external {\\n        require(_newTimeLock >= absoluteMinTimeLock);\\n        timeLock = _newTimeLock;\\n    }\\n\\n    /// @notice `onlyOwner` Changes the maximum number of miliseconds\\n    /// `securityGuard` can delay a payment\\n    /// @param _maxSecurityGuardDelay The new maximum delay in seconds that\\n    ///  `securityGuard` can delay the payment's execution in total\\n    function setMaxSecurityGuardDelay(uint _maxSecurityGuardDelay) onlyOwner external {\\n        maxSecurityGuardDelay = _maxSecurityGuardDelay;\\n    }\\n\\n    // for overidding during testing\\n    function _getTime() internal view returns (uint) {\\n        return now;\\n    }\\n}\",\"keccak256\":\"0xe1c8b2120faa1df5e2765f0591db0040f0f5259180f62b695686c7012812dfc5\"},\"giveth-common-contracts/contracts/ERC20.sol\":{\"content\":\"pragma solidity ^0.4.19;\\n\\n\\n/**\\n * @title ERC20\\n * @dev A standard interface for tokens.\\n * @dev https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\\n */\\ncontract ERC20 {\\n  \\n    /// @dev Returns the total token supply\\n    function totalSupply() public constant returns (uint256 supply);\\n\\n    /// @dev Returns the account balance of the account with address _owner\\n    function balanceOf(address _owner) public constant returns (uint256 balance);\\n\\n    /// @dev Transfers _value number of tokens to address _to\\n    function transfer(address _to, uint256 _value) public returns (bool success);\\n\\n    /// @dev Transfers _value number of tokens from address _from to address _to\\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\\n\\n    /// @dev Allows _spender to withdraw from the msg.sender's account up to the _value amount\\n    function approve(address _spender, uint256 _value) public returns (bool success);\\n\\n    /// @dev Returns the amount which _spender is still allowed to withdraw from _owner\\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining);\\n\\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\\n\\n}\\n\",\"keccak256\":\"0xe58902b5bdf9f918c6ec8ee4da44bf87faf225098fae84671ab07b46af427338\"},\"giveth-common-contracts/contracts/Escapable.sol\":{\"content\":\"pragma solidity ^0.4.19;\\n/*\\n    Copyright 2016, Jordi Baylina\\n    Contributor: Adrià Massanet <adria@codecontext.io>\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n*/\\n\\nimport \\\"./Owned.sol\\\";\\nimport \\\"./ERC20.sol\\\";\\n\\n\\n/// @dev `Escapable` is a base level contract built off of the `Owned`\\n///  contract; it creates an escape hatch function that can be called in an\\n///  emergency that will allow designated addresses to send any ether or tokens\\n///  held in the contract to an `escapeHatchDestination` as long as they were\\n///  not blacklisted\\ncontract Escapable is Owned {\\n    address public escapeHatchCaller;\\n    address public escapeHatchDestination;\\n    mapping (address=>bool) private escapeBlacklist; // Token contract addresses\\n\\n    /// @notice The Constructor assigns the `escapeHatchDestination` and the\\n    ///  `escapeHatchCaller`\\n    /// @param _escapeHatchCaller The address of a trusted account or contract\\n    ///  to call `escapeHatch()` to send the ether in this contract to the\\n    ///  `escapeHatchDestination` it would be ideal that `escapeHatchCaller`\\n    ///  cannot move funds out of `escapeHatchDestination`\\n    /// @param _escapeHatchDestination The address of a safe location (usu a\\n    ///  Multisig) to send the ether held in this contract; if a neutral address\\n    ///  is required, the WHG Multisig is an option:\\n    ///  0x8Ff920020c8AD673661c8117f2855C384758C572 \\n    function Escapable(address _escapeHatchCaller, address _escapeHatchDestination) public {\\n        escapeHatchCaller = _escapeHatchCaller;\\n        escapeHatchDestination = _escapeHatchDestination;\\n    }\\n\\n    /// @dev The addresses preassigned as `escapeHatchCaller` or `owner`\\n    ///  are the only addresses that can call a function with this modifier\\n    modifier onlyEscapeHatchCallerOrOwner {\\n        require ((msg.sender == escapeHatchCaller)||(msg.sender == owner));\\n        _;\\n    }\\n\\n    /// @notice Creates the blacklist of tokens that are not able to be taken\\n    ///  out of the contract; can only be done at the deployment, and the logic\\n    ///  to add to the blacklist will be in the constructor of a child contract\\n    /// @param _token the token contract address that is to be blacklisted \\n    function blacklistEscapeToken(address _token) internal {\\n        escapeBlacklist[_token] = true;\\n        EscapeHatchBlackistedToken(_token);\\n    }\\n\\n    /// @notice Checks to see if `_token` is in the blacklist of tokens\\n    /// @param _token the token address being queried\\n    /// @return False if `_token` is in the blacklist and can't be taken out of\\n    ///  the contract via the `escapeHatch()`\\n    function isTokenEscapable(address _token) view public returns (bool) {\\n        return !escapeBlacklist[_token];\\n    }\\n\\n    /// @notice The `escapeHatch()` should only be called as a last resort if a\\n    /// security issue is uncovered or something unexpected happened\\n    /// @param _token to transfer, use 0x0 for ether\\n    function escapeHatch(address _token) public onlyEscapeHatchCallerOrOwner {   \\n        require(escapeBlacklist[_token]==false);\\n\\n        uint256 balance;\\n\\n        /// @dev Logic for ether\\n        if (_token == 0x0) {\\n            balance = this.balance;\\n            escapeHatchDestination.transfer(balance);\\n            EscapeHatchCalled(_token, balance);\\n            return;\\n        }\\n        /// @dev Logic for tokens\\n        ERC20 token = ERC20(_token);\\n        balance = token.balanceOf(this);\\n        require(token.transfer(escapeHatchDestination, balance));\\n        EscapeHatchCalled(_token, balance);\\n    }\\n\\n    /// @notice Changes the address assigned to call `escapeHatch()`\\n    /// @param _newEscapeHatchCaller The address of a trusted account or\\n    ///  contract to call `escapeHatch()` to send the value in this contract to\\n    ///  the `escapeHatchDestination`; it would be ideal that `escapeHatchCaller`\\n    ///  cannot move funds out of `escapeHatchDestination`\\n    function changeHatchEscapeCaller(address _newEscapeHatchCaller) public onlyEscapeHatchCallerOrOwner {\\n        escapeHatchCaller = _newEscapeHatchCaller;\\n    }\\n\\n    event EscapeHatchBlackistedToken(address token);\\n    event EscapeHatchCalled(address token, uint amount);\\n}\\n\",\"keccak256\":\"0xd5d7b1a916841b21cfdee2bc9de4a178820421252b0c764070d78e846cd4511d\"},\"giveth-common-contracts/contracts/Owned.sol\":{\"content\":\"pragma solidity ^0.4.19;\\n\\n\\n/// @title Owned\\n/// @author Adrià Massanet <adria@codecontext.io>\\n/// @notice The Owned contract has an owner address, and provides basic \\n///  authorization control functions, this simplifies & the implementation of\\n///  user permissions; this contract has three work flows for a change in\\n///  ownership, the first requires the new owner to validate that they have the\\n///  ability to accept ownership, the second allows the ownership to be\\n///  directly transfered without requiring acceptance, and the third allows for\\n///  the ownership to be removed to allow for decentralization \\ncontract Owned {\\n\\n    address public owner;\\n    address public newOwnerCandidate;\\n\\n    event OwnershipRequested(address indexed by, address indexed to);\\n    event OwnershipTransferred(address indexed from, address indexed to);\\n    event OwnershipRemoved();\\n\\n    /// @dev The constructor sets the `msg.sender` as the`owner` of the contract\\n    function Owned() public {\\n        owner = msg.sender;\\n    }\\n\\n    /// @dev `owner` is the only address that can call a function with this\\n    /// modifier\\n    modifier onlyOwner() {\\n        require (msg.sender == owner);\\n        _;\\n    }\\n    \\n    /// @dev In this 1st option for ownership transfer `proposeOwnership()` must\\n    ///  be called first by the current `owner` then `acceptOwnership()` must be\\n    ///  called by the `newOwnerCandidate`\\n    /// @notice `onlyOwner` Proposes to transfer control of the contract to a\\n    ///  new owner\\n    /// @param _newOwnerCandidate The address being proposed as the new owner\\n    function proposeOwnership(address _newOwnerCandidate) public onlyOwner {\\n        newOwnerCandidate = _newOwnerCandidate;\\n        OwnershipRequested(msg.sender, newOwnerCandidate);\\n    }\\n\\n    /// @notice Can only be called by the `newOwnerCandidate`, accepts the\\n    ///  transfer of ownership\\n    function acceptOwnership() public {\\n        require(msg.sender == newOwnerCandidate);\\n\\n        address oldOwner = owner;\\n        owner = newOwnerCandidate;\\n        newOwnerCandidate = 0x0;\\n\\n        OwnershipTransferred(oldOwner, owner);\\n    }\\n\\n    /// @dev In this 2nd option for ownership transfer `changeOwnership()` can\\n    ///  be called and it will immediately assign ownership to the `newOwner`\\n    /// @notice `owner` can step down and assign some other address to this role\\n    /// @param _newOwner The address of the new owner\\n    function changeOwnership(address _newOwner) public onlyOwner {\\n        require(_newOwner != 0x0);\\n\\n        address oldOwner = owner;\\n        owner = _newOwner;\\n        newOwnerCandidate = 0x0;\\n\\n        OwnershipTransferred(oldOwner, owner);\\n    }\\n\\n    /// @dev In this 3rd option for ownership transfer `removeOwnership()` can\\n    ///  be called and it will immediately assign ownership to the 0x0 address;\\n    ///  it requires a 0xdece be input as a parameter to prevent accidental use\\n    /// @notice Decentralizes the contract, this operation cannot be undone \\n    /// @param _dac `0xdac` has to be entered for this function to work\\n    function removeOwnership(address _dac) public onlyOwner {\\n        require(_dac == 0xdac);\\n        owner = 0x0;\\n        newOwnerCandidate = 0x0;\\n        OwnershipRemoved();     \\n    }\\n} \\n\",\"keccak256\":\"0xc7d1401775fb1b41187de281757de68718fe27ba2660ba4bb194436aab7d0213\"}},\"version\":1}"
      }
    },
    "./contracts/GivethBridgeMock.sol": {
      "GivethBridgeMock": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "maxSecurityGuardDelay",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "token",
                "type": "address"
              },
              {
                "name": "accepted",
                "type": "bool"
              }
            ],
            "name": "whitelistToken",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "giver",
                "type": "address"
              },
              {
                "name": "receiverId",
                "type": "uint64"
              },
              {
                "name": "token",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "donateAndCreateGiver",
            "outputs": [],
            "payable": true,
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_token",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "escapeFunds",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newTimeLock",
                "type": "uint256"
              }
            ],
            "name": "setTimelock",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "escapeHatchCaller",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newOwner",
                "type": "address"
              }
            ],
            "name": "changeOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "unpause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "giverId",
                "type": "uint64"
              },
              {
                "name": "receiverId",
                "type": "uint64"
              },
              {
                "name": "token",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "donate",
            "outputs": [],
            "payable": true,
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "paused",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_dac",
                "type": "address"
              }
            ],
            "name": "removeOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "numberOfAuthorizedPayments",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newOwnerCandidate",
                "type": "address"
              }
            ],
            "name": "proposeOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_authorize",
                "type": "bool"
              }
            ],
            "name": "authorizeSpender",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "acceptOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_idPayment",
                "type": "uint256"
              }
            ],
            "name": "cancelPayment",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "pause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_idPayment",
                "type": "uint256"
              },
              {
                "name": "_delay",
                "type": "uint256"
              }
            ],
            "name": "delayPayment",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_token",
                "type": "address"
              }
            ],
            "name": "isTokenEscapable",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "giver",
                "type": "address"
              },
              {
                "name": "receiverId",
                "type": "uint64"
              }
            ],
            "name": "donateAndCreateGiver",
            "outputs": [],
            "payable": true,
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_idPayment",
                "type": "uint256"
              }
            ],
            "name": "collectAuthorizedPayment",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "mock_time",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "name": "authorizedPayments",
            "outputs": [
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "reference",
                "type": "bytes32"
              },
              {
                "name": "spender",
                "type": "address"
              },
              {
                "name": "earliestPayTime",
                "type": "uint256"
              },
              {
                "name": "canceled",
                "type": "bool"
              },
              {
                "name": "paid",
                "type": "bool"
              },
              {
                "name": "recipient",
                "type": "address"
              },
              {
                "name": "token",
                "type": "address"
              },
              {
                "name": "amount",
                "type": "uint256"
              },
              {
                "name": "securityGuardDelay",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_token",
                "type": "address"
              }
            ],
            "name": "escapeHatch",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_t",
                "type": "uint256"
              }
            ],
            "name": "setMockedTime",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "securityGuard",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newSecurityGuard",
                "type": "address"
              }
            ],
            "name": "setSecurityGuard",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "giverId",
                "type": "uint64"
              },
              {
                "name": "receiverId",
                "type": "uint64"
              }
            ],
            "name": "donate",
            "outputs": [],
            "payable": true,
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "timeLock",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "newOwnerCandidate",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newEscapeHatchCaller",
                "type": "address"
              }
            ],
            "name": "changeHatchEscapeCaller",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "name": "allowedSpenders",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_maxSecurityGuardDelay",
                "type": "uint256"
              }
            ],
            "name": "setMaxSecurityGuardDelay",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "absoluteMinTimeLock",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_name",
                "type": "string"
              },
              {
                "name": "_reference",
                "type": "bytes32"
              },
              {
                "name": "_recipient",
                "type": "address"
              },
              {
                "name": "_token",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              },
              {
                "name": "_paymentDelay",
                "type": "uint256"
              }
            ],
            "name": "authorizePayment",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "escapeHatchDestination",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "name": "_escapeHatchCaller",
                "type": "address"
              },
              {
                "name": "_escapeHatchDestination",
                "type": "address"
              },
              {
                "name": "_absoluteMinTimeLock",
                "type": "uint256"
              },
              {
                "name": "_timeLock",
                "type": "uint256"
              },
              {
                "name": "_securityGuard",
                "type": "address"
              },
              {
                "name": "_maxSecurityGuardDelay",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "giverId",
                "type": "uint64"
              },
              {
                "indexed": false,
                "name": "receiverId",
                "type": "uint64"
              },
              {
                "indexed": false,
                "name": "token",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "Donate",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "giver",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "receiverId",
                "type": "uint64"
              },
              {
                "indexed": false,
                "name": "token",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "DonateAndCreateGiver",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "token",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "EscapeFundsCalled",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "idPayment",
                "type": "uint256"
              },
              {
                "indexed": true,
                "name": "recipient",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "amount",
                "type": "uint256"
              },
              {
                "indexed": false,
                "name": "token",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "reference",
                "type": "bytes32"
              }
            ],
            "name": "PaymentAuthorized",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "idPayment",
                "type": "uint256"
              },
              {
                "indexed": true,
                "name": "recipient",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "amount",
                "type": "uint256"
              },
              {
                "indexed": false,
                "name": "token",
                "type": "address"
              }
            ],
            "name": "PaymentExecuted",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "idPayment",
                "type": "uint256"
              }
            ],
            "name": "PaymentCanceled",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "authorized",
                "type": "bool"
              }
            ],
            "name": "SpenderAuthorization",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "Pause",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "Unpause",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "token",
                "type": "address"
              }
            ],
            "name": "EscapeHatchBlackistedToken",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "token",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "EscapeHatchCalled",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "by",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              }
            ],
            "name": "OwnershipRequested",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "OwnershipRemoved",
            "type": "event"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "60606040526005805460ff19169055341561001957600080fd5b60405160c080611afe83398101604052808051919060200180519190602001805191906020018051919060200180519190602001805160008054600160a060020a03338116600160a060020a0319928316178355600280549b82169b83169b909b17909a5560038054998b1699821699909917909855600896909655600994909455505060078054959091169490931693909317909155600a919091558052600c6020527f13649b2456f1b42fef0f0040b3aaeabcd21a76a0f3f5defd4f583839455116e8805460ff19166001179055611a06806100f86000396000f3006060604052600436106101b35763ffffffff60e060020a6000350416630b2e742381146101b85780630ffb1d8b146101dd5780631870c10f146102035780631b28591c1461022e5780631e891c0a146102505780631f6eb6e7146102665780632af4c31e146102955780633f4ba83a146102b45780634c4316c7146102c75780635c975abb146102f1578063666a34271461031857806368b8c5a114610337578063710bf3221461034a578063793c0fd41461036957806379ba50971461038d5780638422927d146103a05780638456cb59146103b6578063846a5dde146103c9578063892db057146103e25780638da5cb5b1461040157806391f5c3a81461041457806392e4b8a4146104355780639da47a6b1461044b578063a0927a6a1461045e578063a142d60814610542578063ab8be23114610561578063b2ca3ec414610577578063bb2a51d11461058a578063bde60ac9146105a9578063d085835a146105c4578063d091b550146105d7578063d836fbe8146105ea578063d8528af014610609578063da4793ac14610628578063ea8a66c71461063e578063f37b74ca14610651578063f5b612301461068b575b600080fd5b34156101c357600080fd5b6101cb61069e565b60405190815260200160405180910390f35b34156101e857600080fd5b610201600160a060020a036004351660243515156106a4565b005b610201600160a060020a0360043581169067ffffffffffffffff6024351690604435166064356106fa565b341561023957600080fd5b610201600160a060020a03600435166024356107ae565b341561025b57600080fd5b61020160043561093c565b341561027157600080fd5b61027961096b565b604051600160a060020a03909116815260200160405180910390f35b34156102a057600080fd5b610201600160a060020a036004351661097a565b34156102bf57600080fd5b610201610a0e565b61020167ffffffffffffffff60043581169060243516600160a060020a0360443516606435610a72565b34156102fc57600080fd5b610304610b27565b604051901515815260200160405180910390f35b341561032357600080fd5b610201600160a060020a0360043516610b30565b341561034257600080fd5b6101cb610bad565b341561035557600080fd5b610201600160a060020a0360043516610bb4565b341561037457600080fd5b610201600160a060020a03600435166024351515610c25565b341561039857600080fd5b610201610c9f565b34156103ab57600080fd5b610201600435610d1f565b34156103c157600080fd5b610201610dd3565b34156103d457600080fd5b610201600435602435610e39565b34156103ed57600080fd5b610304600160a060020a0360043516610eef565b341561040c57600080fd5b610279610f0e565b610201600160a060020a036004351667ffffffffffffffff60243516610f1d565b341561044057600080fd5b610201600435610f2e565b341561045657600080fd5b6101cb611166565b341561046957600080fd5b61047460043561116c565b604051602081018a9052600160a060020a03808a16604083015260608201899052871515608083015286151560a083015285811660c0830152841660e082015261010081018390526101208101829052610140808252819081018c818151815260200191508051906020019080838360005b838110156104fe5780820151838201526020016104e6565b50505050905090810190601f16801561052b5780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390f35b341561054d57600080fd5b610201600160a060020a0360043516611280565b341561056c57600080fd5b6102016004356114a1565b341561058257600080fd5b6102796114a6565b341561059557600080fd5b610201600160a060020a03600435166114b5565b61020167ffffffffffffffff600435811690602435166114f2565b34156105cf57600080fd5b6101cb6114ff565b34156105e257600080fd5b610279611505565b34156105f557600080fd5b610201600160a060020a0360043516611514565b341561061457600080fd5b610304600160a060020a036004351661156c565b341561063357600080fd5b610201600435611581565b341561064957600080fd5b6101cb6115a1565b341561065c57600080fd5b6101cb602460048035828101929101359035600160a060020a036044358116906064351660843560a4356115a7565b341561069657600080fd5b610279611759565b600a5481565b60055460ff16156106b457600080fd5b60005433600160a060020a039081169116146106cf57600080fd5b600160a060020a03919091166000908152600c60205260409020805460ff1916911515919091179055565b60055460009060ff161561070d57600080fd5b600160a060020a038516151561072257600080fd5b67ffffffffffffffff8416151561073857600080fd5b6107428383611768565b90507f300ed237d4114d1c2df9984e698721646d6c45633d6c1c5430450cdecf61571d85858584604051600160a060020a03948516815267ffffffffffffffff909316602084015292166040808301919091526060820192909252608001905180910390a15050505050565b60025460009033600160a060020a03908116911614806107dc575060005433600160a060020a039081169116145b15156107e757600080fd5b600160a060020a038316151561087357600354600160a060020a031682156108fc0283604051600060405180830381858888f19350505050151561082a57600080fd5b7f4ccddcd1a4e33721aee316370fb3e014294985be0755a68c88009b31e1dc4ae38383604051600160a060020a03909216825260208201526040908101905180910390a1610937565b506003548290600160a060020a038083169163a9059cbb91168460405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b15156108d057600080fd5b5af115156108dd57600080fd5b5050506040518051905015156108f257600080fd5b7f4ccddcd1a4e33721aee316370fb3e014294985be0755a68c88009b31e1dc4ae38383604051600160a060020a03909216825260208201526040908101905180910390a15b505050565b60005433600160a060020a0390811691161461095757600080fd5b60085481101561096657600080fd5b600955565b600254600160a060020a031681565b6000805433600160a060020a0390811691161461099657600080fd5b600160a060020a03821615156109ab57600080fd5b5060008054600160a060020a03838116600160a060020a031980841691909117938490556001805490911690559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60005433600160a060020a03908116911614610a2957600080fd5b60055460ff161515610a3a57600080fd5b6005805460ff191690557f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b60055460009060ff1615610a8557600080fd5b67ffffffffffffffff85161515610a9b57600080fd5b67ffffffffffffffff84161515610ab157600080fd5b610abb8383611768565b90507fc77b8feedf86922981aed41179f4a071d80467c7f17c5c13837269e363ac545b8585858460405167ffffffffffffffff9485168152929093166020830152600160a060020a03166040808301919091526060820192909252608001905180910390a15050505050565b60055460ff1681565b60005433600160a060020a03908116911614610b4b57600080fd5b610dac600160a060020a03821614610b6257600080fd5b60008054600160a060020a03199081169091556001805490911690557f94e8b32e01b9eedfddd778ffbd051a7718cdc14781702884561162dca6f74dbb60405160405180910390a150565b6006545b90565b60005433600160a060020a03908116911614610bcf57600080fd5b60018054600160a060020a031916600160a060020a0383811691909117918290559081169033167f13a4b3bc0d5234dd3d87c9f1557d8faefa37986da62c36ba49309e2fb2c9aec460405160405180910390a350565b60005433600160a060020a03908116911614610c4057600080fd5b600160a060020a0382166000818152600b602052604090819020805460ff19168415151790557f801f568efbc3346a6ae3d0c3eb335a30d64e0d3cf08f1c39626d62cd5c82728190839051901515815260200160405180910390a25050565b60015460009033600160a060020a03908116911614610cbd57600080fd5b506000805460018054600160a060020a0319808416600160a060020a03838116919091179586905591169091559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b6000805433600160a060020a03908116911614610d3b57600080fd5b6006548210610d4957600080fd5b6006805483908110610d5757fe5b60009182526020909120600890910201600481015490915060ff1615610d7c57600080fd5b6004810154610100900460ff1615610d9357600080fd5b60048101805460ff19166001179055817ffdf197ed54809861dafe0b4d391843652730ac67274c1e9e46db7687dccaa30160405160405180910390a25050565b60005433600160a060020a03908116911614610dee57600080fd5b60055460ff1615610dfe57600080fd5b6005805460ff191660011790557f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b60075460009033600160a060020a03908116911614610e5757600080fd5b6006548310610e6557600080fd5b670de0b6b3a7640000821115610e7a57600080fd5b6006805484908110610e8857fe5b90600052602060002090600802019050600a548282600701540111151515610eaf57600080fd5b6004810154610100900460ff1615610ec657600080fd5b600481015460ff1615610ed857600080fd5b600781018054830190556003018054909101905550565b600160a060020a031660009081526004602052604090205460ff161590565b600054600160a060020a031681565b610f2a82826000806106fa565b5050565b60055460009060ff1615610f4157600080fd5b6006548210610f4f57600080fd5b6006805483908110610f5d57fe5b6000918252602090912060046008909202019081015490915033600160a060020a03908116620100009092041614610f9457600080fd5b6002810154600160a060020a03166000908152600b602052604090205460ff161515610fbf57600080fd5b8060030154610fcc611849565b1015610fd757600080fd5b600481015460ff1615610fe957600080fd5b6004810154610100900460ff161561100057600080fd5b60048101805461ff0019166101001790556005810154600160a060020a0316151561106c576004810154600682015462010000909104600160a060020a0316906108fc81150290604051600060405180830381858888f19350505050151561106757600080fd5b6110fa565b600581015460048201546006830154600160a060020a039283169263a9059cbb92620100009004169060405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b15156110d857600080fd5b5af115156110e557600080fd5b5050506040518051905015156110fa57600080fd5b600481015460068201546005830154600160a060020a036201000090930483169285927f354f3c0c8efabe1a1a07cf222842b008ef284ac185e63bdf8245be8cd2d97f5192909116604051918252600160a060020a031660208201526040908101905180910390a35050565b600d5481565b600680548290811061117a57fe5b9060005260206000209060080201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112265780601f106111fb57610100808354040283529160200191611226565b820191906000526020600020905b81548152906001019060200180831161120957829003601f168201915b5050505060018301546002840154600385015460048601546005870154600688015460079098015496979496600160a060020a039485169650929460ff80841695610100850490911694620100009094048116939216918a565b600254600090819033600160a060020a03908116911614806112b0575060005433600160a060020a039081169116145b15156112bb57600080fd5b600160a060020a03831660009081526004602052604090205460ff16156112e157600080fd5b600160a060020a038316151561137357600354600160a060020a033081163193501682156108fc0283604051600060405180830381858888f19350505050151561132a57600080fd5b7fa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f28383604051600160a060020a03909216825260208201526040908101905180910390a1610937565b5081600160a060020a0381166370a082313060405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b15156113c357600080fd5b5af115156113d057600080fd5b5050506040518051600354909350600160a060020a03808416925063a9059cbb91168460405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561143657600080fd5b5af1151561144357600080fd5b50505060405180519050151561145857600080fd5b7fa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f28383604051600160a060020a03909216825260208201526040908101905180910390a1505050565b600d55565b600754600160a060020a031681565b60005433600160a060020a039081169116146114d057600080fd5b60078054600160a060020a031916600160a060020a0392909216919091179055565b610f2a8282600080610a72565b60095481565b600154600160a060020a031681565b60025433600160a060020a039081169116148061153f575060005433600160a060020a039081169116145b151561154a57600080fd5b60028054600160a060020a031916600160a060020a0392909216919091179055565b600b6020526000908152604090205460ff1681565b60005433600160a060020a0390811691161461159c57600080fd5b600a55565b60085481565b6005546000908190819060ff16156115be57600080fd5b600160a060020a0333166000908152600b602052604090205460ff1615156115e557600080fd5b60068054925082906115fa906001830161184f565b50600680548390811061160957fe5b60009182526020909120600890910201600281018054600160a060020a03191633600160a060020a03161790559050670de0b6b3a764000084111561164d57600080fd5b60095484101561166857600954611662611849565b01611673565b83611671611849565b015b600382015560048101805475ffffffffffffffffffffffffffffffffffffffff0000191662010000600160a060020a038a1602179055600681018590556116bb818b8b61187b565b5060018101889055600581018054600160a060020a031916600160a060020a038881169190911791829055600483015460068401546201000090910482169285927fd11935115aa93b9f1f616d0d7702f4593572daa610390123241b3785430281c49291168c604051928352600160a060020a0390911660208301526040808301919091526060909101905180910390a35098975050505050505050565b600354600160a060020a031681565b600160a060020a0382166000908152600c602052604081205460ff16151561178f57600080fd5b5080600160a060020a03831615156117a45750345b600081116117b157600080fd5b600160a060020a038316156118435782600160a060020a03166323b872dd33308460405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401602060405180830381600087803b151561182157600080fd5b5af1151561182e57600080fd5b50505060405180519050151561184357600080fd5b92915050565b600d5490565b8154818355818115116109375760080281600802836000526020600020918201910161093791906118f9565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106118bc5782800160ff198235161785556118e9565b828001600101855582156118e9579182015b828111156118e95782358255916020019190600101906118ce565b506118f5929150611979565b5090565b610bb191905b808211156118f55760006119138282611993565b50600060018201819055600282018054600160a060020a03199081169091556003830182905560048301805475ffffffffffffffffffffffffffffffffffffffffffff1916905560058301805490911690556006820181905560078201556008016118ff565b610bb191905b808211156118f5576000815560010161197f565b50805460018160011615610100020316600290046000825580601f106119b957506119d7565b601f0160209004906000526020600020908101906119d79190611979565b505600a165627a7a7230582013006f26a565992ea074c5001a4e0d06ef08798a57bdc47ff7ad3e1351095f8c0029",
            "sourceMap": "904:947:2:-;;;268:26:3;;;-1:-1:-1;;268:26:3;;;981:440:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;993:5:7;:18;;-1:-1:-1;;;;;1001:10:7;993:18;;-1:-1:-1;;;;;;993:18:7;;;;;;2101:17:6;:38;;;;;;;;;;;;;;;2149:22;:48;;;;;;;;;;;;;;;4837:19:4;:42;;;;4889:8;:20;;;;-1:-1:-1;;4919:13:4;:30;;;;;;;;;;;;;;;;;4959:21;:46;;;;3143:17:1;;:14;981:440:2;3143:17:1;;:24;;-1:-1:-1;;3143:24:1;993:18:7;3143:24:1;;;904:947:2;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "6060604052600436106101b35763ffffffff60e060020a6000350416630b2e742381146101b85780630ffb1d8b146101dd5780631870c10f146102035780631b28591c1461022e5780631e891c0a146102505780631f6eb6e7146102665780632af4c31e146102955780633f4ba83a146102b45780634c4316c7146102c75780635c975abb146102f1578063666a34271461031857806368b8c5a114610337578063710bf3221461034a578063793c0fd41461036957806379ba50971461038d5780638422927d146103a05780638456cb59146103b6578063846a5dde146103c9578063892db057146103e25780638da5cb5b1461040157806391f5c3a81461041457806392e4b8a4146104355780639da47a6b1461044b578063a0927a6a1461045e578063a142d60814610542578063ab8be23114610561578063b2ca3ec414610577578063bb2a51d11461058a578063bde60ac9146105a9578063d085835a146105c4578063d091b550146105d7578063d836fbe8146105ea578063d8528af014610609578063da4793ac14610628578063ea8a66c71461063e578063f37b74ca14610651578063f5b612301461068b575b600080fd5b34156101c357600080fd5b6101cb61069e565b60405190815260200160405180910390f35b34156101e857600080fd5b610201600160a060020a036004351660243515156106a4565b005b610201600160a060020a0360043581169067ffffffffffffffff6024351690604435166064356106fa565b341561023957600080fd5b610201600160a060020a03600435166024356107ae565b341561025b57600080fd5b61020160043561093c565b341561027157600080fd5b61027961096b565b604051600160a060020a03909116815260200160405180910390f35b34156102a057600080fd5b610201600160a060020a036004351661097a565b34156102bf57600080fd5b610201610a0e565b61020167ffffffffffffffff60043581169060243516600160a060020a0360443516606435610a72565b34156102fc57600080fd5b610304610b27565b604051901515815260200160405180910390f35b341561032357600080fd5b610201600160a060020a0360043516610b30565b341561034257600080fd5b6101cb610bad565b341561035557600080fd5b610201600160a060020a0360043516610bb4565b341561037457600080fd5b610201600160a060020a03600435166024351515610c25565b341561039857600080fd5b610201610c9f565b34156103ab57600080fd5b610201600435610d1f565b34156103c157600080fd5b610201610dd3565b34156103d457600080fd5b610201600435602435610e39565b34156103ed57600080fd5b610304600160a060020a0360043516610eef565b341561040c57600080fd5b610279610f0e565b610201600160a060020a036004351667ffffffffffffffff60243516610f1d565b341561044057600080fd5b610201600435610f2e565b341561045657600080fd5b6101cb611166565b341561046957600080fd5b61047460043561116c565b604051602081018a9052600160a060020a03808a16604083015260608201899052871515608083015286151560a083015285811660c0830152841660e082015261010081018390526101208101829052610140808252819081018c818151815260200191508051906020019080838360005b838110156104fe5780820151838201526020016104e6565b50505050905090810190601f16801561052b5780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390f35b341561054d57600080fd5b610201600160a060020a0360043516611280565b341561056c57600080fd5b6102016004356114a1565b341561058257600080fd5b6102796114a6565b341561059557600080fd5b610201600160a060020a03600435166114b5565b61020167ffffffffffffffff600435811690602435166114f2565b34156105cf57600080fd5b6101cb6114ff565b34156105e257600080fd5b610279611505565b34156105f557600080fd5b610201600160a060020a0360043516611514565b341561061457600080fd5b610304600160a060020a036004351661156c565b341561063357600080fd5b610201600435611581565b341561064957600080fd5b6101cb6115a1565b341561065c57600080fd5b6101cb602460048035828101929101359035600160a060020a036044358116906064351660843560a4356115a7565b341561069657600080fd5b610279611759565b600a5481565b60055460ff16156106b457600080fd5b60005433600160a060020a039081169116146106cf57600080fd5b600160a060020a03919091166000908152600c60205260409020805460ff1916911515919091179055565b60055460009060ff161561070d57600080fd5b600160a060020a038516151561072257600080fd5b67ffffffffffffffff8416151561073857600080fd5b6107428383611768565b90507f300ed237d4114d1c2df9984e698721646d6c45633d6c1c5430450cdecf61571d85858584604051600160a060020a03948516815267ffffffffffffffff909316602084015292166040808301919091526060820192909252608001905180910390a15050505050565b60025460009033600160a060020a03908116911614806107dc575060005433600160a060020a039081169116145b15156107e757600080fd5b600160a060020a038316151561087357600354600160a060020a031682156108fc0283604051600060405180830381858888f19350505050151561082a57600080fd5b7f4ccddcd1a4e33721aee316370fb3e014294985be0755a68c88009b31e1dc4ae38383604051600160a060020a03909216825260208201526040908101905180910390a1610937565b506003548290600160a060020a038083169163a9059cbb91168460405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b15156108d057600080fd5b5af115156108dd57600080fd5b5050506040518051905015156108f257600080fd5b7f4ccddcd1a4e33721aee316370fb3e014294985be0755a68c88009b31e1dc4ae38383604051600160a060020a03909216825260208201526040908101905180910390a15b505050565b60005433600160a060020a0390811691161461095757600080fd5b60085481101561096657600080fd5b600955565b600254600160a060020a031681565b6000805433600160a060020a0390811691161461099657600080fd5b600160a060020a03821615156109ab57600080fd5b5060008054600160a060020a03838116600160a060020a031980841691909117938490556001805490911690559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60005433600160a060020a03908116911614610a2957600080fd5b60055460ff161515610a3a57600080fd5b6005805460ff191690557f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b60055460009060ff1615610a8557600080fd5b67ffffffffffffffff85161515610a9b57600080fd5b67ffffffffffffffff84161515610ab157600080fd5b610abb8383611768565b90507fc77b8feedf86922981aed41179f4a071d80467c7f17c5c13837269e363ac545b8585858460405167ffffffffffffffff9485168152929093166020830152600160a060020a03166040808301919091526060820192909252608001905180910390a15050505050565b60055460ff1681565b60005433600160a060020a03908116911614610b4b57600080fd5b610dac600160a060020a03821614610b6257600080fd5b60008054600160a060020a03199081169091556001805490911690557f94e8b32e01b9eedfddd778ffbd051a7718cdc14781702884561162dca6f74dbb60405160405180910390a150565b6006545b90565b60005433600160a060020a03908116911614610bcf57600080fd5b60018054600160a060020a031916600160a060020a0383811691909117918290559081169033167f13a4b3bc0d5234dd3d87c9f1557d8faefa37986da62c36ba49309e2fb2c9aec460405160405180910390a350565b60005433600160a060020a03908116911614610c4057600080fd5b600160a060020a0382166000818152600b602052604090819020805460ff19168415151790557f801f568efbc3346a6ae3d0c3eb335a30d64e0d3cf08f1c39626d62cd5c82728190839051901515815260200160405180910390a25050565b60015460009033600160a060020a03908116911614610cbd57600080fd5b506000805460018054600160a060020a0319808416600160a060020a03838116919091179586905591169091559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b6000805433600160a060020a03908116911614610d3b57600080fd5b6006548210610d4957600080fd5b6006805483908110610d5757fe5b60009182526020909120600890910201600481015490915060ff1615610d7c57600080fd5b6004810154610100900460ff1615610d9357600080fd5b60048101805460ff19166001179055817ffdf197ed54809861dafe0b4d391843652730ac67274c1e9e46db7687dccaa30160405160405180910390a25050565b60005433600160a060020a03908116911614610dee57600080fd5b60055460ff1615610dfe57600080fd5b6005805460ff191660011790557f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b60075460009033600160a060020a03908116911614610e5757600080fd5b6006548310610e6557600080fd5b670de0b6b3a7640000821115610e7a57600080fd5b6006805484908110610e8857fe5b90600052602060002090600802019050600a548282600701540111151515610eaf57600080fd5b6004810154610100900460ff1615610ec657600080fd5b600481015460ff1615610ed857600080fd5b600781018054830190556003018054909101905550565b600160a060020a031660009081526004602052604090205460ff161590565b600054600160a060020a031681565b610f2a82826000806106fa565b5050565b60055460009060ff1615610f4157600080fd5b6006548210610f4f57600080fd5b6006805483908110610f5d57fe5b6000918252602090912060046008909202019081015490915033600160a060020a03908116620100009092041614610f9457600080fd5b6002810154600160a060020a03166000908152600b602052604090205460ff161515610fbf57600080fd5b8060030154610fcc611849565b1015610fd757600080fd5b600481015460ff1615610fe957600080fd5b6004810154610100900460ff161561100057600080fd5b60048101805461ff0019166101001790556005810154600160a060020a0316151561106c576004810154600682015462010000909104600160a060020a0316906108fc81150290604051600060405180830381858888f19350505050151561106757600080fd5b6110fa565b600581015460048201546006830154600160a060020a039283169263a9059cbb92620100009004169060405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b15156110d857600080fd5b5af115156110e557600080fd5b5050506040518051905015156110fa57600080fd5b600481015460068201546005830154600160a060020a036201000090930483169285927f354f3c0c8efabe1a1a07cf222842b008ef284ac185e63bdf8245be8cd2d97f5192909116604051918252600160a060020a031660208201526040908101905180910390a35050565b600d5481565b600680548290811061117a57fe5b9060005260206000209060080201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112265780601f106111fb57610100808354040283529160200191611226565b820191906000526020600020905b81548152906001019060200180831161120957829003601f168201915b5050505060018301546002840154600385015460048601546005870154600688015460079098015496979496600160a060020a039485169650929460ff80841695610100850490911694620100009094048116939216918a565b600254600090819033600160a060020a03908116911614806112b0575060005433600160a060020a039081169116145b15156112bb57600080fd5b600160a060020a03831660009081526004602052604090205460ff16156112e157600080fd5b600160a060020a038316151561137357600354600160a060020a033081163193501682156108fc0283604051600060405180830381858888f19350505050151561132a57600080fd5b7fa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f28383604051600160a060020a03909216825260208201526040908101905180910390a1610937565b5081600160a060020a0381166370a082313060405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b15156113c357600080fd5b5af115156113d057600080fd5b5050506040518051600354909350600160a060020a03808416925063a9059cbb91168460405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561143657600080fd5b5af1151561144357600080fd5b50505060405180519050151561145857600080fd5b7fa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f28383604051600160a060020a03909216825260208201526040908101905180910390a1505050565b600d55565b600754600160a060020a031681565b60005433600160a060020a039081169116146114d057600080fd5b60078054600160a060020a031916600160a060020a0392909216919091179055565b610f2a8282600080610a72565b60095481565b600154600160a060020a031681565b60025433600160a060020a039081169116148061153f575060005433600160a060020a039081169116145b151561154a57600080fd5b60028054600160a060020a031916600160a060020a0392909216919091179055565b600b6020526000908152604090205460ff1681565b60005433600160a060020a0390811691161461159c57600080fd5b600a55565b60085481565b6005546000908190819060ff16156115be57600080fd5b600160a060020a0333166000908152600b602052604090205460ff1615156115e557600080fd5b60068054925082906115fa906001830161184f565b50600680548390811061160957fe5b60009182526020909120600890910201600281018054600160a060020a03191633600160a060020a03161790559050670de0b6b3a764000084111561164d57600080fd5b60095484101561166857600954611662611849565b01611673565b83611671611849565b015b600382015560048101805475ffffffffffffffffffffffffffffffffffffffff0000191662010000600160a060020a038a1602179055600681018590556116bb818b8b61187b565b5060018101889055600581018054600160a060020a031916600160a060020a038881169190911791829055600483015460068401546201000090910482169285927fd11935115aa93b9f1f616d0d7702f4593572daa610390123241b3785430281c49291168c604051928352600160a060020a0390911660208301526040808301919091526060909101905180910390a35098975050505050505050565b600354600160a060020a031681565b600160a060020a0382166000908152600c602052604081205460ff16151561178f57600080fd5b5080600160a060020a03831615156117a45750345b600081116117b157600080fd5b600160a060020a038316156118435782600160a060020a03166323b872dd33308460405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401602060405180830381600087803b151561182157600080fd5b5af1151561182e57600080fd5b50505060405180519050151561184357600080fd5b92915050565b600d5490565b8154818355818115116109375760080281600802836000526020600020918201910161093791906118f9565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106118bc5782800160ff198235161785556118e9565b828001600101855582156118e9579182015b828111156118e95782358255916020019190600101906118ce565b506118f5929150611979565b5090565b610bb191905b808211156118f55760006119138282611993565b50600060018201819055600282018054600160a060020a03199081169091556003830182905560048301805475ffffffffffffffffffffffffffffffffffffffffffff1916905560058301805490911690556006820181905560078201556008016118ff565b610bb191905b808211156118f5576000815560010161197f565b50805460018160011615610100020316600290046000825580601f106119b957506119d7565b601f0160209004906000526020600020908101906119d79190611979565b505600a165627a7a7230582013006f26a565992ea074c5001a4e0d06ef08798a57bdc47ff7ad3e1351095f8c0029",
            "sourceMap": "904:947:2:-;;;;;;;;;-1:-1:-1;;;904:947:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2458:33:4;;;;;;;;;;;;;;;;;;;;;;;;;;;5885:136:1;;;;;;;;;;-1:-1:-1;;;;;5885:136:1;;;;;;;;;;;4258:317;;-1:-1:-1;;;;;4258:317:1;;;;;;;;;;;;;;;;;6287:479;;;;;;;;;;-1:-1:-1;;;;;6287:479:1;;;;;;;10425:153:4;;;;;;;;;;;;;;1181:32:6;;;;;;;;;;;;;;;-1:-1:-1;;;;;1181:32:6;;;;;;;;;;;;;;2422:246:7;;;;;;;;;;-1:-1:-1;;;;;2422:246:7;;;;;912:102:3;;;;;;;;;;;;5585:294:1;;;;;;;;;;;-1:-1:-1;;;;;5585:294:1;;;;;;;268:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3062:182:7;;;;;;;;;;-1:-1:-1;;;;;3062:182:7;;;;;5221:114:4;;;;;;;;;;;;1585:185:7;;;;;;;;;;-1:-1:-1;;;;;1585:185:7;;;;;9706:192:4;;;;;;;;;;-1:-1:-1;;;;;9706:192:4;;;;;;;;;1882:242:7;;;;;;;;;;;;9148:312:4;;;;;;;;;;;;;;724:100:3;;;;;;;;;;;;8514:473:4;;;;;;;;;;;;;;;;3215:117:6;;;;;;;;;;-1:-1:-1;;;;;3215:117:6;;;;;638:20:7;;;;;;;;;;;;3669:143:1;;-1:-1:-1;;;;;3669:143:1;;;;;;;;;7346:902:4;;;;;;;;;;;;;;953:21:2;;;;;;;;;;;;2319:35:4;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2319:35:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2319:35:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3540:611:6;;;;;;;;;;-1:-1:-1;;;;;3540:611:6;;;;;1779:70:2;;;;;;;;;;;;;;2361:28:4;;;;;;;;;;;;10035:122;;;;;;;;;;-1:-1:-1;;;;;10035:122:4;;;;;5021:118:1;;;;;;;;;;;;;2432:20:4;;;;;;;;;;;;664:32:7;;;;;;;;;;;;4520:158:6;;;;;;;;;;-1:-1:-1;;;;;4520:158:6;;;;;2611:48:4;;;;;;;;;;-1:-1:-1;;;;;2611:48:4;;;;;10842:145;;;;;;;;;;;;;;2395:31;;;;;;;;;;;;5914:1195;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5914:1195:4;;;;;;;;;;;;;;1219:37:6;;;;;;;;;;;;2458:33:4;;;;:::o;5885:136:1:-;446:6:3;;;;445:7;437:16;;;;;;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;-1:-1:-1;;;;;5982:21:1;;;;;;;;:14;:21;;;;;:32;;-1:-1:-1;;5982:32:1;;;;;;;;;;5885:136::o;4258:317::-;446:6:3;;4453:11:1;;446:6:3;;445:7;437:16;;;;;;-1:-1:-1;;;;;4398:10:1;;;;4390:19;;;;;;4427:15;;;;;4419:24;;;;;;4467:32;4484:5;4491:7;4467:16;:32::i;:::-;4453:46;;4514:54;4535:5;4542:10;4554:5;4561:6;4514:54;;-1:-1:-1;;;;;4514:54:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4258:317;;;;;:::o;6287:479::-;2431:17:6;;6617:11:1;;2417:10:6;-1:-1:-1;;;;;2417:31:6;;;2431:17;;2417:31;;2416:56;;-1:-1:-1;2466:5:6;;2452:10;-1:-1:-1;;;;;2452:19:6;;;2466:5;;2452:19;2416:56;2407:66;;;;;;;;-1:-1:-1;;;;;6423:11:1;;;6419:155;;;6450:22;;-1:-1:-1;;;;;6450:22:1;:40;;;;6482:7;6450:40;;;;;;;;;;;;;;;;;;;;;;;;;;6509:34;6527:6;6535:7;6509:34;;-1:-1:-1;;;;;6509:34:1;;;;;;;;;;;;;;;;;;;;6557:7;;6419:155;-1:-1:-1;6677:22:1;;6637:6;;-1:-1:-1;;;;;6662:14:1;;;;;;6677:22;6701:7;6662:47;;-1:-1:-1;;;6662:47:1;;;;;;-1:-1:-1;;;;;6662:47:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6654:56;;;;;;;;6725:34;6743:6;6751:7;6725:34;;-1:-1:-1;;;;;6725:34:1;;;;;;;;;;;;;;;;;;;;2483:1:6;6287:479:1;;;:::o;10425:153:4:-;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;10518:19:4;;10502:35;;;10494:44;;;;;;10548:8;:23;10425:153::o;1181:32:6:-;;;-1:-1:-1;;;;;1181:32:6;;:::o;2422:246:7:-;2529:16;1171:5;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;-1:-1:-1;;;;;2501:16:7;;;;2493:25;;;;;;-1:-1:-1;2548:5:7;;;-1:-1:-1;;;;;2563:17:7;;;-1:-1:-1;;;;;;2563:17:7;;;;;;;;;;;2548:5;2590:23;;;;;;;2548:5;;;;2655;2548;2624:37;;;;;;;;;;2422:246;;:::o;912:102:3:-;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;614:6:3;;;;606:15;;;;;;;;969:6;:14;;-1:-1:-1;;969:14:3;;;998:9;;;;;;;;;;912:102::o;5585:294:1:-;446:6:3;;5769:11:1;;446:6:3;;445:7;437:16;;;;;;5712:12:1;;;;;5704:21;;;;;;5743:15;;;;;5735:24;;;;;;5783:32;5800:5;5807:7;5783:16;:32::i;:::-;5769:46;;5830:42;5837:7;5846:10;5858:5;5865:6;5830:42;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5830:42:1;;;;;;;;;;;;;;;;;;;;;;;;;5585:294;;;;;:::o;268:26:3:-;;;;;;:::o;3062:182:7:-;1171:5;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;3144:5;-1:-1:-1;;;;;3136:13:7;;;3128:22;;;;;;3168:3;3160:11;;-1:-1:-1;;;;;;3160:11:7;;;;;;;3181:23;;;;;;;3214:18;;;;;;;;;;3062:182;:::o;5221:114:4:-;5303:18;:25;5221:114;;:::o;1585:185:7:-;1171:5;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;1666:17;:38;;-1:-1:-1;;;;;;1666:38:7;-1:-1:-1;;;;;1666:38:7;;;;;;;;;;;1745:17;;;;1733:10;1714:49;;;;;;;;;;;1585:185;:::o;9706:192:4:-;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;-1:-1:-1;;;;;9796:25:4;;;;;;:15;:25;;;;;;;:38;;-1:-1:-1;;9796:38:4;;;;;;;9849:42;;9796:38;;9849:42;;;;;;;;;;;;;;;9706:192;;:::o;1882:242:7:-;1948:17;;1977:16;;1934:10;-1:-1:-1;;;;;1934:31:7;;;1948:17;;1934:31;1926:40;;;;;;-1:-1:-1;1996:5:7;;;;2019:17;;-1:-1:-1;;;;;;2011:25:7;;;-1:-1:-1;;;;;2019:17:7;;;2011:25;;;;;;;;2046:23;;;;;1996:5;;;;2111;1996;2080:37;;;;;;;;;;1882:242;:::o;9148:312:4:-;9275:17;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;9238:18:4;:25;9225:38;;9217:47;;;;;;9295:18;:30;;9314:10;;9295:30;;;;;;;;;;;;;;;;;;;9346:10;;;;9295:30;;-1:-1:-1;9346:10:4;;9345:11;9337:20;;;;;;9376:6;;;;;;;;;9375:7;9367:16;;;;;;9394:10;;;:17;;-1:-1:-1;;9394:17:4;9407:4;9394:17;;;9442:10;9426:27;;;;;;;;;;9148:312;;:::o;724:100:3:-;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;446:6:3;;;;445:7;437:16;;;;;;782:6;:13;;-1:-1:-1;;782:13:3;791:4;782:13;;;810:7;;;;;;;;;;724:100::o;8514:473:4:-;3302:13;;8722:17;;3288:10;-1:-1:-1;;;;;3288:27:4;;;3302:13;;3288:27;3280:36;;;;;;8624:18;:25;8611:38;;8603:47;;;;;;8704:6;8694:16;;;8686:25;;;;;;8742:18;:30;;8761:10;;8742:30;;;;;;;;;;;;;;;;8722:50;;8824:21;;8814:6;8791:1;:20;;;:29;:54;;8783:63;;;;;;;;8865:6;;;;;;;;;8864:7;8856:16;;;;;;8891:10;;;;;;8890:11;8882:20;;;;;;8913;;;:30;;;;;;8953:17;;:27;;;;;;;-1:-1:-1;8514:473:4:o;3215:117:6:-;-1:-1:-1;;;;;3302:23:6;3278:4;3302:23;;;:15;:23;;;;;;;;3301:24;;3215:117::o;638:20:7:-;;;-1:-1:-1;;;;;638:20:7;;:::o;3669:143:1:-;3760:45;3781:5;3788:10;3800:1;3803;3760:20;:45::i;:::-;3669:143;;:::o;7346:902:4:-;446:6:3;;7566:17:4;;446:6:3;;445:7;437:16;;;;;;7529:18:4;:25;7516:38;;7508:47;;;;;;7586:18;:30;;7605:10;;7586:30;;;;;;;;;;;;;;7708:11;7586:30;;;;;7708:11;;;;7586:30;;-1:-1:-1;7694:10:4;-1:-1:-1;;;;;7694:25:4;;;7708:11;;;;;7694:25;7686:34;;;;;;7754:9;;;;-1:-1:-1;;;;;7754:9:4;7738:26;;;;:15;:26;;;;;;;;7730:35;;;;;;;;7797:1;:17;;;7783:10;:8;:10::i;:::-;:31;;7775:40;;;;;;7834:10;;;;;;7833:11;7825:20;;;;;;7864:6;;;;;;;;;7863:7;7855:16;;;;;;7923:6;;;:13;;-1:-1:-1;;7923:13:4;;;;;8012:7;;;;-1:-1:-1;;;;;8012:7:4;:12;8008:159;;;8040:11;;;;8061:8;;;;8040:11;;;;-1:-1:-1;;;;;8040:11:4;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8008:159;;;8115:7;;;;8133:11;;;;8146:8;;;;-1:-1:-1;;;;;8115:7:4;;;;8109:23;;8133:11;;;;;8109:46;;-1:-1:-1;;;8109:46:4;;;;;;-1:-1:-1;;;;;8109:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8101:55;;;;;;;;8210:11;;;;8223:8;;;;8233:7;;;;-1:-1:-1;;;;;8210:11:4;;;;;;;8198:10;;8182:59;;8223:8;;8233:7;8182:59;;;;;-1:-1:-1;;;;;8182:59:4;;;;;;;;;;;;;;;;7346:902;;:::o;953:21:2:-;;;;:::o;2319:35:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2319:35:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2319:35:4;;;;-1:-1:-1;2319:35:4;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3540:611:6:-;2431:17;;3676:15;;;;2417:10;-1:-1:-1;;;;;2417:31:6;;;2431:17;;2417:31;;2416:56;;-1:-1:-1;2466:5:6;;2452:10;-1:-1:-1;;;;;2452:19:6;;;2466:5;;2452:19;2416:56;2407:66;;;;;;;;-1:-1:-1;;;;;3634:23:6;;;;;;:15;:23;;;;;;;;:30;3626:39;;;;;;-1:-1:-1;;;;;3739:13:6;;;3735:188;;;3804:22;;-1:-1:-1;;;;;3778:4:6;:12;;;;-1:-1:-1;3804:22:6;:40;;;;3778:12;3804:40;;;;;;;;;;;;;;;;;;;;;;;;;;3858:34;3876:6;3884:7;3858:34;;-1:-1:-1;;;;;3858:34:6;;;;;;;;;;;;;;;;;;;;3906:7;;3735:188;-1:-1:-1;3986:6:6;-1:-1:-1;;;;;4013:15:6;;;4029:4;4013:21;;-1:-1:-1;;;4013:21:6;;;;;;-1:-1:-1;;;;;4013:21:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4067:22;;4013:21;;-1:-1:-1;;;;;;4052:14:6;;;;-1:-1:-1;4052:14:6;;4067:22;4013:21;4052:47;;-1:-1:-1;;;4052:47:6;;;;;;-1:-1:-1;;;;;4052:47:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4044:56;;;;;;;;4110:34;4128:6;4136:7;4110:34;;-1:-1:-1;;;;;4110:34:6;;;;;;;;;;;;;;;;;;;;3540:611;;;:::o;1779:70:2:-;1828:9;:14;1779:70::o;2361:28:4:-;;;-1:-1:-1;;;;;2361:28:4;;:::o;10035:122::-;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;10117:13:4;:33;;-1:-1:-1;;;;;;10117:33:4;-1:-1:-1;;;;;10117:33:4;;;;;;;;;;10035:122::o;5021:118:1:-;5099:33;5106:7;5115:10;5127:1;5130;5099:6;:33::i;2432:20:4:-;;;;:::o;664:32:7:-;;;-1:-1:-1;;;;;664:32:7;;:::o;4520:158:6:-;2431:17;;2417:10;-1:-1:-1;;;;;2417:31:6;;;2431:17;;2417:31;;2416:56;;-1:-1:-1;2466:5:6;;2452:10;-1:-1:-1;;;;;2452:19:6;;;2466:5;;2452:19;2416:56;2407:66;;;;;;;;4630:17;:41;;-1:-1:-1;;;;;;4630:41:6;-1:-1:-1;;;;;4630:41:6;;;;;;;;;;4520:158::o;2611:48:4:-;;;;;;;;;;;;;;;:::o;10842:145::-;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;10934:21:4;:46;10842:145::o;2395:31::-;;;;:::o;5914:1195::-;446:6:3;;6129:4:4;;;;;;446:6:3;;445:7;437:16;;;;;;-1:-1:-1;;;;;6235:10:4;6219:27;;;;;:15;:27;;;;;;;;6211:36;;;;;;;;6274:18;:25;;;-1:-1:-1;6274:25:4;;6336:27;;;;;;:::i;:::-;-1:-1:-1;6453:18:4;:29;;6472:9;;6453:29;;;;;;;;;;;;;;;;;;;6492:9;;;:22;;-1:-1:-1;;;;;;6492:22:4;6504:10;-1:-1:-1;;;;;6492:22:4;;;;6453:29;-1:-1:-1;6581:6:4;6564:23;;;6556:32;;;;;;6717:8;;6700:13;:25;;:142;;6834:8;;6821:10;:8;:10::i;:::-;:21;6700:142;;;6773:13;6760:10;:8;:10::i;:::-;:26;6700:142;6680:17;;;:162;6852:11;;;:24;;-1:-1:-1;;6852:24:4;;-1:-1:-1;;;;;6852:24:4;;;;;;6886:8;;;:18;;;6914:14;6680:17;6923:5;;6914:14;:::i;:::-;-1:-1:-1;6938:11:4;;;:24;;;6972:7;;;:16;;-1:-1:-1;;;;;;6972:16:4;-1:-1:-1;;;;;6972:16:4;;;;;;;;;;;7032:11;;;;7045:8;;;;7032:11;;;;;;;7021:9;;7003:73;;7045:8;7055:7;6938:24;7003:73;;;;;-1:-1:-1;;;;;7003:73:4;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7093:9:4;5914:1195;-1:-1:-1;;;;;;;;5914:1195:4:o;1219:37:6:-;;;-1:-1:-1;;;;;1219:37:6;;:::o;6772:392:1:-;-1:-1:-1;;;;;6875:21:1;;6844:11;6875:21;;;:14;:21;;;;;;;;6867:30;;;;;;;;-1:-1:-1;6916:7:1;-1:-1:-1;;;;;6962:10:1;;;6958:59;;;-1:-1:-1;6997:9:1;6958:59;7044:1;7035:10;;7027:19;;;;;;-1:-1:-1;;;;;7061:10:1;;;7057:101;;7101:5;-1:-1:-1;;;;;7095:25:1;;7121:10;7133:4;7139:6;7095:51;;-1:-1:-1;;;7095:51:1;;;;;;-1:-1:-1;;;;;7095:51:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7087:60;;;;;;;;6772:392;;;;:::o;1515:82:2:-;1581:9;;1515:82;:::o;904:947::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;904:947:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;904:947:2;;;-1:-1:-1;904:947:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;904:947:2;;;;;;;;;;;;-1:-1:-1;;;;;;904:947:2;;;;;;;;;;;;;;;;;-1:-1:-1;;904:947:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o"
          },
          "methodIdentifiers": {
            "absoluteMinTimeLock()": "ea8a66c7",
            "acceptOwnership()": "79ba5097",
            "allowedSpenders(address)": "d8528af0",
            "authorizePayment(string,bytes32,address,address,uint256,uint256)": "f37b74ca",
            "authorizeSpender(address,bool)": "793c0fd4",
            "authorizedPayments(uint256)": "a0927a6a",
            "cancelPayment(uint256)": "8422927d",
            "changeHatchEscapeCaller(address)": "d836fbe8",
            "changeOwnership(address)": "2af4c31e",
            "collectAuthorizedPayment(uint256)": "92e4b8a4",
            "delayPayment(uint256,uint256)": "846a5dde",
            "donate(uint64,uint64)": "bde60ac9",
            "donate(uint64,uint64,address,uint256)": "4c4316c7",
            "donateAndCreateGiver(address,uint64)": "91f5c3a8",
            "donateAndCreateGiver(address,uint64,address,uint256)": "1870c10f",
            "escapeFunds(address,uint256)": "1b28591c",
            "escapeHatch(address)": "a142d608",
            "escapeHatchCaller()": "1f6eb6e7",
            "escapeHatchDestination()": "f5b61230",
            "isTokenEscapable(address)": "892db057",
            "maxSecurityGuardDelay()": "0b2e7423",
            "mock_time()": "9da47a6b",
            "newOwnerCandidate()": "d091b550",
            "numberOfAuthorizedPayments()": "68b8c5a1",
            "owner()": "8da5cb5b",
            "pause()": "8456cb59",
            "paused()": "5c975abb",
            "proposeOwnership(address)": "710bf322",
            "removeOwnership(address)": "666a3427",
            "securityGuard()": "b2ca3ec4",
            "setMaxSecurityGuardDelay(uint256)": "da4793ac",
            "setMockedTime(uint256)": "ab8be231",
            "setSecurityGuard(address)": "bb2a51d1",
            "setTimelock(uint256)": "1e891c0a",
            "timeLock()": "d085835a",
            "unpause()": "3f4ba83a",
            "whitelistToken(address,bool)": "0ffb1d8b"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.21+commit.dfe3193c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"maxSecurityGuardDelay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"accepted\",\"type\":\"bool\"}],\"name\":\"whitelistToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"giver\",\"type\":\"address\"},{\"name\":\"receiverId\",\"type\":\"uint64\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"donateAndCreateGiver\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"escapeFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newTimeLock\",\"type\":\"uint256\"}],\"name\":\"setTimelock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"escapeHatchCaller\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"giverId\",\"type\":\"uint64\"},{\"name\":\"receiverId\",\"type\":\"uint64\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"donate\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dac\",\"type\":\"address\"}],\"name\":\"removeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numberOfAuthorizedPayments\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwnerCandidate\",\"type\":\"address\"}],\"name\":\"proposeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_authorize\",\"type\":\"bool\"}],\"name\":\"authorizeSpender\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_idPayment\",\"type\":\"uint256\"}],\"name\":\"cancelPayment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_idPayment\",\"type\":\"uint256\"},{\"name\":\"_delay\",\"type\":\"uint256\"}],\"name\":\"delayPayment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isTokenEscapable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"giver\",\"type\":\"address\"},{\"name\":\"receiverId\",\"type\":\"uint64\"}],\"name\":\"donateAndCreateGiver\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_idPayment\",\"type\":\"uint256\"}],\"name\":\"collectAuthorizedPayment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mock_time\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"authorizedPayments\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"reference\",\"type\":\"bytes32\"},{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"earliestPayTime\",\"type\":\"uint256\"},{\"name\":\"canceled\",\"type\":\"bool\"},{\"name\":\"paid\",\"type\":\"bool\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"securityGuardDelay\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"escapeHatch\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_t\",\"type\":\"uint256\"}],\"name\":\"setMockedTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"securityGuard\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newSecurityGuard\",\"type\":\"address\"}],\"name\":\"setSecurityGuard\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"giverId\",\"type\":\"uint64\"},{\"name\":\"receiverId\",\"type\":\"uint64\"}],\"name\":\"donate\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"timeLock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwnerCandidate\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newEscapeHatchCaller\",\"type\":\"address\"}],\"name\":\"changeHatchEscapeCaller\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedSpenders\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maxSecurityGuardDelay\",\"type\":\"uint256\"}],\"name\":\"setMaxSecurityGuardDelay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"absoluteMinTimeLock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_reference\",\"type\":\"bytes32\"},{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_paymentDelay\",\"type\":\"uint256\"}],\"name\":\"authorizePayment\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"escapeHatchDestination\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_escapeHatchCaller\",\"type\":\"address\"},{\"name\":\"_escapeHatchDestination\",\"type\":\"address\"},{\"name\":\"_absoluteMinTimeLock\",\"type\":\"uint256\"},{\"name\":\"_timeLock\",\"type\":\"uint256\"},{\"name\":\"_securityGuard\",\"type\":\"address\"},{\"name\":\"_maxSecurityGuardDelay\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"giverId\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"receiverId\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Donate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"giver\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"receiverId\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DonateAndCreateGiver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EscapeFundsCalled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"idPayment\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"reference\",\"type\":\"bytes32\"}],\"name\":\"PaymentAuthorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"idPayment\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"}],\"name\":\"PaymentExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"idPayment\",\"type\":\"uint256\"}],\"name\":\"PaymentCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"authorized\",\"type\":\"bool\"}],\"name\":\"SpenderAuthorization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"}],\"name\":\"EscapeHatchBlackistedToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EscapeHatchCalled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"by\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"OwnershipRemoved\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"authorizePayment(string,bytes32,address,address,uint256,uint256)\":{\"params\":{\"_amount\":\"Amount to be paid in wei\",\"_name\":\"Brief description of the payment that is authorized\",\"_paymentDelay\":\"Number of miliseconds the payment is to be delayed, if  this value is below `timeLock` then the `timeLock` determines the delay\",\"_recipient\":\"Destination of the payment\",\"_reference\":\"External reference of the payment\"},\"return\":\"The Payment ID number for the new authorized payment\"},\"authorizeSpender(address,bool)\":{\"params\":{\"_authorize\":\"`true` if authorizing and `false` if unauthorizing\",\"_spender\":\"The address of the contract being authorized/unauthorized\"}},\"cancelPayment(uint256)\":{\"params\":{\"_idPayment\":\"ID of the payment to be canceled.\"}},\"changeHatchEscapeCaller(address)\":{\"params\":{\"_newEscapeHatchCaller\":\"The address of a trusted account or  contract to call `escapeHatch()` to send the value in this contract to  the `escapeHatchDestination`; it would be ideal that `escapeHatchCaller`  cannot move funds out of `escapeHatchDestination`\"}},\"changeOwnership(address)\":{\"details\":\"In this 2nd option for ownership transfer `changeOwnership()` can  be called and it will immediately assign ownership to the `newOwner`\",\"params\":{\"_newOwner\":\"The address of the new owner\"}},\"collectAuthorizedPayment(uint256)\":{\"params\":{\"_idPayment\":\"The payment ID to be executed\"}},\"delayPayment(uint256,uint256)\":{\"params\":{\"_delay\":\"The number of miliseconds to delay the payment\",\"_idPayment\":\"ID of the payment to be delayed\"}},\"escapeFunds(address,uint256)\":{\"params\":{\"_amount\":\"to transfer\",\"_token\":\"to transfer\"}},\"escapeHatch(address)\":{\"params\":{\"_token\":\"to transfer, use 0x0 for ether\"}},\"isTokenEscapable(address)\":{\"params\":{\"_token\":\"the token address being queried\"},\"return\":\"False if `_token` is in the blacklist and can't be taken out of  the contract via the `escapeHatch()`\"},\"numberOfAuthorizedPayments()\":{\"return\":\"The number of payments ever authorized even if they were canceled\"},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"proposeOwnership(address)\":{\"details\":\"In this 1st option for ownership transfer `proposeOwnership()` must  be called first by the current `owner` then `acceptOwnership()` must be  called by the `newOwnerCandidate`\",\"params\":{\"_newOwnerCandidate\":\"The address being proposed as the new owner\"}},\"removeOwnership(address)\":{\"details\":\"In this 3rd option for ownership transfer `removeOwnership()` can  be called and it will immediately assign ownership to the 0x0 address;  it requires a 0xdece be input as a parameter to prevent accidental use\",\"params\":{\"_dac\":\"`0xdac` has to be entered for this function to work\"}},\"setMaxSecurityGuardDelay(uint256)\":{\"params\":{\"_maxSecurityGuardDelay\":\"The new maximum delay in seconds that  `securityGuard` can delay the payment's execution in total\"}},\"setMockedTime(uint256)\":{\"details\":\"`setMockedTime` is a basic setter function for  the mock_time parameter\",\"params\":{\"_t\":\"This is the value to which the mocked time  will be set.\"}},\"setSecurityGuard(address)\":{\"params\":{\"_newSecurityGuard\":\"Address of the new security guard\"}},\"setTimelock(uint256)\":{\"params\":{\"_newTimeLock\":\"Sets the new minimum default `timeLock` in miliseconds;  pending payments maintain their `earliestPayTime`\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}}},\"userdoc\":{\"methods\":{\"acceptOwnership()\":{\"notice\":\"Can only be called by the `newOwnerCandidate`, accepts the  transfer of ownership\"},\"authorizePayment(string,bytes32,address,address,uint256,uint256)\":{\"notice\":\"/////only `allowedSpenders[]` Creates a new `Payment`\"},\"authorizeSpender(address,bool)\":{\"notice\":\"`onlyOwner` Adds a spender to the `allowedSpenders[]` white list\"},\"cancelPayment(uint256)\":{\"notice\":\"////`onlyOwner` Cancel a payment all together\"},\"changeHatchEscapeCaller(address)\":{\"notice\":\"Changes the address assigned to call `escapeHatch()`\"},\"changeOwnership(address)\":{\"notice\":\"`owner` can step down and assign some other address to this role\"},\"collectAuthorizedPayment(uint256)\":{\"notice\":\"only `allowedSpenders[]` The recipient of a payment calls this  function to send themselves the ether after the `earliestPayTime` has  expired\"},\"delayPayment(uint256,uint256)\":{\"notice\":\"//////`onlySecurityGuard` Delays a payment for a set number of miliseconds\"},\"escapeFunds(address,uint256)\":{\"notice\":\"Transfer tokens/eth to the escapeHatchDestination. Used as a safety mechanism to prevent the bridge from holding too much value before being thoroughly battle-tested.\"},\"escapeHatch(address)\":{\"notice\":\"The `escapeHatch()` should only be called as a last resort if a security issue is uncovered or something unexpected happened\"},\"isTokenEscapable(address)\":{\"notice\":\"Checks to see if `_token` is in the blacklist of tokens\"},\"numberOfAuthorizedPayments()\":{\"notice\":\"//////States the total number of authorized payments in this contract\"},\"proposeOwnership(address)\":{\"notice\":\"`onlyOwner` Proposes to transfer control of the contract to a  new owner\"},\"removeOwnership(address)\":{\"notice\":\"Decentralizes the contract, this operation cannot be undone \"},\"setMaxSecurityGuardDelay(uint256)\":{\"notice\":\"`onlyOwner` Changes the maximum number of miliseconds `securityGuard` can delay a payment\"},\"setSecurityGuard(address)\":{\"notice\":\"`onlyOwner` Sets the address of `securityGuard`\"},\"setTimelock(uint256)\":{\"notice\":\"`onlyOwner` Changes `timeLock`; the new `timeLock` cannot be  lower than `absoluteMinTimeLock`\"}}}},\"settings\":{\"compilationTarget\":{\"./contracts/GivethBridgeMock.sol\":\"GivethBridgeMock\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"./contracts/GivethBridge.sol\":{\"content\":\"pragma solidity ^0.4.21;\\n\\n/*\\n    Copyright 2017, RJ Ewing <perissology@protonmail.com>\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n*/\\n\\nimport \\\"giveth-common-contracts/contracts/ERC20.sol\\\";\\nimport \\\"./lib/Vault.sol\\\";\\n\\n// @notice NOTICE: It is not recommened to call this function outside of the giveth dapp (giveth.io)\\n// this function is bridged to a side chain. If for some reason the sidechain tx fails, the donation\\n// will end up in the givers control inside LiquidPledging contract. If you do not use the dapp, there\\n// will be no way of notifying the sender/giver that the giver has to take action (withdraw/donate) in\\n// the dapp\\ncontract GivethBridge is Vault {\\n\\n    mapping(address => bool) tokenWhitelist;\\n\\n    event Donate(uint64 giverId, uint64 receiverId, address token, uint amount);\\n    event DonateAndCreateGiver(address giver, uint64 receiverId, address token, uint amount);\\n    event EscapeFundsCalled(address token, uint amount);\\n\\n    //== constructor\\n\\n    /// @param _escapeHatchCaller The address of a trusted account or contract to\\n    ///  call `escapeHatch()` to send the ether in this contract to the\\n    ///  `escapeHatchDestination` it would be ideal if `escapeHatchCaller` cannot move\\n    ///  funds out of `escapeHatchDestination`\\n    /// @param _escapeHatchDestination The address of a safe location (usu a\\n    ///  Multisig) to send the ether held in this contract in an emergency\\n    /// @param _absoluteMinTimeLock The minimum number of seconds `timelock` can\\n    ///  be set to, if set to 0 the `owner` can remove the `timeLock` completely\\n    /// @param _timeLock Initial number of seconds that payments are delayed\\n    ///  after they are authorized (a security precaution)\\n    /// @param _securityGuard Address that will be able to delay the payments\\n    ///  beyond the initial timelock requirements; can be set to 0x0 to remove\\n    ///  the `securityGuard` functionality\\n    /// @param _maxSecurityGuardDelay The maximum number of seconds in total\\n    ///   that `securityGuard` can delay a payment so that the owner can cancel\\n    ///   the payment if needed\\n    function GivethBridge(\\n        address _escapeHatchCaller,\\n        address _escapeHatchDestination,\\n        uint _absoluteMinTimeLock,\\n        uint _timeLock,\\n        address _securityGuard,\\n        uint _maxSecurityGuardDelay\\n    ) Vault(\\n        _escapeHatchCaller,\\n        _escapeHatchDestination,\\n        _absoluteMinTimeLock,\\n        _timeLock,\\n        _securityGuard,\\n        _maxSecurityGuardDelay\\n    ) public\\n    {\\n        tokenWhitelist[0] = true; // enable eth transfers\\n    }\\n\\n    //== public methods\\n\\n    // @notice NOTICE: It is not recommened to call this function outside of the giveth dapp (giveth.io)\\n    // this function is bridged to a side chain. If for some reason the sidechain tx fails, the donation\\n    // will end up in the givers control inside LiquidPledging contract. If you do not use the dapp, there\\n    // will be no way of notifying the sender/giver that the giver has to take action (withdraw/donate) in\\n    // the dapp\\n    function donateAndCreateGiver(address giver, uint64 receiverId) payable external {\\n        donateAndCreateGiver(giver, receiverId, 0, 0);\\n    }\\n\\n    // @notice NOTICE: It is not recommened to call this function outside of the giveth dapp (giveth.io)\\n    // this function is bridged to a side chain. If for some reason the sidechain tx fails, the donation\\n    // will end up in the givers control inside LiquidPledging contract. If you do not use the dapp, there\\n    // will be no way of notifying the sender/giver that the giver has to take action (withdraw/donate) in\\n    // the dapp\\n    function donateAndCreateGiver(address giver, uint64 receiverId, address token, uint _amount) whenNotPaused payable public {\\n        require(giver != 0);\\n        require(receiverId != 0);\\n        uint amount = _receiveDonation(token, _amount);\\n        emit DonateAndCreateGiver(giver, receiverId, token, amount);\\n    }\\n\\n    // @notice NOTICE: It is not recommened to call this function outside of the giveth dapp (giveth.io)\\n    // this function is bridged to a side chain. If for some reason the sidechain tx fails, the donation\\n    // will end up in the givers control inside LiquidPledging contract. If you do not use the dapp, there\\n    // will be no way of notifying the sender/giver that the giver has to take action (withdraw/donate) in\\n    // the dapp\\n    function donate(uint64 giverId, uint64 receiverId) payable external {\\n        donate(giverId, receiverId, 0, 0);\\n    }\\n\\n    // @notice NOTICE: It is not recommened to call this function outside of the giveth dapp (giveth.io)\\n    // this function is bridged to a side chain. If for some reason the sidechain tx fails, the donation\\n    // will end up in the givers control inside LiquidPledging contract. If you do not use the dapp, there\\n    // will be no way of notifying the sender/giver that the giver has to take action (withdraw/donate) in\\n    // the dapp\\n    function donate(uint64 giverId, uint64 receiverId, address token, uint _amount) whenNotPaused payable public {\\n        require(giverId != 0);\\n        require(receiverId != 0);\\n        uint amount = _receiveDonation(token, _amount);\\n        emit Donate(giverId, receiverId, token, amount);\\n    }\\n\\n    function whitelistToken(address token, bool accepted) whenNotPaused onlyOwner external {\\n        tokenWhitelist[token] = accepted;\\n    }\\n\\n    /// Transfer tokens/eth to the escapeHatchDestination.\\n    /// Used as a safety mechanism to prevent the bridge from holding too much value\\n    /// before being thoroughly battle-tested.\\n    /// @param _token to transfer\\n    /// @param _amount to transfer\\n    function escapeFunds(address _token, uint _amount) external onlyEscapeHatchCallerOrOwner {\\n        /// @dev Logic for ether\\n        if (_token == 0) {\\n            escapeHatchDestination.transfer(_amount);\\n            emit EscapeFundsCalled(_token, _amount);\\n            return;\\n        }\\n        /// @dev Logic for tokens\\n        ERC20 token = ERC20(_token);\\n        require(token.transfer(escapeHatchDestination, _amount));\\n        emit EscapeFundsCalled(_token, _amount);\\n    }\\n\\n    function _receiveDonation(address token, uint _amount) internal returns(uint amount) {\\n        require(tokenWhitelist[token]);\\n        amount = _amount;\\n\\n        // eth donation\\n        if (token == 0) {\\n            amount = msg.value;\\n        }\\n\\n        require(amount > 0);\\n\\n        if (token != 0) {\\n            require(ERC20(token).transferFrom(msg.sender, this, amount));\\n        }\\n    }\\n}\",\"keccak256\":\"0xb497f47a2ce2d4ea1f85a3239671e844e4a70551e97329f48e1fb7fecb570c83\"},\"./contracts/GivethBridgeMock.sol\":{\"content\":\"pragma solidity ^0.4.21;\\n/*\\n    Copyright 2017, RJ Ewing\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n*/\\n\\nimport \\\"./GivethBridge.sol\\\";\\n\\n/// @dev `GivethBridgeMock` allows for mocking up\\n///  a `GivethBridge` contract with the added ability\\n///  to manipulate the block time for testing purposes.\\ncontract GivethBridgeMock is GivethBridge {\\n\\n    uint public mock_time;\\n\\n    function GivethBridgeMock(\\n        address _escapeHatchCaller,\\n        address _escapeHatchDestination,\\n        uint _absoluteMinTimeLock,\\n        uint _timeLock,\\n        address _securityGuard,\\n        uint _maxSecurityGuardDelay\\n    ) GivethBridge(\\n        _escapeHatchCaller,\\n        _escapeHatchDestination,\\n        _absoluteMinTimeLock,\\n        _timeLock,\\n        _securityGuard,\\n        _maxSecurityGuardDelay\\n    ) public\\n    {\\n    }\\n\\n    /// @dev `_getTime` is a basic getter function for\\n    ///  the mock_time parameter\\n    function _getTime() internal view returns (uint) {\\n        return mock_time;\\n    }\\n\\n    /// @dev `setMockedTime` is a basic setter function for\\n    ///  the mock_time parameter\\n    /// @param _t This is the value to which the mocked time\\n    ///  will be set.\\n    function setMockedTime(uint _t) public {\\n        mock_time = _t;\\n    }\\n}\",\"keccak256\":\"0x1a5a2094e0b3170615ca2f7af3cd6b80e293a5f605b51bcb053ccfe164d65343\"},\"./contracts/lib/Pausable.sol\":{\"content\":\"pragma solidity ^0.4.21;\\n\\nimport \\\"giveth-common-contracts/contracts/Owned.sol\\\";\\n\\n/**\\n * @title Pausable\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\n */\\ncontract Pausable is Owned {\\n    event Pause();\\n    event Unpause();\\n\\n    bool public paused = false;\\n\\n    /**\\n    * @dev Modifier to make a function callable only when the contract is not paused.\\n    */\\n    modifier whenNotPaused() {\\n        require(!paused);\\n        _;\\n    }\\n\\n    /**\\n    * @dev Modifier to make a function callable only when the contract is paused.\\n    */\\n    modifier whenPaused() {\\n        require(paused);\\n        _;\\n    }\\n\\n    /**\\n    * @dev called by the owner to pause, triggers stopped state\\n    */\\n    function pause() onlyOwner whenNotPaused public {\\n        paused = true;\\n        emit Pause();\\n    }\\n\\n    /**\\n    * @dev called by the owner to unpause, returns to normal state\\n    */\\n    function unpause() onlyOwner whenPaused public {\\n        paused = false;\\n        emit Unpause();\\n    }\\n}\",\"keccak256\":\"0xd134809350f024c16096d995915c6a348d770e1ec633723419f4f3acbd1e4b46\"},\"./contracts/lib/Vault.sol\":{\"content\":\"pragma solidity ^0.4.21;\\n\\n/*\\n    Copyright 2016, Jordi Baylina, RJ Ewing\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n\\n/// @title Vault Contract\\n/// @author Jordi Baylina, RJ Ewing\\n/// @notice This contract holds funds for Campaigns and automates payments. For\\n///  this iteration the funds will come straight from the Giveth Multisig as a\\n///  safety precaution, but once fully tested and optimized this contract will\\n///  be a safe place to store funds equipped with optional variable time delays\\n///  to allow for an optional escape hatch\\n\\nimport \\\"giveth-common-contracts/contracts/Escapable.sol\\\";\\nimport \\\"./Pausable.sol\\\";\\n\\n/// @dev `Vault` is a higher level contract built off of the `Escapable`\\n///  contract that holds funds for Campaigns and automates payments.\\ncontract Vault is Escapable, Pausable {\\n\\n    /// @dev `Payment` is a public structure that describes the details of\\n    ///  each payment making it easy to track the movement of funds\\n    ///  transparently\\n    struct Payment {\\n        string name;     // What is the purpose of this payment\\n        bytes32 reference;  // Reference of the payment.\\n        address spender;        // Who is sending the funds\\n        uint earliestPayTime;   // The earliest a payment can be made (Unix Time)\\n        bool canceled;         // If True then the payment has been canceled\\n        bool paid;              // If True then the payment has been paid\\n        address recipient;      // Who is receiving the funds\\n        address token;          // Token this payment represents\\n        uint amount;            // The amount of wei sent in the payment\\n        uint securityGuardDelay;// The miliseconds `securityGuard` can delay payment\\n    }\\n\\n    Payment[] public authorizedPayments;\\n\\n    address public securityGuard;\\n    uint public absoluteMinTimeLock;\\n    uint public timeLock;\\n    uint public maxSecurityGuardDelay;\\n\\n    /// @dev The white list of approved addresses allowed to set up && receive\\n    ///  payments from this vault\\n    mapping (address => bool) public allowedSpenders;\\n\\n    // @dev Events to make the payment movements easy to find on the blockchain\\n    event PaymentAuthorized(uint indexed idPayment, address indexed recipient, uint amount, address token, bytes32 reference);\\n    event PaymentExecuted(uint indexed idPayment, address indexed recipient, uint amount, address token);\\n    event PaymentCanceled(uint indexed idPayment);\\n    event SpenderAuthorization(address indexed spender, bool authorized);\\n\\n    /// @dev The address assigned the role of `securityGuard` is the only\\n    ///  addresses that can call a function with this modifier\\n    modifier onlySecurityGuard { \\n        require(msg.sender == securityGuard);\\n        _;\\n    }\\n\\n    /// @notice The Constructor creates the Vault on the blockchain\\n    /// @param _escapeHatchCaller The address of a trusted account or contract to\\n    ///  call `escapeHatch()` to send the ether in this contract to the\\n    ///  `escapeHatchDestination` it would be ideal if `escapeHatchCaller` cannot move\\n    ///  funds out of `escapeHatchDestination`\\n    /// @param _escapeHatchDestination The address of a safe location (usu a\\n    ///  Multisig) to send the ether held in this contract in an emergency\\n    /// @param _absoluteMinTimeLock The minimum number of seconds `timelock` can\\n    ///  be set to, if set to 0 the `owner` can remove the `timeLock` completely\\n    /// @param _timeLock Initial number of seconds that payments are delayed\\n    ///  after they are authorized (a security precaution)\\n    /// @param _securityGuard Address that will be able to delay the payments\\n    ///  beyond the initial timelock requirements; can be set to 0x0 to remove\\n    ///  the `securityGuard` functionality\\n    /// @param _maxSecurityGuardDelay The maximum number of seconds in total\\n    ///   that `securityGuard` can delay a payment so that the owner can cancel\\n    ///   the payment if needed\\n    function Vault(\\n        address _escapeHatchCaller,\\n        address _escapeHatchDestination,\\n        uint _absoluteMinTimeLock,\\n        uint _timeLock,\\n        address _securityGuard,\\n        uint _maxSecurityGuardDelay\\n    ) Escapable(_escapeHatchCaller, _escapeHatchDestination) public\\n    {\\n        absoluteMinTimeLock = _absoluteMinTimeLock;\\n        timeLock = _timeLock;\\n        securityGuard = _securityGuard;\\n        maxSecurityGuardDelay = _maxSecurityGuardDelay;\\n    }\\n\\n/////////\\n// Helper functions\\n/////////\\n\\n    /// @notice States the total number of authorized payments in this contract\\n    /// @return The number of payments ever authorized even if they were canceled\\n    function numberOfAuthorizedPayments() public view returns (uint) {\\n        return authorizedPayments.length;\\n    }\\n\\n////////\\n// Spender Interface\\n////////\\n\\n    /// @notice only `allowedSpenders[]` Creates a new `Payment`\\n    /// @param _name Brief description of the payment that is authorized\\n    /// @param _reference External reference of the payment\\n    /// @param _recipient Destination of the payment\\n    /// @param _amount Amount to be paid in wei\\n    /// @param _paymentDelay Number of miliseconds the payment is to be delayed, if\\n    ///  this value is below `timeLock` then the `timeLock` determines the delay\\n    /// @return The Payment ID number for the new authorized payment\\n    function authorizePayment(\\n        string _name,\\n        bytes32 _reference,\\n        address _recipient,\\n        address _token,\\n        uint _amount,\\n        uint _paymentDelay\\n    ) whenNotPaused external returns(uint) {\\n\\n        // Fail if you arent on the `allowedSpenders` white list\\n        require(allowedSpenders[msg.sender]);\\n        uint idPayment = authorizedPayments.length;       // Unique Payment ID\\n        authorizedPayments.length++;\\n\\n        // The following lines fill out the payment struct\\n        Payment storage p = authorizedPayments[idPayment];\\n        p.spender = msg.sender;\\n\\n        // Overflow protection\\n        require(_paymentDelay <= 10**18);\\n\\n        // Determines the earliest the recipient can receive payment (Unix time)\\n        p.earliestPayTime = _paymentDelay >= timeLock ?\\n                                _getTime() + _paymentDelay :\\n                                _getTime() + timeLock;\\n        p.recipient = _recipient;\\n        p.amount = _amount;\\n        p.name = _name;\\n        p.reference = _reference;\\n        p.token = _token;\\n        emit PaymentAuthorized(idPayment, p.recipient, p.amount, p.token, p.reference);\\n        return idPayment;\\n    }\\n\\n    /// @notice only `allowedSpenders[]` The recipient of a payment calls this\\n    ///  function to send themselves the ether after the `earliestPayTime` has\\n    ///  expired\\n    /// @param _idPayment The payment ID to be executed\\n    function collectAuthorizedPayment(uint _idPayment) whenNotPaused external {\\n\\n        // Check that the `_idPayment` has been added to the payments struct\\n        require(_idPayment < authorizedPayments.length);\\n\\n        Payment storage p = authorizedPayments[_idPayment];\\n\\n        // Checking for reasons not to execute the payment\\n        require(msg.sender == p.recipient);\\n        require(allowedSpenders[p.spender]);\\n        require(_getTime() >= p.earliestPayTime);\\n        require(!p.canceled);\\n        require(!p.paid);\\n        // if (this.balance < p.amount);\\n\\n        p.paid = true; // Set the payment to being paid\\n\\n        // Make the payment\\n        if (p.token == 0) {\\n            p.recipient.transfer(p.amount);\\n        } else {\\n            require(ERC20(p.token).transfer(p.recipient, p.amount));\\n        }\\n\\n        emit PaymentExecuted(_idPayment, p.recipient, p.amount, p.token);\\n    }\\n\\n/////////\\n// SecurityGuard Interface\\n/////////\\n\\n    /// @notice `onlySecurityGuard` Delays a payment for a set number of miliseconds\\n    /// @param _idPayment ID of the payment to be delayed\\n    /// @param _delay The number of miliseconds to delay the payment\\n    function delayPayment(uint _idPayment, uint _delay) onlySecurityGuard external {\\n        require(_idPayment < authorizedPayments.length);\\n\\n        // Overflow test\\n        require(_delay <= 10**18);\\n\\n        Payment storage p = authorizedPayments[_idPayment];\\n\\n        require(p.securityGuardDelay + _delay <= maxSecurityGuardDelay);\\n        require(!p.paid);\\n        require(!p.canceled);\\n\\n        p.securityGuardDelay += _delay;\\n        p.earliestPayTime += _delay;\\n    }\\n\\n////////\\n// Owner Interface\\n///////\\n\\n    /// @notice `onlyOwner` Cancel a payment all together\\n    /// @param _idPayment ID of the payment to be canceled.\\n    function cancelPayment(uint _idPayment) onlyOwner external {\\n        require(_idPayment < authorizedPayments.length);\\n\\n        Payment storage p = authorizedPayments[_idPayment];\\n\\n\\n        require(!p.canceled);\\n        require(!p.paid);\\n\\n        p.canceled = true;\\n        emit PaymentCanceled(_idPayment);\\n    }\\n\\n    /// @notice `onlyOwner` Adds a spender to the `allowedSpenders[]` white list\\n    /// @param _spender The address of the contract being authorized/unauthorized\\n    /// @param _authorize `true` if authorizing and `false` if unauthorizing\\n    function authorizeSpender(address _spender, bool _authorize) onlyOwner external {\\n        allowedSpenders[_spender] = _authorize;\\n        emit SpenderAuthorization(_spender, _authorize);\\n    }\\n\\n    /// @notice `onlyOwner` Sets the address of `securityGuard`\\n    /// @param _newSecurityGuard Address of the new security guard\\n    function setSecurityGuard(address _newSecurityGuard) onlyOwner external {\\n        securityGuard = _newSecurityGuard;\\n    }\\n\\n    /// @notice `onlyOwner` Changes `timeLock`; the new `timeLock` cannot be\\n    ///  lower than `absoluteMinTimeLock`\\n    /// @param _newTimeLock Sets the new minimum default `timeLock` in miliseconds;\\n    ///  pending payments maintain their `earliestPayTime`\\n    function setTimelock(uint _newTimeLock) onlyOwner external {\\n        require(_newTimeLock >= absoluteMinTimeLock);\\n        timeLock = _newTimeLock;\\n    }\\n\\n    /// @notice `onlyOwner` Changes the maximum number of miliseconds\\n    /// `securityGuard` can delay a payment\\n    /// @param _maxSecurityGuardDelay The new maximum delay in seconds that\\n    ///  `securityGuard` can delay the payment's execution in total\\n    function setMaxSecurityGuardDelay(uint _maxSecurityGuardDelay) onlyOwner external {\\n        maxSecurityGuardDelay = _maxSecurityGuardDelay;\\n    }\\n\\n    // for overidding during testing\\n    function _getTime() internal view returns (uint) {\\n        return now;\\n    }\\n}\",\"keccak256\":\"0xe1c8b2120faa1df5e2765f0591db0040f0f5259180f62b695686c7012812dfc5\"},\"giveth-common-contracts/contracts/ERC20.sol\":{\"content\":\"pragma solidity ^0.4.19;\\n\\n\\n/**\\n * @title ERC20\\n * @dev A standard interface for tokens.\\n * @dev https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\\n */\\ncontract ERC20 {\\n  \\n    /// @dev Returns the total token supply\\n    function totalSupply() public constant returns (uint256 supply);\\n\\n    /// @dev Returns the account balance of the account with address _owner\\n    function balanceOf(address _owner) public constant returns (uint256 balance);\\n\\n    /// @dev Transfers _value number of tokens to address _to\\n    function transfer(address _to, uint256 _value) public returns (bool success);\\n\\n    /// @dev Transfers _value number of tokens from address _from to address _to\\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\\n\\n    /// @dev Allows _spender to withdraw from the msg.sender's account up to the _value amount\\n    function approve(address _spender, uint256 _value) public returns (bool success);\\n\\n    /// @dev Returns the amount which _spender is still allowed to withdraw from _owner\\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining);\\n\\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\\n\\n}\\n\",\"keccak256\":\"0xe58902b5bdf9f918c6ec8ee4da44bf87faf225098fae84671ab07b46af427338\"},\"giveth-common-contracts/contracts/Escapable.sol\":{\"content\":\"pragma solidity ^0.4.19;\\n/*\\n    Copyright 2016, Jordi Baylina\\n    Contributor: Adrià Massanet <adria@codecontext.io>\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n*/\\n\\nimport \\\"./Owned.sol\\\";\\nimport \\\"./ERC20.sol\\\";\\n\\n\\n/// @dev `Escapable` is a base level contract built off of the `Owned`\\n///  contract; it creates an escape hatch function that can be called in an\\n///  emergency that will allow designated addresses to send any ether or tokens\\n///  held in the contract to an `escapeHatchDestination` as long as they were\\n///  not blacklisted\\ncontract Escapable is Owned {\\n    address public escapeHatchCaller;\\n    address public escapeHatchDestination;\\n    mapping (address=>bool) private escapeBlacklist; // Token contract addresses\\n\\n    /// @notice The Constructor assigns the `escapeHatchDestination` and the\\n    ///  `escapeHatchCaller`\\n    /// @param _escapeHatchCaller The address of a trusted account or contract\\n    ///  to call `escapeHatch()` to send the ether in this contract to the\\n    ///  `escapeHatchDestination` it would be ideal that `escapeHatchCaller`\\n    ///  cannot move funds out of `escapeHatchDestination`\\n    /// @param _escapeHatchDestination The address of a safe location (usu a\\n    ///  Multisig) to send the ether held in this contract; if a neutral address\\n    ///  is required, the WHG Multisig is an option:\\n    ///  0x8Ff920020c8AD673661c8117f2855C384758C572 \\n    function Escapable(address _escapeHatchCaller, address _escapeHatchDestination) public {\\n        escapeHatchCaller = _escapeHatchCaller;\\n        escapeHatchDestination = _escapeHatchDestination;\\n    }\\n\\n    /// @dev The addresses preassigned as `escapeHatchCaller` or `owner`\\n    ///  are the only addresses that can call a function with this modifier\\n    modifier onlyEscapeHatchCallerOrOwner {\\n        require ((msg.sender == escapeHatchCaller)||(msg.sender == owner));\\n        _;\\n    }\\n\\n    /// @notice Creates the blacklist of tokens that are not able to be taken\\n    ///  out of the contract; can only be done at the deployment, and the logic\\n    ///  to add to the blacklist will be in the constructor of a child contract\\n    /// @param _token the token contract address that is to be blacklisted \\n    function blacklistEscapeToken(address _token) internal {\\n        escapeBlacklist[_token] = true;\\n        EscapeHatchBlackistedToken(_token);\\n    }\\n\\n    /// @notice Checks to see if `_token` is in the blacklist of tokens\\n    /// @param _token the token address being queried\\n    /// @return False if `_token` is in the blacklist and can't be taken out of\\n    ///  the contract via the `escapeHatch()`\\n    function isTokenEscapable(address _token) view public returns (bool) {\\n        return !escapeBlacklist[_token];\\n    }\\n\\n    /// @notice The `escapeHatch()` should only be called as a last resort if a\\n    /// security issue is uncovered or something unexpected happened\\n    /// @param _token to transfer, use 0x0 for ether\\n    function escapeHatch(address _token) public onlyEscapeHatchCallerOrOwner {   \\n        require(escapeBlacklist[_token]==false);\\n\\n        uint256 balance;\\n\\n        /// @dev Logic for ether\\n        if (_token == 0x0) {\\n            balance = this.balance;\\n            escapeHatchDestination.transfer(balance);\\n            EscapeHatchCalled(_token, balance);\\n            return;\\n        }\\n        /// @dev Logic for tokens\\n        ERC20 token = ERC20(_token);\\n        balance = token.balanceOf(this);\\n        require(token.transfer(escapeHatchDestination, balance));\\n        EscapeHatchCalled(_token, balance);\\n    }\\n\\n    /// @notice Changes the address assigned to call `escapeHatch()`\\n    /// @param _newEscapeHatchCaller The address of a trusted account or\\n    ///  contract to call `escapeHatch()` to send the value in this contract to\\n    ///  the `escapeHatchDestination`; it would be ideal that `escapeHatchCaller`\\n    ///  cannot move funds out of `escapeHatchDestination`\\n    function changeHatchEscapeCaller(address _newEscapeHatchCaller) public onlyEscapeHatchCallerOrOwner {\\n        escapeHatchCaller = _newEscapeHatchCaller;\\n    }\\n\\n    event EscapeHatchBlackistedToken(address token);\\n    event EscapeHatchCalled(address token, uint amount);\\n}\\n\",\"keccak256\":\"0xd5d7b1a916841b21cfdee2bc9de4a178820421252b0c764070d78e846cd4511d\"},\"giveth-common-contracts/contracts/Owned.sol\":{\"content\":\"pragma solidity ^0.4.19;\\n\\n\\n/// @title Owned\\n/// @author Adrià Massanet <adria@codecontext.io>\\n/// @notice The Owned contract has an owner address, and provides basic \\n///  authorization control functions, this simplifies & the implementation of\\n///  user permissions; this contract has three work flows for a change in\\n///  ownership, the first requires the new owner to validate that they have the\\n///  ability to accept ownership, the second allows the ownership to be\\n///  directly transfered without requiring acceptance, and the third allows for\\n///  the ownership to be removed to allow for decentralization \\ncontract Owned {\\n\\n    address public owner;\\n    address public newOwnerCandidate;\\n\\n    event OwnershipRequested(address indexed by, address indexed to);\\n    event OwnershipTransferred(address indexed from, address indexed to);\\n    event OwnershipRemoved();\\n\\n    /// @dev The constructor sets the `msg.sender` as the`owner` of the contract\\n    function Owned() public {\\n        owner = msg.sender;\\n    }\\n\\n    /// @dev `owner` is the only address that can call a function with this\\n    /// modifier\\n    modifier onlyOwner() {\\n        require (msg.sender == owner);\\n        _;\\n    }\\n    \\n    /// @dev In this 1st option for ownership transfer `proposeOwnership()` must\\n    ///  be called first by the current `owner` then `acceptOwnership()` must be\\n    ///  called by the `newOwnerCandidate`\\n    /// @notice `onlyOwner` Proposes to transfer control of the contract to a\\n    ///  new owner\\n    /// @param _newOwnerCandidate The address being proposed as the new owner\\n    function proposeOwnership(address _newOwnerCandidate) public onlyOwner {\\n        newOwnerCandidate = _newOwnerCandidate;\\n        OwnershipRequested(msg.sender, newOwnerCandidate);\\n    }\\n\\n    /// @notice Can only be called by the `newOwnerCandidate`, accepts the\\n    ///  transfer of ownership\\n    function acceptOwnership() public {\\n        require(msg.sender == newOwnerCandidate);\\n\\n        address oldOwner = owner;\\n        owner = newOwnerCandidate;\\n        newOwnerCandidate = 0x0;\\n\\n        OwnershipTransferred(oldOwner, owner);\\n    }\\n\\n    /// @dev In this 2nd option for ownership transfer `changeOwnership()` can\\n    ///  be called and it will immediately assign ownership to the `newOwner`\\n    /// @notice `owner` can step down and assign some other address to this role\\n    /// @param _newOwner The address of the new owner\\n    function changeOwnership(address _newOwner) public onlyOwner {\\n        require(_newOwner != 0x0);\\n\\n        address oldOwner = owner;\\n        owner = _newOwner;\\n        newOwnerCandidate = 0x0;\\n\\n        OwnershipTransferred(oldOwner, owner);\\n    }\\n\\n    /// @dev In this 3rd option for ownership transfer `removeOwnership()` can\\n    ///  be called and it will immediately assign ownership to the 0x0 address;\\n    ///  it requires a 0xdece be input as a parameter to prevent accidental use\\n    /// @notice Decentralizes the contract, this operation cannot be undone \\n    /// @param _dac `0xdac` has to be entered for this function to work\\n    function removeOwnership(address _dac) public onlyOwner {\\n        require(_dac == 0xdac);\\n        owner = 0x0;\\n        newOwnerCandidate = 0x0;\\n        OwnershipRemoved();     \\n    }\\n} \\n\",\"keccak256\":\"0xc7d1401775fb1b41187de281757de68718fe27ba2660ba4bb194436aab7d0213\"}},\"version\":1}"
      }
    },
    "./contracts/lib/Pausable.sol": {
      "Pausable": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newOwner",
                "type": "address"
              }
            ],
            "name": "changeOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "unpause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "paused",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_dac",
                "type": "address"
              }
            ],
            "name": "removeOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newOwnerCandidate",
                "type": "address"
              }
            ],
            "name": "proposeOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "acceptOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "pause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "newOwnerCandidate",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "Pause",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "Unpause",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "by",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              }
            ],
            "name": "OwnershipRequested",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "OwnershipRemoved",
            "type": "event"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "60606040526001805460a060020a60ff021916905560008054600160a060020a033316600160a060020a0319909116179055610575806100406000396000f3006060604052600436106100985763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416632af4c31e811461009d5780633f4ba83a146100be5780635c975abb146100d1578063666a3427146100f8578063710bf3221461011757806379ba5097146101365780638456cb59146101495780638da5cb5b1461015c578063d091b5501461018b575b600080fd5b34156100a857600080fd5b6100bc600160a060020a036004351661019e565b005b34156100c957600080fd5b6100bc61023f565b34156100dc57600080fd5b6100e46102cf565b604051901515815260200160405180910390f35b341561010357600080fd5b6100bc600160a060020a03600435166102f0565b341561012257600080fd5b6100bc600160a060020a036004351661037a565b341561014157600080fd5b6100bc6103f8565b341561015457600080fd5b6100bc610485565b341561016757600080fd5b61016f61052b565b604051600160a060020a03909116815260200160405180910390f35b341561019657600080fd5b61016f61053a565b6000805433600160a060020a039081169116146101ba57600080fd5b600160a060020a03821615156101cf57600080fd5b5060008054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff1980841691909117938490556001805490911690559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60005433600160a060020a0390811691161461025a57600080fd5b60015474010000000000000000000000000000000000000000900460ff16151561028357600080fd5b6001805474ff0000000000000000000000000000000000000000191690557f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b60015474010000000000000000000000000000000000000000900460ff1681565b60005433600160a060020a0390811691161461030b57600080fd5b610dac600160a060020a0382161461032257600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff199081169091556001805490911690557f94e8b32e01b9eedfddd778ffbd051a7718cdc14781702884561162dca6f74dbb60405160405180910390a150565b60005433600160a060020a0390811691161461039557600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383811691909117918290559081169033167f13a4b3bc0d5234dd3d87c9f1557d8faefa37986da62c36ba49309e2fb2c9aec460405160405180910390a350565b60015460009033600160a060020a0390811691161461041657600080fd5b50600080546001805473ffffffffffffffffffffffffffffffffffffffff19808416600160a060020a03838116919091179586905591169091559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60005433600160a060020a039081169116146104a057600080fd5b60015474010000000000000000000000000000000000000000900460ff16156104c857600080fd5b6001805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790557f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b600054600160a060020a031681565b600154600160a060020a0316815600a165627a7a723058201560aa6a3dd4c56e49fca1664ce66d20e62c27f4fcd8a2cfcce5af00afc2bbd80029",
            "sourceMap": "194:822:3:-;;;268:26;;;-1:-1:-1;;;;;;268:26:3;;;289:5;993:18:7;;-1:-1:-1;;;;;1001:10:7;993:18;-1:-1:-1;;;;;;993:18:7;;;;;;194:822:3;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "6060604052600436106100985763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416632af4c31e811461009d5780633f4ba83a146100be5780635c975abb146100d1578063666a3427146100f8578063710bf3221461011757806379ba5097146101365780638456cb59146101495780638da5cb5b1461015c578063d091b5501461018b575b600080fd5b34156100a857600080fd5b6100bc600160a060020a036004351661019e565b005b34156100c957600080fd5b6100bc61023f565b34156100dc57600080fd5b6100e46102cf565b604051901515815260200160405180910390f35b341561010357600080fd5b6100bc600160a060020a03600435166102f0565b341561012257600080fd5b6100bc600160a060020a036004351661037a565b341561014157600080fd5b6100bc6103f8565b341561015457600080fd5b6100bc610485565b341561016757600080fd5b61016f61052b565b604051600160a060020a03909116815260200160405180910390f35b341561019657600080fd5b61016f61053a565b6000805433600160a060020a039081169116146101ba57600080fd5b600160a060020a03821615156101cf57600080fd5b5060008054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff1980841691909117938490556001805490911690559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60005433600160a060020a0390811691161461025a57600080fd5b60015474010000000000000000000000000000000000000000900460ff16151561028357600080fd5b6001805474ff0000000000000000000000000000000000000000191690557f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b60015474010000000000000000000000000000000000000000900460ff1681565b60005433600160a060020a0390811691161461030b57600080fd5b610dac600160a060020a0382161461032257600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff199081169091556001805490911690557f94e8b32e01b9eedfddd778ffbd051a7718cdc14781702884561162dca6f74dbb60405160405180910390a150565b60005433600160a060020a0390811691161461039557600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383811691909117918290559081169033167f13a4b3bc0d5234dd3d87c9f1557d8faefa37986da62c36ba49309e2fb2c9aec460405160405180910390a350565b60015460009033600160a060020a0390811691161461041657600080fd5b50600080546001805473ffffffffffffffffffffffffffffffffffffffff19808416600160a060020a03838116919091179586905591169091559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60005433600160a060020a039081169116146104a057600080fd5b60015474010000000000000000000000000000000000000000900460ff16156104c857600080fd5b6001805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790557f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b600054600160a060020a031681565b600154600160a060020a0316815600a165627a7a723058201560aa6a3dd4c56e49fca1664ce66d20e62c27f4fcd8a2cfcce5af00afc2bbd80029",
            "sourceMap": "194:822:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2422:246:7;;;;;;;;;;-1:-1:-1;;;;;2422:246:7;;;;;;;912:102:3;;;;;;;;;;;;268:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3062:182:7;;;;;;;;;;-1:-1:-1;;;;;3062:182:7;;;;;1585:185;;;;;;;;;;-1:-1:-1;;;;;1585:185:7;;;;;1882:242;;;;;;;;;;;;724:100:3;;;;;;;;;;;;638:20:7;;;;;;;;;;;;;;;-1:-1:-1;;;;;638:20:7;;;;;;;;;;;;;;664:32;;;;;;;;;;;;2422:246;2529:16;1171:5;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;-1:-1:-1;;;;;2501:16:7;;;;2493:25;;;;;;-1:-1:-1;2548:5:7;;;-1:-1:-1;;;;;2563:17:7;;;-1:-1:-1;;2563:17:7;;;;;;;;;;;2548:5;2590:23;;;;;;;2548:5;;;;2655;2548;2624:37;;;;;;;;;;2422:246;;:::o;912:102:3:-;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;614:6:3;;;;;;;606:15;;;;;;;;969:6;:14;;-1:-1:-1;;969:14:3;;;998:9;;;;;;;;;;912:102::o;268:26::-;;;;;;;;;:::o;3062:182:7:-;1171:5;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;3144:5;-1:-1:-1;;;;;3136:13:7;;;3128:22;;;;;;3168:3;3160:11;;-1:-1:-1;;3160:11:7;;;;;;;3181:23;;;;;;;3214:18;;;;;;;;;;3062:182;:::o;1585:185::-;1171:5;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;1666:17;:38;;-1:-1:-1;;1666:38:7;-1:-1:-1;;;;;1666:38:7;;;;;;;;;;;1745:17;;;;1733:10;1714:49;;;;;;;;;;;1585:185;:::o;1882:242::-;1948:17;;1977:16;;1934:10;-1:-1:-1;;;;;1934:31:7;;;1948:17;;1934:31;1926:40;;;;;;-1:-1:-1;1996:5:7;;;;2019:17;;-1:-1:-1;;2011:25:7;;;-1:-1:-1;;;;;2019:17:7;;;2011:25;;;;;;;;2046:23;;;;;1996:5;;;;2111;1996;2080:37;;;;;;;;;;1882:242;:::o;724:100:3:-;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;446:6:3;;;;;;;445:7;437:16;;;;;;791:4;782:13;;-1:-1:-1;;782:13:3;;;;;810:7;;;;;;;;;;724:100::o;638:20:7:-;;;-1:-1:-1;;;;;638:20:7;;:::o;664:32::-;;;-1:-1:-1;;;;;664:32:7;;:::o"
          },
          "methodIdentifiers": {
            "acceptOwnership()": "79ba5097",
            "changeOwnership(address)": "2af4c31e",
            "newOwnerCandidate()": "d091b550",
            "owner()": "8da5cb5b",
            "pause()": "8456cb59",
            "paused()": "5c975abb",
            "proposeOwnership(address)": "710bf322",
            "removeOwnership(address)": "666a3427",
            "unpause()": "3f4ba83a"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.21+commit.dfe3193c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dac\",\"type\":\"address\"}],\"name\":\"removeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwnerCandidate\",\"type\":\"address\"}],\"name\":\"proposeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwnerCandidate\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"by\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"OwnershipRemoved\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"changeOwnership(address)\":{\"details\":\"In this 2nd option for ownership transfer `changeOwnership()` can  be called and it will immediately assign ownership to the `newOwner`\",\"params\":{\"_newOwner\":\"The address of the new owner\"}},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"proposeOwnership(address)\":{\"details\":\"In this 1st option for ownership transfer `proposeOwnership()` must  be called first by the current `owner` then `acceptOwnership()` must be  called by the `newOwnerCandidate`\",\"params\":{\"_newOwnerCandidate\":\"The address being proposed as the new owner\"}},\"removeOwnership(address)\":{\"details\":\"In this 3rd option for ownership transfer `removeOwnership()` can  be called and it will immediately assign ownership to the 0x0 address;  it requires a 0xdece be input as a parameter to prevent accidental use\",\"params\":{\"_dac\":\"`0xdac` has to be entered for this function to work\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}},\"title\":\"Pausable\"},\"userdoc\":{\"methods\":{\"acceptOwnership()\":{\"notice\":\"Can only be called by the `newOwnerCandidate`, accepts the  transfer of ownership\"},\"changeOwnership(address)\":{\"notice\":\"`owner` can step down and assign some other address to this role\"},\"proposeOwnership(address)\":{\"notice\":\"`onlyOwner` Proposes to transfer control of the contract to a  new owner\"},\"removeOwnership(address)\":{\"notice\":\"Decentralizes the contract, this operation cannot be undone \"}}}},\"settings\":{\"compilationTarget\":{\"./contracts/lib/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"./contracts/lib/Pausable.sol\":{\"content\":\"pragma solidity ^0.4.21;\\n\\nimport \\\"giveth-common-contracts/contracts/Owned.sol\\\";\\n\\n/**\\n * @title Pausable\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\n */\\ncontract Pausable is Owned {\\n    event Pause();\\n    event Unpause();\\n\\n    bool public paused = false;\\n\\n    /**\\n    * @dev Modifier to make a function callable only when the contract is not paused.\\n    */\\n    modifier whenNotPaused() {\\n        require(!paused);\\n        _;\\n    }\\n\\n    /**\\n    * @dev Modifier to make a function callable only when the contract is paused.\\n    */\\n    modifier whenPaused() {\\n        require(paused);\\n        _;\\n    }\\n\\n    /**\\n    * @dev called by the owner to pause, triggers stopped state\\n    */\\n    function pause() onlyOwner whenNotPaused public {\\n        paused = true;\\n        emit Pause();\\n    }\\n\\n    /**\\n    * @dev called by the owner to unpause, returns to normal state\\n    */\\n    function unpause() onlyOwner whenPaused public {\\n        paused = false;\\n        emit Unpause();\\n    }\\n}\",\"keccak256\":\"0xd134809350f024c16096d995915c6a348d770e1ec633723419f4f3acbd1e4b46\"},\"giveth-common-contracts/contracts/Owned.sol\":{\"content\":\"pragma solidity ^0.4.19;\\n\\n\\n/// @title Owned\\n/// @author Adrià Massanet <adria@codecontext.io>\\n/// @notice The Owned contract has an owner address, and provides basic \\n///  authorization control functions, this simplifies & the implementation of\\n///  user permissions; this contract has three work flows for a change in\\n///  ownership, the first requires the new owner to validate that they have the\\n///  ability to accept ownership, the second allows the ownership to be\\n///  directly transfered without requiring acceptance, and the third allows for\\n///  the ownership to be removed to allow for decentralization \\ncontract Owned {\\n\\n    address public owner;\\n    address public newOwnerCandidate;\\n\\n    event OwnershipRequested(address indexed by, address indexed to);\\n    event OwnershipTransferred(address indexed from, address indexed to);\\n    event OwnershipRemoved();\\n\\n    /// @dev The constructor sets the `msg.sender` as the`owner` of the contract\\n    function Owned() public {\\n        owner = msg.sender;\\n    }\\n\\n    /// @dev `owner` is the only address that can call a function with this\\n    /// modifier\\n    modifier onlyOwner() {\\n        require (msg.sender == owner);\\n        _;\\n    }\\n    \\n    /// @dev In this 1st option for ownership transfer `proposeOwnership()` must\\n    ///  be called first by the current `owner` then `acceptOwnership()` must be\\n    ///  called by the `newOwnerCandidate`\\n    /// @notice `onlyOwner` Proposes to transfer control of the contract to a\\n    ///  new owner\\n    /// @param _newOwnerCandidate The address being proposed as the new owner\\n    function proposeOwnership(address _newOwnerCandidate) public onlyOwner {\\n        newOwnerCandidate = _newOwnerCandidate;\\n        OwnershipRequested(msg.sender, newOwnerCandidate);\\n    }\\n\\n    /// @notice Can only be called by the `newOwnerCandidate`, accepts the\\n    ///  transfer of ownership\\n    function acceptOwnership() public {\\n        require(msg.sender == newOwnerCandidate);\\n\\n        address oldOwner = owner;\\n        owner = newOwnerCandidate;\\n        newOwnerCandidate = 0x0;\\n\\n        OwnershipTransferred(oldOwner, owner);\\n    }\\n\\n    /// @dev In this 2nd option for ownership transfer `changeOwnership()` can\\n    ///  be called and it will immediately assign ownership to the `newOwner`\\n    /// @notice `owner` can step down and assign some other address to this role\\n    /// @param _newOwner The address of the new owner\\n    function changeOwnership(address _newOwner) public onlyOwner {\\n        require(_newOwner != 0x0);\\n\\n        address oldOwner = owner;\\n        owner = _newOwner;\\n        newOwnerCandidate = 0x0;\\n\\n        OwnershipTransferred(oldOwner, owner);\\n    }\\n\\n    /// @dev In this 3rd option for ownership transfer `removeOwnership()` can\\n    ///  be called and it will immediately assign ownership to the 0x0 address;\\n    ///  it requires a 0xdece be input as a parameter to prevent accidental use\\n    /// @notice Decentralizes the contract, this operation cannot be undone \\n    /// @param _dac `0xdac` has to be entered for this function to work\\n    function removeOwnership(address _dac) public onlyOwner {\\n        require(_dac == 0xdac);\\n        owner = 0x0;\\n        newOwnerCandidate = 0x0;\\n        OwnershipRemoved();     \\n    }\\n} \\n\",\"keccak256\":\"0xc7d1401775fb1b41187de281757de68718fe27ba2660ba4bb194436aab7d0213\"}},\"version\":1}"
      }
    },
    "./contracts/lib/Vault.sol": {
      "Vault": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "maxSecurityGuardDelay",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newTimeLock",
                "type": "uint256"
              }
            ],
            "name": "setTimelock",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "escapeHatchCaller",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newOwner",
                "type": "address"
              }
            ],
            "name": "changeOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "unpause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "paused",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_dac",
                "type": "address"
              }
            ],
            "name": "removeOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "numberOfAuthorizedPayments",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newOwnerCandidate",
                "type": "address"
              }
            ],
            "name": "proposeOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_authorize",
                "type": "bool"
              }
            ],
            "name": "authorizeSpender",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "acceptOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_idPayment",
                "type": "uint256"
              }
            ],
            "name": "cancelPayment",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "pause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_idPayment",
                "type": "uint256"
              },
              {
                "name": "_delay",
                "type": "uint256"
              }
            ],
            "name": "delayPayment",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_token",
                "type": "address"
              }
            ],
            "name": "isTokenEscapable",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_idPayment",
                "type": "uint256"
              }
            ],
            "name": "collectAuthorizedPayment",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "name": "authorizedPayments",
            "outputs": [
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "reference",
                "type": "bytes32"
              },
              {
                "name": "spender",
                "type": "address"
              },
              {
                "name": "earliestPayTime",
                "type": "uint256"
              },
              {
                "name": "canceled",
                "type": "bool"
              },
              {
                "name": "paid",
                "type": "bool"
              },
              {
                "name": "recipient",
                "type": "address"
              },
              {
                "name": "token",
                "type": "address"
              },
              {
                "name": "amount",
                "type": "uint256"
              },
              {
                "name": "securityGuardDelay",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_token",
                "type": "address"
              }
            ],
            "name": "escapeHatch",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "securityGuard",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newSecurityGuard",
                "type": "address"
              }
            ],
            "name": "setSecurityGuard",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "timeLock",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "newOwnerCandidate",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newEscapeHatchCaller",
                "type": "address"
              }
            ],
            "name": "changeHatchEscapeCaller",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "name": "allowedSpenders",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_maxSecurityGuardDelay",
                "type": "uint256"
              }
            ],
            "name": "setMaxSecurityGuardDelay",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "absoluteMinTimeLock",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_name",
                "type": "string"
              },
              {
                "name": "_reference",
                "type": "bytes32"
              },
              {
                "name": "_recipient",
                "type": "address"
              },
              {
                "name": "_token",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              },
              {
                "name": "_paymentDelay",
                "type": "uint256"
              }
            ],
            "name": "authorizePayment",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "escapeHatchDestination",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "name": "_escapeHatchCaller",
                "type": "address"
              },
              {
                "name": "_escapeHatchDestination",
                "type": "address"
              },
              {
                "name": "_absoluteMinTimeLock",
                "type": "uint256"
              },
              {
                "name": "_timeLock",
                "type": "uint256"
              },
              {
                "name": "_securityGuard",
                "type": "address"
              },
              {
                "name": "_maxSecurityGuardDelay",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "idPayment",
                "type": "uint256"
              },
              {
                "indexed": true,
                "name": "recipient",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "amount",
                "type": "uint256"
              },
              {
                "indexed": false,
                "name": "token",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "reference",
                "type": "bytes32"
              }
            ],
            "name": "PaymentAuthorized",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "idPayment",
                "type": "uint256"
              },
              {
                "indexed": true,
                "name": "recipient",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "amount",
                "type": "uint256"
              },
              {
                "indexed": false,
                "name": "token",
                "type": "address"
              }
            ],
            "name": "PaymentExecuted",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "idPayment",
                "type": "uint256"
              }
            ],
            "name": "PaymentCanceled",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "authorized",
                "type": "bool"
              }
            ],
            "name": "SpenderAuthorization",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "Pause",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "Unpause",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "token",
                "type": "address"
              }
            ],
            "name": "EscapeHatchBlackistedToken",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "token",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "EscapeHatchCalled",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "by",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              }
            ],
            "name": "OwnershipRequested",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "OwnershipRemoved",
            "type": "event"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "60606040526005805460ff19169055341561001957600080fd5b60405160c08061151683398101604052808051919060200180519190602001805191906020018051919060200180519190602001805160008054600160a060020a03338116600160a060020a031992831617909255600280549a83169a82169a909a1790995560038054988216988a1698909817909755600895909555505060099190915560078054919093169316929092179055600a55611456806100c06000396000f30060606040526004361061015b5763ffffffff60e060020a6000350416630b2e742381146101605780631e891c0a146101855780631f6eb6e71461019d5780632af4c31e146101cc5780633f4ba83a146101eb5780635c975abb146101fe578063666a34271461022557806368b8c5a114610244578063710bf32214610257578063793c0fd41461027657806379ba50971461029a5780638422927d146102ad5780638456cb59146102c3578063846a5dde146102d6578063892db057146102ef5780638da5cb5b1461030e57806392e4b8a414610321578063a0927a6a14610337578063a142d6081461041b578063b2ca3ec41461043a578063bb2a51d11461044d578063d085835a1461046c578063d091b5501461047f578063d836fbe814610492578063d8528af0146104b1578063da4793ac146104d0578063ea8a66c7146104e6578063f37b74ca146104f9578063f5b6123014610533575b600080fd5b341561016b57600080fd5b610173610546565b60405190815260200160405180910390f35b341561019057600080fd5b61019b60043561054c565b005b34156101a857600080fd5b6101b061057b565b604051600160a060020a03909116815260200160405180910390f35b34156101d757600080fd5b61019b600160a060020a036004351661058a565b34156101f657600080fd5b61019b61061e565b341561020957600080fd5b610211610682565b604051901515815260200160405180910390f35b341561023057600080fd5b61019b600160a060020a036004351661068b565b341561024f57600080fd5b610173610708565b341561026257600080fd5b61019b600160a060020a036004351661070f565b341561028157600080fd5b61019b600160a060020a03600435166024351515610780565b34156102a557600080fd5b61019b6107fa565b34156102b857600080fd5b61019b60043561087a565b34156102ce57600080fd5b61019b61092e565b34156102e157600080fd5b61019b600435602435610994565b34156102fa57600080fd5b610211600160a060020a0360043516610a4a565b341561031957600080fd5b6101b0610a69565b341561032c57600080fd5b61019b600435610a78565b341561034257600080fd5b61034d600435610cb0565b604051602081018a9052600160a060020a03808a16604083015260608201899052871515608083015286151560a083015285811660c0830152841660e082015261010081018390526101208101829052610140808252819081018c818151815260200191508051906020019080838360005b838110156103d75780820151838201526020016103bf565b50505050905090810190601f1680156104045780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390f35b341561042657600080fd5b61019b600160a060020a0360043516610dc4565b341561044557600080fd5b6101b0610fe6565b341561045857600080fd5b61019b600160a060020a0360043516610ff5565b341561047757600080fd5b610173611032565b341561048a57600080fd5b6101b0611038565b341561049d57600080fd5b61019b600160a060020a0360043516611047565b34156104bc57600080fd5b610211600160a060020a036004351661109f565b34156104db57600080fd5b61019b6004356110b4565b34156104f157600080fd5b6101736110d4565b341561050457600080fd5b610173602460048035828101929101359035600160a060020a036044358116906064351660843560a4356110da565b341561053e57600080fd5b6101b061128c565b600a5481565b60005433600160a060020a0390811691161461056757600080fd5b60085481101561057657600080fd5b600955565b600254600160a060020a031681565b6000805433600160a060020a039081169116146105a657600080fd5b600160a060020a03821615156105bb57600080fd5b5060008054600160a060020a03838116600160a060020a031980841691909117938490556001805490911690559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60005433600160a060020a0390811691161461063957600080fd5b60055460ff16151561064a57600080fd5b6005805460ff191690557f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b60055460ff1681565b60005433600160a060020a039081169116146106a657600080fd5b610dac600160a060020a038216146106bd57600080fd5b60008054600160a060020a03199081169091556001805490911690557f94e8b32e01b9eedfddd778ffbd051a7718cdc14781702884561162dca6f74dbb60405160405180910390a150565b6006545b90565b60005433600160a060020a0390811691161461072a57600080fd5b60018054600160a060020a031916600160a060020a0383811691909117918290559081169033167f13a4b3bc0d5234dd3d87c9f1557d8faefa37986da62c36ba49309e2fb2c9aec460405160405180910390a350565b60005433600160a060020a0390811691161461079b57600080fd5b600160a060020a0382166000818152600b602052604090819020805460ff19168415151790557f801f568efbc3346a6ae3d0c3eb335a30d64e0d3cf08f1c39626d62cd5c82728190839051901515815260200160405180910390a25050565b60015460009033600160a060020a0390811691161461081857600080fd5b506000805460018054600160a060020a0319808416600160a060020a03838116919091179586905591169091559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b6000805433600160a060020a0390811691161461089657600080fd5b60065482106108a457600080fd5b60068054839081106108b257fe5b60009182526020909120600890910201600481015490915060ff16156108d757600080fd5b6004810154610100900460ff16156108ee57600080fd5b60048101805460ff19166001179055817ffdf197ed54809861dafe0b4d391843652730ac67274c1e9e46db7687dccaa30160405160405180910390a25050565b60005433600160a060020a0390811691161461094957600080fd5b60055460ff161561095957600080fd5b6005805460ff191660011790557f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b60075460009033600160a060020a039081169116146109b257600080fd5b60065483106109c057600080fd5b670de0b6b3a76400008211156109d557600080fd5b60068054849081106109e357fe5b90600052602060002090600802019050600a548282600701540111151515610a0a57600080fd5b6004810154610100900460ff1615610a2157600080fd5b600481015460ff1615610a3357600080fd5b600781018054830190556003018054909101905550565b600160a060020a031660009081526004602052604090205460ff161590565b600054600160a060020a031681565b60055460009060ff1615610a8b57600080fd5b6006548210610a9957600080fd5b6006805483908110610aa757fe5b6000918252602090912060046008909202019081015490915033600160a060020a03908116620100009092041614610ade57600080fd5b6002810154600160a060020a03166000908152600b602052604090205460ff161515610b0957600080fd5b8060030154610b1661129b565b1015610b2157600080fd5b600481015460ff1615610b3357600080fd5b6004810154610100900460ff1615610b4a57600080fd5b60048101805461ff0019166101001790556005810154600160a060020a03161515610bb6576004810154600682015462010000909104600160a060020a0316906108fc81150290604051600060405180830381858888f193505050501515610bb157600080fd5b610c44565b600581015460048201546006830154600160a060020a039283169263a9059cbb92620100009004169060405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b1515610c2257600080fd5b5af11515610c2f57600080fd5b505050604051805190501515610c4457600080fd5b600481015460068201546005830154600160a060020a036201000090930483169285927f354f3c0c8efabe1a1a07cf222842b008ef284ac185e63bdf8245be8cd2d97f5192909116604051918252600160a060020a031660208201526040908101905180910390a35050565b6006805482908110610cbe57fe5b9060005260206000209060080201600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d6a5780601f10610d3f57610100808354040283529160200191610d6a565b820191906000526020600020905b815481529060010190602001808311610d4d57829003601f168201915b5050505060018301546002840154600385015460048601546005870154600688015460079098015496979496600160a060020a039485169650929460ff80841695610100850490911694620100009094048116939216918a565b600254600090819033600160a060020a0390811691161480610df4575060005433600160a060020a039081169116145b1515610dff57600080fd5b600160a060020a03831660009081526004602052604090205460ff1615610e2557600080fd5b600160a060020a0383161515610eb757600354600160a060020a033081163193501682156108fc0283604051600060405180830381858888f193505050501515610e6e57600080fd5b7fa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f28383604051600160a060020a03909216825260208201526040908101905180910390a1610fe1565b5081600160a060020a0381166370a082313060405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b1515610f0757600080fd5b5af11515610f1457600080fd5b5050506040518051600354909350600160a060020a03808416925063a9059cbb91168460405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b1515610f7a57600080fd5b5af11515610f8757600080fd5b505050604051805190501515610f9c57600080fd5b7fa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f28383604051600160a060020a03909216825260208201526040908101905180910390a15b505050565b600754600160a060020a031681565b60005433600160a060020a0390811691161461101057600080fd5b60078054600160a060020a031916600160a060020a0392909216919091179055565b60095481565b600154600160a060020a031681565b60025433600160a060020a0390811691161480611072575060005433600160a060020a039081169116145b151561107d57600080fd5b60028054600160a060020a031916600160a060020a0392909216919091179055565b600b6020526000908152604090205460ff1681565b60005433600160a060020a039081169116146110cf57600080fd5b600a55565b60085481565b6005546000908190819060ff16156110f157600080fd5b600160a060020a0333166000908152600b602052604090205460ff16151561111857600080fd5b600680549250829061112d906001830161129f565b50600680548390811061113c57fe5b60009182526020909120600890910201600281018054600160a060020a03191633600160a060020a03161790559050670de0b6b3a764000084111561118057600080fd5b60095484101561119b5760095461119561129b565b016111a6565b836111a461129b565b015b600382015560048101805475ffffffffffffffffffffffffffffffffffffffff0000191662010000600160a060020a038a1602179055600681018590556111ee818b8b6112cb565b5060018101889055600581018054600160a060020a031916600160a060020a038881169190911791829055600483015460068401546201000090910482169285927fd11935115aa93b9f1f616d0d7702f4593572daa610390123241b3785430281c49291168c604051928352600160a060020a0390911660208301526040808301919091526060909101905180910390a35098975050505050505050565b600354600160a060020a031681565b4290565b815481835581811511610fe157600802816008028360005260206000209182019101610fe19190611349565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061130c5782800160ff19823516178555611339565b82800160010185558215611339579182015b8281111561133957823582559160200191906001019061131e565b506113459291506113c9565b5090565b61070c91905b8082111561134557600061136382826113e3565b50600060018201819055600282018054600160a060020a03199081169091556003830182905560048301805475ffffffffffffffffffffffffffffffffffffffffffff19169055600583018054909116905560068201819055600782015560080161134f565b61070c91905b8082111561134557600081556001016113cf565b50805460018160011615610100020316600290046000825580601f106114095750611427565b601f01602090049060005260206000209081019061142791906113c9565b505600a165627a7a7230582088ad80274775686d84c2b9d4989b8cca12c5f55bc8427fb84a15fcf075c1b2040029",
            "sourceMap": "1381:9727:4:-;;;268:26:3;;;-1:-1:-1;;268:26:3;;;4535:477:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;993:5:7;:18;;-1:-1:-1;;;;;1001:10:7;993:18;;-1:-1:-1;;;;;;993:18:7;;;;;;;2101:17:6;:38;;;;;;;;;;;;;;;2149:22;:48;;;;;;;;;;;;;;;4837:19:4;:42;;;;-1:-1:-1;;4889:8:4;:20;;;;4919:13;:30;;;;;;;;;;;;;;4959:21;:46;1381:9727;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "60606040526004361061015b5763ffffffff60e060020a6000350416630b2e742381146101605780631e891c0a146101855780631f6eb6e71461019d5780632af4c31e146101cc5780633f4ba83a146101eb5780635c975abb146101fe578063666a34271461022557806368b8c5a114610244578063710bf32214610257578063793c0fd41461027657806379ba50971461029a5780638422927d146102ad5780638456cb59146102c3578063846a5dde146102d6578063892db057146102ef5780638da5cb5b1461030e57806392e4b8a414610321578063a0927a6a14610337578063a142d6081461041b578063b2ca3ec41461043a578063bb2a51d11461044d578063d085835a1461046c578063d091b5501461047f578063d836fbe814610492578063d8528af0146104b1578063da4793ac146104d0578063ea8a66c7146104e6578063f37b74ca146104f9578063f5b6123014610533575b600080fd5b341561016b57600080fd5b610173610546565b60405190815260200160405180910390f35b341561019057600080fd5b61019b60043561054c565b005b34156101a857600080fd5b6101b061057b565b604051600160a060020a03909116815260200160405180910390f35b34156101d757600080fd5b61019b600160a060020a036004351661058a565b34156101f657600080fd5b61019b61061e565b341561020957600080fd5b610211610682565b604051901515815260200160405180910390f35b341561023057600080fd5b61019b600160a060020a036004351661068b565b341561024f57600080fd5b610173610708565b341561026257600080fd5b61019b600160a060020a036004351661070f565b341561028157600080fd5b61019b600160a060020a03600435166024351515610780565b34156102a557600080fd5b61019b6107fa565b34156102b857600080fd5b61019b60043561087a565b34156102ce57600080fd5b61019b61092e565b34156102e157600080fd5b61019b600435602435610994565b34156102fa57600080fd5b610211600160a060020a0360043516610a4a565b341561031957600080fd5b6101b0610a69565b341561032c57600080fd5b61019b600435610a78565b341561034257600080fd5b61034d600435610cb0565b604051602081018a9052600160a060020a03808a16604083015260608201899052871515608083015286151560a083015285811660c0830152841660e082015261010081018390526101208101829052610140808252819081018c818151815260200191508051906020019080838360005b838110156103d75780820151838201526020016103bf565b50505050905090810190601f1680156104045780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390f35b341561042657600080fd5b61019b600160a060020a0360043516610dc4565b341561044557600080fd5b6101b0610fe6565b341561045857600080fd5b61019b600160a060020a0360043516610ff5565b341561047757600080fd5b610173611032565b341561048a57600080fd5b6101b0611038565b341561049d57600080fd5b61019b600160a060020a0360043516611047565b34156104bc57600080fd5b610211600160a060020a036004351661109f565b34156104db57600080fd5b61019b6004356110b4565b34156104f157600080fd5b6101736110d4565b341561050457600080fd5b610173602460048035828101929101359035600160a060020a036044358116906064351660843560a4356110da565b341561053e57600080fd5b6101b061128c565b600a5481565b60005433600160a060020a0390811691161461056757600080fd5b60085481101561057657600080fd5b600955565b600254600160a060020a031681565b6000805433600160a060020a039081169116146105a657600080fd5b600160a060020a03821615156105bb57600080fd5b5060008054600160a060020a03838116600160a060020a031980841691909117938490556001805490911690559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60005433600160a060020a0390811691161461063957600080fd5b60055460ff16151561064a57600080fd5b6005805460ff191690557f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b60055460ff1681565b60005433600160a060020a039081169116146106a657600080fd5b610dac600160a060020a038216146106bd57600080fd5b60008054600160a060020a03199081169091556001805490911690557f94e8b32e01b9eedfddd778ffbd051a7718cdc14781702884561162dca6f74dbb60405160405180910390a150565b6006545b90565b60005433600160a060020a0390811691161461072a57600080fd5b60018054600160a060020a031916600160a060020a0383811691909117918290559081169033167f13a4b3bc0d5234dd3d87c9f1557d8faefa37986da62c36ba49309e2fb2c9aec460405160405180910390a350565b60005433600160a060020a0390811691161461079b57600080fd5b600160a060020a0382166000818152600b602052604090819020805460ff19168415151790557f801f568efbc3346a6ae3d0c3eb335a30d64e0d3cf08f1c39626d62cd5c82728190839051901515815260200160405180910390a25050565b60015460009033600160a060020a0390811691161461081857600080fd5b506000805460018054600160a060020a0319808416600160a060020a03838116919091179586905591169091559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b6000805433600160a060020a0390811691161461089657600080fd5b60065482106108a457600080fd5b60068054839081106108b257fe5b60009182526020909120600890910201600481015490915060ff16156108d757600080fd5b6004810154610100900460ff16156108ee57600080fd5b60048101805460ff19166001179055817ffdf197ed54809861dafe0b4d391843652730ac67274c1e9e46db7687dccaa30160405160405180910390a25050565b60005433600160a060020a0390811691161461094957600080fd5b60055460ff161561095957600080fd5b6005805460ff191660011790557f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b60075460009033600160a060020a039081169116146109b257600080fd5b60065483106109c057600080fd5b670de0b6b3a76400008211156109d557600080fd5b60068054849081106109e357fe5b90600052602060002090600802019050600a548282600701540111151515610a0a57600080fd5b6004810154610100900460ff1615610a2157600080fd5b600481015460ff1615610a3357600080fd5b600781018054830190556003018054909101905550565b600160a060020a031660009081526004602052604090205460ff161590565b600054600160a060020a031681565b60055460009060ff1615610a8b57600080fd5b6006548210610a9957600080fd5b6006805483908110610aa757fe5b6000918252602090912060046008909202019081015490915033600160a060020a03908116620100009092041614610ade57600080fd5b6002810154600160a060020a03166000908152600b602052604090205460ff161515610b0957600080fd5b8060030154610b1661129b565b1015610b2157600080fd5b600481015460ff1615610b3357600080fd5b6004810154610100900460ff1615610b4a57600080fd5b60048101805461ff0019166101001790556005810154600160a060020a03161515610bb6576004810154600682015462010000909104600160a060020a0316906108fc81150290604051600060405180830381858888f193505050501515610bb157600080fd5b610c44565b600581015460048201546006830154600160a060020a039283169263a9059cbb92620100009004169060405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b1515610c2257600080fd5b5af11515610c2f57600080fd5b505050604051805190501515610c4457600080fd5b600481015460068201546005830154600160a060020a036201000090930483169285927f354f3c0c8efabe1a1a07cf222842b008ef284ac185e63bdf8245be8cd2d97f5192909116604051918252600160a060020a031660208201526040908101905180910390a35050565b6006805482908110610cbe57fe5b9060005260206000209060080201600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d6a5780601f10610d3f57610100808354040283529160200191610d6a565b820191906000526020600020905b815481529060010190602001808311610d4d57829003601f168201915b5050505060018301546002840154600385015460048601546005870154600688015460079098015496979496600160a060020a039485169650929460ff80841695610100850490911694620100009094048116939216918a565b600254600090819033600160a060020a0390811691161480610df4575060005433600160a060020a039081169116145b1515610dff57600080fd5b600160a060020a03831660009081526004602052604090205460ff1615610e2557600080fd5b600160a060020a0383161515610eb757600354600160a060020a033081163193501682156108fc0283604051600060405180830381858888f193505050501515610e6e57600080fd5b7fa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f28383604051600160a060020a03909216825260208201526040908101905180910390a1610fe1565b5081600160a060020a0381166370a082313060405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b1515610f0757600080fd5b5af11515610f1457600080fd5b5050506040518051600354909350600160a060020a03808416925063a9059cbb91168460405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b1515610f7a57600080fd5b5af11515610f8757600080fd5b505050604051805190501515610f9c57600080fd5b7fa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f28383604051600160a060020a03909216825260208201526040908101905180910390a15b505050565b600754600160a060020a031681565b60005433600160a060020a0390811691161461101057600080fd5b60078054600160a060020a031916600160a060020a0392909216919091179055565b60095481565b600154600160a060020a031681565b60025433600160a060020a0390811691161480611072575060005433600160a060020a039081169116145b151561107d57600080fd5b60028054600160a060020a031916600160a060020a0392909216919091179055565b600b6020526000908152604090205460ff1681565b60005433600160a060020a039081169116146110cf57600080fd5b600a55565b60085481565b6005546000908190819060ff16156110f157600080fd5b600160a060020a0333166000908152600b602052604090205460ff16151561111857600080fd5b600680549250829061112d906001830161129f565b50600680548390811061113c57fe5b60009182526020909120600890910201600281018054600160a060020a03191633600160a060020a03161790559050670de0b6b3a764000084111561118057600080fd5b60095484101561119b5760095461119561129b565b016111a6565b836111a461129b565b015b600382015560048101805475ffffffffffffffffffffffffffffffffffffffff0000191662010000600160a060020a038a1602179055600681018590556111ee818b8b6112cb565b5060018101889055600581018054600160a060020a031916600160a060020a038881169190911791829055600483015460068401546201000090910482169285927fd11935115aa93b9f1f616d0d7702f4593572daa610390123241b3785430281c49291168c604051928352600160a060020a0390911660208301526040808301919091526060909101905180910390a35098975050505050505050565b600354600160a060020a031681565b4290565b815481835581811511610fe157600802816008028360005260206000209182019101610fe19190611349565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061130c5782800160ff19823516178555611339565b82800160010185558215611339579182015b8281111561133957823582559160200191906001019061131e565b506113459291506113c9565b5090565b61070c91905b8082111561134557600061136382826113e3565b50600060018201819055600282018054600160a060020a03199081169091556003830182905560048301805475ffffffffffffffffffffffffffffffffffffffffffff19169055600583018054909116905560068201819055600782015560080161134f565b61070c91905b8082111561134557600081556001016113cf565b50805460018160011615610100020316600290046000825580601f106114095750611427565b601f01602090049060005260206000209081019061142791906113c9565b505600a165627a7a7230582088ad80274775686d84c2b9d4989b8cca12c5f55bc8427fb84a15fcf075c1b2040029",
            "sourceMap": "1381:9727:4:-;;;;;;;;;-1:-1:-1;;;1381:9727:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2458:33;;;;;;;;;;;;;;;;;;;;;;;;;;;10425:153;;;;;;;;;;;;;;;;1181:32:6;;;;;;;;;;;;;;;-1:-1:-1;;;;;1181:32:6;;;;;;;;;;;;;;2422:246:7;;;;;;;;;;-1:-1:-1;;;;;2422:246:7;;;;;912:102:3;;;;;;;;;;;;268:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3062:182:7;;;;;;;;;;-1:-1:-1;;;;;3062:182:7;;;;;5221:114:4;;;;;;;;;;;;1585:185:7;;;;;;;;;;-1:-1:-1;;;;;1585:185:7;;;;;9706:192:4;;;;;;;;;;-1:-1:-1;;;;;9706:192:4;;;;;;;;;1882:242:7;;;;;;;;;;;;9148:312:4;;;;;;;;;;;;;;724:100:3;;;;;;;;;;;;8514:473:4;;;;;;;;;;;;;;;;3215:117:6;;;;;;;;;;-1:-1:-1;;;;;3215:117:6;;;;;638:20:7;;;;;;;;;;;;7346:902:4;;;;;;;;;;;;;;2319:35;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2319:35:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2319:35:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3540:611:6;;;;;;;;;;-1:-1:-1;;;;;3540:611:6;;;;;2361:28:4;;;;;;;;;;;;10035:122;;;;;;;;;;-1:-1:-1;;;;;10035:122:4;;;;;2432:20;;;;;;;;;;;;664:32:7;;;;;;;;;;;;4520:158:6;;;;;;;;;;-1:-1:-1;;;;;4520:158:6;;;;;2611:48:4;;;;;;;;;;-1:-1:-1;;;;;2611:48:4;;;;;10842:145;;;;;;;;;;;;;;2395:31;;;;;;;;;;;;5914:1195;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5914:1195:4;;;;;;;;;;;;;;1219:37:6;;;;;;;;;;;;2458:33:4;;;;:::o;10425:153::-;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;10518:19:4;;10502:35;;;10494:44;;;;;;10548:8;:23;10425:153::o;1181:32:6:-;;;-1:-1:-1;;;;;1181:32:6;;:::o;2422:246:7:-;2529:16;1171:5;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;-1:-1:-1;;;;;2501:16:7;;;;2493:25;;;;;;-1:-1:-1;2548:5:7;;;-1:-1:-1;;;;;2563:17:7;;;-1:-1:-1;;;;;;2563:17:7;;;;;;;;;;;2548:5;2590:23;;;;;;;2548:5;;;;2655;2548;2624:37;;;;;;;;;;2422:246;;:::o;912:102:3:-;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;614:6:3;;;;606:15;;;;;;;;969:6;:14;;-1:-1:-1;;969:14:3;;;998:9;;;;;;;;;;912:102::o;268:26::-;;;;;;:::o;3062:182:7:-;1171:5;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;3144:5;-1:-1:-1;;;;;3136:13:7;;;3128:22;;;;;;3168:3;3160:11;;-1:-1:-1;;;;;;3160:11:7;;;;;;;3181:23;;;;;;;3214:18;;;;;;;;;;3062:182;:::o;5221:114:4:-;5303:18;:25;5221:114;;:::o;1585:185:7:-;1171:5;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;1666:17;:38;;-1:-1:-1;;;;;;1666:38:7;-1:-1:-1;;;;;1666:38:7;;;;;;;;;;;1745:17;;;;1733:10;1714:49;;;;;;;;;;;1585:185;:::o;9706:192:4:-;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;-1:-1:-1;;;;;9796:25:4;;;;;;:15;:25;;;;;;;:38;;-1:-1:-1;;9796:38:4;;;;;;;9849:42;;9796:38;;9849:42;;;;;;;;;;;;;;;9706:192;;:::o;1882:242:7:-;1948:17;;1977:16;;1934:10;-1:-1:-1;;;;;1934:31:7;;;1948:17;;1934:31;1926:40;;;;;;-1:-1:-1;1996:5:7;;;;2019:17;;-1:-1:-1;;;;;;2011:25:7;;;-1:-1:-1;;;;;2019:17:7;;;2011:25;;;;;;;;2046:23;;;;;1996:5;;;;2111;1996;2080:37;;;;;;;;;;1882:242;:::o;9148:312:4:-;9275:17;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;9238:18:4;:25;9225:38;;9217:47;;;;;;9295:18;:30;;9314:10;;9295:30;;;;;;;;;;;;;;;;;;;9346:10;;;;9295:30;;-1:-1:-1;9346:10:4;;9345:11;9337:20;;;;;;9376:6;;;;;;;;;9375:7;9367:16;;;;;;9394:10;;;:17;;-1:-1:-1;;9394:17:4;9407:4;9394:17;;;9442:10;9426:27;;;;;;;;;;9148:312;;:::o;724:100:3:-;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;446:6:3;;;;445:7;437:16;;;;;;782:6;:13;;-1:-1:-1;;782:13:3;791:4;782:13;;;810:7;;;;;;;;;;724:100::o;8514:473:4:-;3302:13;;8722:17;;3288:10;-1:-1:-1;;;;;3288:27:4;;;3302:13;;3288:27;3280:36;;;;;;8624:18;:25;8611:38;;8603:47;;;;;;8704:6;8694:16;;;8686:25;;;;;;8742:18;:30;;8761:10;;8742:30;;;;;;;;;;;;;;;;8722:50;;8824:21;;8814:6;8791:1;:20;;;:29;:54;;8783:63;;;;;;;;8865:6;;;;;;;;;8864:7;8856:16;;;;;;8891:10;;;;;;8890:11;8882:20;;;;;;8913;;;:30;;;;;;8953:17;;:27;;;;;;;-1:-1:-1;8514:473:4:o;3215:117:6:-;-1:-1:-1;;;;;3302:23:6;3278:4;3302:23;;;:15;:23;;;;;;;;3301:24;;3215:117::o;638:20:7:-;;;-1:-1:-1;;;;;638:20:7;;:::o;7346:902:4:-;446:6:3;;7566:17:4;;446:6:3;;445:7;437:16;;;;;;7529:18:4;:25;7516:38;;7508:47;;;;;;7586:18;:30;;7605:10;;7586:30;;;;;;;;;;;;;;7708:11;7586:30;;;;;7708:11;;;;7586:30;;-1:-1:-1;7694:10:4;-1:-1:-1;;;;;7694:25:4;;;7708:11;;;;;7694:25;7686:34;;;;;;7754:9;;;;-1:-1:-1;;;;;7754:9:4;7738:26;;;;:15;:26;;;;;;;;7730:35;;;;;;;;7797:1;:17;;;7783:10;:8;:10::i;:::-;:31;;7775:40;;;;;;7834:10;;;;;;7833:11;7825:20;;;;;;7864:6;;;;;;;;;7863:7;7855:16;;;;;;7923:6;;;:13;;-1:-1:-1;;7923:13:4;;;;;8012:7;;;;-1:-1:-1;;;;;8012:7:4;:12;8008:159;;;8040:11;;;;8061:8;;;;8040:11;;;;-1:-1:-1;;;;;8040:11:4;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8008:159;;;8115:7;;;;8133:11;;;;8146:8;;;;-1:-1:-1;;;;;8115:7:4;;;;8109:23;;8133:11;;;;;8109:46;;-1:-1:-1;;;8109:46:4;;;;;;-1:-1:-1;;;;;8109:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8101:55;;;;;;;;8210:11;;;;8223:8;;;;8233:7;;;;-1:-1:-1;;;;;8210:11:4;;;;;;;8198:10;;8182:59;;8223:8;;8233:7;8182:59;;;;;-1:-1:-1;;;;;8182:59:4;;;;;;;;;;;;;;;;7346:902;;:::o;2319:35::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2319:35:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2319:35:4;;;;-1:-1:-1;2319:35:4;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3540:611:6:-;2431:17;;3676:15;;;;2417:10;-1:-1:-1;;;;;2417:31:6;;;2431:17;;2417:31;;2416:56;;-1:-1:-1;2466:5:6;;2452:10;-1:-1:-1;;;;;2452:19:6;;;2466:5;;2452:19;2416:56;2407:66;;;;;;;;-1:-1:-1;;;;;3634:23:6;;;;;;:15;:23;;;;;;;;:30;3626:39;;;;;;-1:-1:-1;;;;;3739:13:6;;;3735:188;;;3804:22;;-1:-1:-1;;;;;3778:4:6;:12;;;;-1:-1:-1;3804:22:6;:40;;;;3778:12;3804:40;;;;;;;;;;;;;;;;;;;;;;;;;;3858:34;3876:6;3884:7;3858:34;;-1:-1:-1;;;;;3858:34:6;;;;;;;;;;;;;;;;;;;;3906:7;;3735:188;-1:-1:-1;3986:6:6;-1:-1:-1;;;;;4013:15:6;;;4029:4;4013:21;;-1:-1:-1;;;4013:21:6;;;;;;-1:-1:-1;;;;;4013:21:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4067:22;;4013:21;;-1:-1:-1;;;;;;4052:14:6;;;;-1:-1:-1;4052:14:6;;4067:22;4013:21;4052:47;;-1:-1:-1;;;4052:47:6;;;;;;-1:-1:-1;;;;;4052:47:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4044:56;;;;;;;;4110:34;4128:6;4136:7;4110:34;;-1:-1:-1;;;;;4110:34:6;;;;;;;;;;;;;;;;;;;;2483:1;3540:611;;;:::o;2361:28:4:-;;;-1:-1:-1;;;;;2361:28:4;;:::o;10035:122::-;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;10117:13:4;:33;;-1:-1:-1;;;;;;10117:33:4;-1:-1:-1;;;;;10117:33:4;;;;;;;;;;10035:122::o;2432:20::-;;;;:::o;664:32:7:-;;;-1:-1:-1;;;;;664:32:7;;:::o;4520:158:6:-;2431:17;;2417:10;-1:-1:-1;;;;;2417:31:6;;;2431:17;;2417:31;;2416:56;;-1:-1:-1;2466:5:6;;2452:10;-1:-1:-1;;;;;2452:19:6;;;2466:5;;2452:19;2416:56;2407:66;;;;;;;;4630:17;:41;;-1:-1:-1;;;;;;4630:41:6;-1:-1:-1;;;;;4630:41:6;;;;;;;;;;4520:158::o;2611:48:4:-;;;;;;;;;;;;;;;:::o;10842:145::-;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;10934:21:4;:46;10842:145::o;2395:31::-;;;;:::o;5914:1195::-;446:6:3;;6129:4:4;;;;;;446:6:3;;445:7;437:16;;;;;;-1:-1:-1;;;;;6235:10:4;6219:27;;;;;:15;:27;;;;;;;;6211:36;;;;;;;;6274:18;:25;;;-1:-1:-1;6274:25:4;;6336:27;;;;;;:::i;:::-;-1:-1:-1;6453:18:4;:29;;6472:9;;6453:29;;;;;;;;;;;;;;;;;;;6492:9;;;:22;;-1:-1:-1;;;;;;6492:22:4;6504:10;-1:-1:-1;;;;;6492:22:4;;;;6453:29;-1:-1:-1;6581:6:4;6564:23;;;6556:32;;;;;;6717:8;;6700:13;:25;;:142;;6834:8;;6821:10;:8;:10::i;:::-;:21;6700:142;;;6773:13;6760:10;:8;:10::i;:::-;:26;6700:142;6680:17;;;:162;6852:11;;;:24;;-1:-1:-1;;6852:24:4;;-1:-1:-1;;;;;6852:24:4;;;;;;6886:8;;;:18;;;6914:14;6680:17;6923:5;;6914:14;:::i;:::-;-1:-1:-1;6938:11:4;;;:24;;;6972:7;;;:16;;-1:-1:-1;;;;;;6972:16:4;-1:-1:-1;;;;;6972:16:4;;;;;;;;;;;7032:11;;;;7045:8;;;;7032:11;;;;;;;7021:9;;7003:73;;7045:8;7055:7;6938:24;7003:73;;;;;-1:-1:-1;;;;;7003:73:4;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7093:9:4;5914:1195;-1:-1:-1;;;;;;;;5914:1195:4:o;1219:37:6:-;;;-1:-1:-1;;;;;1219:37:6;;:::o;11030:76:4:-;11096:3;11030:76;:::o;1381:9727::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1381:9727:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1381:9727:4;;;-1:-1:-1;1381:9727:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1381:9727:4;;;;;;;;;;;;-1:-1:-1;;;;;;1381:9727:4;;;;;;;;;;;;;;;;;-1:-1:-1;;1381:9727:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o"
          },
          "methodIdentifiers": {
            "absoluteMinTimeLock()": "ea8a66c7",
            "acceptOwnership()": "79ba5097",
            "allowedSpenders(address)": "d8528af0",
            "authorizePayment(string,bytes32,address,address,uint256,uint256)": "f37b74ca",
            "authorizeSpender(address,bool)": "793c0fd4",
            "authorizedPayments(uint256)": "a0927a6a",
            "cancelPayment(uint256)": "8422927d",
            "changeHatchEscapeCaller(address)": "d836fbe8",
            "changeOwnership(address)": "2af4c31e",
            "collectAuthorizedPayment(uint256)": "92e4b8a4",
            "delayPayment(uint256,uint256)": "846a5dde",
            "escapeHatch(address)": "a142d608",
            "escapeHatchCaller()": "1f6eb6e7",
            "escapeHatchDestination()": "f5b61230",
            "isTokenEscapable(address)": "892db057",
            "maxSecurityGuardDelay()": "0b2e7423",
            "newOwnerCandidate()": "d091b550",
            "numberOfAuthorizedPayments()": "68b8c5a1",
            "owner()": "8da5cb5b",
            "pause()": "8456cb59",
            "paused()": "5c975abb",
            "proposeOwnership(address)": "710bf322",
            "removeOwnership(address)": "666a3427",
            "securityGuard()": "b2ca3ec4",
            "setMaxSecurityGuardDelay(uint256)": "da4793ac",
            "setSecurityGuard(address)": "bb2a51d1",
            "setTimelock(uint256)": "1e891c0a",
            "timeLock()": "d085835a",
            "unpause()": "3f4ba83a"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.21+commit.dfe3193c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"maxSecurityGuardDelay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newTimeLock\",\"type\":\"uint256\"}],\"name\":\"setTimelock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"escapeHatchCaller\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dac\",\"type\":\"address\"}],\"name\":\"removeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numberOfAuthorizedPayments\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwnerCandidate\",\"type\":\"address\"}],\"name\":\"proposeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_authorize\",\"type\":\"bool\"}],\"name\":\"authorizeSpender\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_idPayment\",\"type\":\"uint256\"}],\"name\":\"cancelPayment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_idPayment\",\"type\":\"uint256\"},{\"name\":\"_delay\",\"type\":\"uint256\"}],\"name\":\"delayPayment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isTokenEscapable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_idPayment\",\"type\":\"uint256\"}],\"name\":\"collectAuthorizedPayment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"authorizedPayments\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"reference\",\"type\":\"bytes32\"},{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"earliestPayTime\",\"type\":\"uint256\"},{\"name\":\"canceled\",\"type\":\"bool\"},{\"name\":\"paid\",\"type\":\"bool\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"securityGuardDelay\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"escapeHatch\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"securityGuard\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newSecurityGuard\",\"type\":\"address\"}],\"name\":\"setSecurityGuard\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"timeLock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwnerCandidate\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newEscapeHatchCaller\",\"type\":\"address\"}],\"name\":\"changeHatchEscapeCaller\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedSpenders\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maxSecurityGuardDelay\",\"type\":\"uint256\"}],\"name\":\"setMaxSecurityGuardDelay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"absoluteMinTimeLock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_reference\",\"type\":\"bytes32\"},{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_paymentDelay\",\"type\":\"uint256\"}],\"name\":\"authorizePayment\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"escapeHatchDestination\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_escapeHatchCaller\",\"type\":\"address\"},{\"name\":\"_escapeHatchDestination\",\"type\":\"address\"},{\"name\":\"_absoluteMinTimeLock\",\"type\":\"uint256\"},{\"name\":\"_timeLock\",\"type\":\"uint256\"},{\"name\":\"_securityGuard\",\"type\":\"address\"},{\"name\":\"_maxSecurityGuardDelay\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"idPayment\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"reference\",\"type\":\"bytes32\"}],\"name\":\"PaymentAuthorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"idPayment\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"}],\"name\":\"PaymentExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"idPayment\",\"type\":\"uint256\"}],\"name\":\"PaymentCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"authorized\",\"type\":\"bool\"}],\"name\":\"SpenderAuthorization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"}],\"name\":\"EscapeHatchBlackistedToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EscapeHatchCalled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"by\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"OwnershipRemoved\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"authorizePayment(string,bytes32,address,address,uint256,uint256)\":{\"params\":{\"_amount\":\"Amount to be paid in wei\",\"_name\":\"Brief description of the payment that is authorized\",\"_paymentDelay\":\"Number of miliseconds the payment is to be delayed, if  this value is below `timeLock` then the `timeLock` determines the delay\",\"_recipient\":\"Destination of the payment\",\"_reference\":\"External reference of the payment\"},\"return\":\"The Payment ID number for the new authorized payment\"},\"authorizeSpender(address,bool)\":{\"params\":{\"_authorize\":\"`true` if authorizing and `false` if unauthorizing\",\"_spender\":\"The address of the contract being authorized/unauthorized\"}},\"cancelPayment(uint256)\":{\"params\":{\"_idPayment\":\"ID of the payment to be canceled.\"}},\"changeHatchEscapeCaller(address)\":{\"params\":{\"_newEscapeHatchCaller\":\"The address of a trusted account or  contract to call `escapeHatch()` to send the value in this contract to  the `escapeHatchDestination`; it would be ideal that `escapeHatchCaller`  cannot move funds out of `escapeHatchDestination`\"}},\"changeOwnership(address)\":{\"details\":\"In this 2nd option for ownership transfer `changeOwnership()` can  be called and it will immediately assign ownership to the `newOwner`\",\"params\":{\"_newOwner\":\"The address of the new owner\"}},\"collectAuthorizedPayment(uint256)\":{\"params\":{\"_idPayment\":\"The payment ID to be executed\"}},\"delayPayment(uint256,uint256)\":{\"params\":{\"_delay\":\"The number of miliseconds to delay the payment\",\"_idPayment\":\"ID of the payment to be delayed\"}},\"escapeHatch(address)\":{\"params\":{\"_token\":\"to transfer, use 0x0 for ether\"}},\"isTokenEscapable(address)\":{\"params\":{\"_token\":\"the token address being queried\"},\"return\":\"False if `_token` is in the blacklist and can't be taken out of  the contract via the `escapeHatch()`\"},\"numberOfAuthorizedPayments()\":{\"return\":\"The number of payments ever authorized even if they were canceled\"},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"proposeOwnership(address)\":{\"details\":\"In this 1st option for ownership transfer `proposeOwnership()` must  be called first by the current `owner` then `acceptOwnership()` must be  called by the `newOwnerCandidate`\",\"params\":{\"_newOwnerCandidate\":\"The address being proposed as the new owner\"}},\"removeOwnership(address)\":{\"details\":\"In this 3rd option for ownership transfer `removeOwnership()` can  be called and it will immediately assign ownership to the 0x0 address;  it requires a 0xdece be input as a parameter to prevent accidental use\",\"params\":{\"_dac\":\"`0xdac` has to be entered for this function to work\"}},\"setMaxSecurityGuardDelay(uint256)\":{\"params\":{\"_maxSecurityGuardDelay\":\"The new maximum delay in seconds that  `securityGuard` can delay the payment's execution in total\"}},\"setSecurityGuard(address)\":{\"params\":{\"_newSecurityGuard\":\"Address of the new security guard\"}},\"setTimelock(uint256)\":{\"params\":{\"_newTimeLock\":\"Sets the new minimum default `timeLock` in miliseconds;  pending payments maintain their `earliestPayTime`\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}}},\"userdoc\":{\"methods\":{\"acceptOwnership()\":{\"notice\":\"Can only be called by the `newOwnerCandidate`, accepts the  transfer of ownership\"},\"authorizePayment(string,bytes32,address,address,uint256,uint256)\":{\"notice\":\"/////only `allowedSpenders[]` Creates a new `Payment`\"},\"authorizeSpender(address,bool)\":{\"notice\":\"`onlyOwner` Adds a spender to the `allowedSpenders[]` white list\"},\"cancelPayment(uint256)\":{\"notice\":\"////`onlyOwner` Cancel a payment all together\"},\"changeHatchEscapeCaller(address)\":{\"notice\":\"Changes the address assigned to call `escapeHatch()`\"},\"changeOwnership(address)\":{\"notice\":\"`owner` can step down and assign some other address to this role\"},\"collectAuthorizedPayment(uint256)\":{\"notice\":\"only `allowedSpenders[]` The recipient of a payment calls this  function to send themselves the ether after the `earliestPayTime` has  expired\"},\"delayPayment(uint256,uint256)\":{\"notice\":\"//////`onlySecurityGuard` Delays a payment for a set number of miliseconds\"},\"escapeHatch(address)\":{\"notice\":\"The `escapeHatch()` should only be called as a last resort if a security issue is uncovered or something unexpected happened\"},\"isTokenEscapable(address)\":{\"notice\":\"Checks to see if `_token` is in the blacklist of tokens\"},\"numberOfAuthorizedPayments()\":{\"notice\":\"//////States the total number of authorized payments in this contract\"},\"proposeOwnership(address)\":{\"notice\":\"`onlyOwner` Proposes to transfer control of the contract to a  new owner\"},\"removeOwnership(address)\":{\"notice\":\"Decentralizes the contract, this operation cannot be undone \"},\"setMaxSecurityGuardDelay(uint256)\":{\"notice\":\"`onlyOwner` Changes the maximum number of miliseconds `securityGuard` can delay a payment\"},\"setSecurityGuard(address)\":{\"notice\":\"`onlyOwner` Sets the address of `securityGuard`\"},\"setTimelock(uint256)\":{\"notice\":\"`onlyOwner` Changes `timeLock`; the new `timeLock` cannot be  lower than `absoluteMinTimeLock`\"}}}},\"settings\":{\"compilationTarget\":{\"./contracts/lib/Vault.sol\":\"Vault\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"./contracts/lib/Pausable.sol\":{\"content\":\"pragma solidity ^0.4.21;\\n\\nimport \\\"giveth-common-contracts/contracts/Owned.sol\\\";\\n\\n/**\\n * @title Pausable\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\n */\\ncontract Pausable is Owned {\\n    event Pause();\\n    event Unpause();\\n\\n    bool public paused = false;\\n\\n    /**\\n    * @dev Modifier to make a function callable only when the contract is not paused.\\n    */\\n    modifier whenNotPaused() {\\n        require(!paused);\\n        _;\\n    }\\n\\n    /**\\n    * @dev Modifier to make a function callable only when the contract is paused.\\n    */\\n    modifier whenPaused() {\\n        require(paused);\\n        _;\\n    }\\n\\n    /**\\n    * @dev called by the owner to pause, triggers stopped state\\n    */\\n    function pause() onlyOwner whenNotPaused public {\\n        paused = true;\\n        emit Pause();\\n    }\\n\\n    /**\\n    * @dev called by the owner to unpause, returns to normal state\\n    */\\n    function unpause() onlyOwner whenPaused public {\\n        paused = false;\\n        emit Unpause();\\n    }\\n}\",\"keccak256\":\"0xd134809350f024c16096d995915c6a348d770e1ec633723419f4f3acbd1e4b46\"},\"./contracts/lib/Vault.sol\":{\"content\":\"pragma solidity ^0.4.21;\\n\\n/*\\n    Copyright 2016, Jordi Baylina, RJ Ewing\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n\\n/// @title Vault Contract\\n/// @author Jordi Baylina, RJ Ewing\\n/// @notice This contract holds funds for Campaigns and automates payments. For\\n///  this iteration the funds will come straight from the Giveth Multisig as a\\n///  safety precaution, but once fully tested and optimized this contract will\\n///  be a safe place to store funds equipped with optional variable time delays\\n///  to allow for an optional escape hatch\\n\\nimport \\\"giveth-common-contracts/contracts/Escapable.sol\\\";\\nimport \\\"./Pausable.sol\\\";\\n\\n/// @dev `Vault` is a higher level contract built off of the `Escapable`\\n///  contract that holds funds for Campaigns and automates payments.\\ncontract Vault is Escapable, Pausable {\\n\\n    /// @dev `Payment` is a public structure that describes the details of\\n    ///  each payment making it easy to track the movement of funds\\n    ///  transparently\\n    struct Payment {\\n        string name;     // What is the purpose of this payment\\n        bytes32 reference;  // Reference of the payment.\\n        address spender;        // Who is sending the funds\\n        uint earliestPayTime;   // The earliest a payment can be made (Unix Time)\\n        bool canceled;         // If True then the payment has been canceled\\n        bool paid;              // If True then the payment has been paid\\n        address recipient;      // Who is receiving the funds\\n        address token;          // Token this payment represents\\n        uint amount;            // The amount of wei sent in the payment\\n        uint securityGuardDelay;// The miliseconds `securityGuard` can delay payment\\n    }\\n\\n    Payment[] public authorizedPayments;\\n\\n    address public securityGuard;\\n    uint public absoluteMinTimeLock;\\n    uint public timeLock;\\n    uint public maxSecurityGuardDelay;\\n\\n    /// @dev The white list of approved addresses allowed to set up && receive\\n    ///  payments from this vault\\n    mapping (address => bool) public allowedSpenders;\\n\\n    // @dev Events to make the payment movements easy to find on the blockchain\\n    event PaymentAuthorized(uint indexed idPayment, address indexed recipient, uint amount, address token, bytes32 reference);\\n    event PaymentExecuted(uint indexed idPayment, address indexed recipient, uint amount, address token);\\n    event PaymentCanceled(uint indexed idPayment);\\n    event SpenderAuthorization(address indexed spender, bool authorized);\\n\\n    /// @dev The address assigned the role of `securityGuard` is the only\\n    ///  addresses that can call a function with this modifier\\n    modifier onlySecurityGuard { \\n        require(msg.sender == securityGuard);\\n        _;\\n    }\\n\\n    /// @notice The Constructor creates the Vault on the blockchain\\n    /// @param _escapeHatchCaller The address of a trusted account or contract to\\n    ///  call `escapeHatch()` to send the ether in this contract to the\\n    ///  `escapeHatchDestination` it would be ideal if `escapeHatchCaller` cannot move\\n    ///  funds out of `escapeHatchDestination`\\n    /// @param _escapeHatchDestination The address of a safe location (usu a\\n    ///  Multisig) to send the ether held in this contract in an emergency\\n    /// @param _absoluteMinTimeLock The minimum number of seconds `timelock` can\\n    ///  be set to, if set to 0 the `owner` can remove the `timeLock` completely\\n    /// @param _timeLock Initial number of seconds that payments are delayed\\n    ///  after they are authorized (a security precaution)\\n    /// @param _securityGuard Address that will be able to delay the payments\\n    ///  beyond the initial timelock requirements; can be set to 0x0 to remove\\n    ///  the `securityGuard` functionality\\n    /// @param _maxSecurityGuardDelay The maximum number of seconds in total\\n    ///   that `securityGuard` can delay a payment so that the owner can cancel\\n    ///   the payment if needed\\n    function Vault(\\n        address _escapeHatchCaller,\\n        address _escapeHatchDestination,\\n        uint _absoluteMinTimeLock,\\n        uint _timeLock,\\n        address _securityGuard,\\n        uint _maxSecurityGuardDelay\\n    ) Escapable(_escapeHatchCaller, _escapeHatchDestination) public\\n    {\\n        absoluteMinTimeLock = _absoluteMinTimeLock;\\n        timeLock = _timeLock;\\n        securityGuard = _securityGuard;\\n        maxSecurityGuardDelay = _maxSecurityGuardDelay;\\n    }\\n\\n/////////\\n// Helper functions\\n/////////\\n\\n    /// @notice States the total number of authorized payments in this contract\\n    /// @return The number of payments ever authorized even if they were canceled\\n    function numberOfAuthorizedPayments() public view returns (uint) {\\n        return authorizedPayments.length;\\n    }\\n\\n////////\\n// Spender Interface\\n////////\\n\\n    /// @notice only `allowedSpenders[]` Creates a new `Payment`\\n    /// @param _name Brief description of the payment that is authorized\\n    /// @param _reference External reference of the payment\\n    /// @param _recipient Destination of the payment\\n    /// @param _amount Amount to be paid in wei\\n    /// @param _paymentDelay Number of miliseconds the payment is to be delayed, if\\n    ///  this value is below `timeLock` then the `timeLock` determines the delay\\n    /// @return The Payment ID number for the new authorized payment\\n    function authorizePayment(\\n        string _name,\\n        bytes32 _reference,\\n        address _recipient,\\n        address _token,\\n        uint _amount,\\n        uint _paymentDelay\\n    ) whenNotPaused external returns(uint) {\\n\\n        // Fail if you arent on the `allowedSpenders` white list\\n        require(allowedSpenders[msg.sender]);\\n        uint idPayment = authorizedPayments.length;       // Unique Payment ID\\n        authorizedPayments.length++;\\n\\n        // The following lines fill out the payment struct\\n        Payment storage p = authorizedPayments[idPayment];\\n        p.spender = msg.sender;\\n\\n        // Overflow protection\\n        require(_paymentDelay <= 10**18);\\n\\n        // Determines the earliest the recipient can receive payment (Unix time)\\n        p.earliestPayTime = _paymentDelay >= timeLock ?\\n                                _getTime() + _paymentDelay :\\n                                _getTime() + timeLock;\\n        p.recipient = _recipient;\\n        p.amount = _amount;\\n        p.name = _name;\\n        p.reference = _reference;\\n        p.token = _token;\\n        emit PaymentAuthorized(idPayment, p.recipient, p.amount, p.token, p.reference);\\n        return idPayment;\\n    }\\n\\n    /// @notice only `allowedSpenders[]` The recipient of a payment calls this\\n    ///  function to send themselves the ether after the `earliestPayTime` has\\n    ///  expired\\n    /// @param _idPayment The payment ID to be executed\\n    function collectAuthorizedPayment(uint _idPayment) whenNotPaused external {\\n\\n        // Check that the `_idPayment` has been added to the payments struct\\n        require(_idPayment < authorizedPayments.length);\\n\\n        Payment storage p = authorizedPayments[_idPayment];\\n\\n        // Checking for reasons not to execute the payment\\n        require(msg.sender == p.recipient);\\n        require(allowedSpenders[p.spender]);\\n        require(_getTime() >= p.earliestPayTime);\\n        require(!p.canceled);\\n        require(!p.paid);\\n        // if (this.balance < p.amount);\\n\\n        p.paid = true; // Set the payment to being paid\\n\\n        // Make the payment\\n        if (p.token == 0) {\\n            p.recipient.transfer(p.amount);\\n        } else {\\n            require(ERC20(p.token).transfer(p.recipient, p.amount));\\n        }\\n\\n        emit PaymentExecuted(_idPayment, p.recipient, p.amount, p.token);\\n    }\\n\\n/////////\\n// SecurityGuard Interface\\n/////////\\n\\n    /// @notice `onlySecurityGuard` Delays a payment for a set number of miliseconds\\n    /// @param _idPayment ID of the payment to be delayed\\n    /// @param _delay The number of miliseconds to delay the payment\\n    function delayPayment(uint _idPayment, uint _delay) onlySecurityGuard external {\\n        require(_idPayment < authorizedPayments.length);\\n\\n        // Overflow test\\n        require(_delay <= 10**18);\\n\\n        Payment storage p = authorizedPayments[_idPayment];\\n\\n        require(p.securityGuardDelay + _delay <= maxSecurityGuardDelay);\\n        require(!p.paid);\\n        require(!p.canceled);\\n\\n        p.securityGuardDelay += _delay;\\n        p.earliestPayTime += _delay;\\n    }\\n\\n////////\\n// Owner Interface\\n///////\\n\\n    /// @notice `onlyOwner` Cancel a payment all together\\n    /// @param _idPayment ID of the payment to be canceled.\\n    function cancelPayment(uint _idPayment) onlyOwner external {\\n        require(_idPayment < authorizedPayments.length);\\n\\n        Payment storage p = authorizedPayments[_idPayment];\\n\\n\\n        require(!p.canceled);\\n        require(!p.paid);\\n\\n        p.canceled = true;\\n        emit PaymentCanceled(_idPayment);\\n    }\\n\\n    /// @notice `onlyOwner` Adds a spender to the `allowedSpenders[]` white list\\n    /// @param _spender The address of the contract being authorized/unauthorized\\n    /// @param _authorize `true` if authorizing and `false` if unauthorizing\\n    function authorizeSpender(address _spender, bool _authorize) onlyOwner external {\\n        allowedSpenders[_spender] = _authorize;\\n        emit SpenderAuthorization(_spender, _authorize);\\n    }\\n\\n    /// @notice `onlyOwner` Sets the address of `securityGuard`\\n    /// @param _newSecurityGuard Address of the new security guard\\n    function setSecurityGuard(address _newSecurityGuard) onlyOwner external {\\n        securityGuard = _newSecurityGuard;\\n    }\\n\\n    /// @notice `onlyOwner` Changes `timeLock`; the new `timeLock` cannot be\\n    ///  lower than `absoluteMinTimeLock`\\n    /// @param _newTimeLock Sets the new minimum default `timeLock` in miliseconds;\\n    ///  pending payments maintain their `earliestPayTime`\\n    function setTimelock(uint _newTimeLock) onlyOwner external {\\n        require(_newTimeLock >= absoluteMinTimeLock);\\n        timeLock = _newTimeLock;\\n    }\\n\\n    /// @notice `onlyOwner` Changes the maximum number of miliseconds\\n    /// `securityGuard` can delay a payment\\n    /// @param _maxSecurityGuardDelay The new maximum delay in seconds that\\n    ///  `securityGuard` can delay the payment's execution in total\\n    function setMaxSecurityGuardDelay(uint _maxSecurityGuardDelay) onlyOwner external {\\n        maxSecurityGuardDelay = _maxSecurityGuardDelay;\\n    }\\n\\n    // for overidding during testing\\n    function _getTime() internal view returns (uint) {\\n        return now;\\n    }\\n}\",\"keccak256\":\"0xe1c8b2120faa1df5e2765f0591db0040f0f5259180f62b695686c7012812dfc5\"},\"giveth-common-contracts/contracts/ERC20.sol\":{\"content\":\"pragma solidity ^0.4.19;\\n\\n\\n/**\\n * @title ERC20\\n * @dev A standard interface for tokens.\\n * @dev https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\\n */\\ncontract ERC20 {\\n  \\n    /// @dev Returns the total token supply\\n    function totalSupply() public constant returns (uint256 supply);\\n\\n    /// @dev Returns the account balance of the account with address _owner\\n    function balanceOf(address _owner) public constant returns (uint256 balance);\\n\\n    /// @dev Transfers _value number of tokens to address _to\\n    function transfer(address _to, uint256 _value) public returns (bool success);\\n\\n    /// @dev Transfers _value number of tokens from address _from to address _to\\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\\n\\n    /// @dev Allows _spender to withdraw from the msg.sender's account up to the _value amount\\n    function approve(address _spender, uint256 _value) public returns (bool success);\\n\\n    /// @dev Returns the amount which _spender is still allowed to withdraw from _owner\\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining);\\n\\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\\n\\n}\\n\",\"keccak256\":\"0xe58902b5bdf9f918c6ec8ee4da44bf87faf225098fae84671ab07b46af427338\"},\"giveth-common-contracts/contracts/Escapable.sol\":{\"content\":\"pragma solidity ^0.4.19;\\n/*\\n    Copyright 2016, Jordi Baylina\\n    Contributor: Adrià Massanet <adria@codecontext.io>\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n*/\\n\\nimport \\\"./Owned.sol\\\";\\nimport \\\"./ERC20.sol\\\";\\n\\n\\n/// @dev `Escapable` is a base level contract built off of the `Owned`\\n///  contract; it creates an escape hatch function that can be called in an\\n///  emergency that will allow designated addresses to send any ether or tokens\\n///  held in the contract to an `escapeHatchDestination` as long as they were\\n///  not blacklisted\\ncontract Escapable is Owned {\\n    address public escapeHatchCaller;\\n    address public escapeHatchDestination;\\n    mapping (address=>bool) private escapeBlacklist; // Token contract addresses\\n\\n    /// @notice The Constructor assigns the `escapeHatchDestination` and the\\n    ///  `escapeHatchCaller`\\n    /// @param _escapeHatchCaller The address of a trusted account or contract\\n    ///  to call `escapeHatch()` to send the ether in this contract to the\\n    ///  `escapeHatchDestination` it would be ideal that `escapeHatchCaller`\\n    ///  cannot move funds out of `escapeHatchDestination`\\n    /// @param _escapeHatchDestination The address of a safe location (usu a\\n    ///  Multisig) to send the ether held in this contract; if a neutral address\\n    ///  is required, the WHG Multisig is an option:\\n    ///  0x8Ff920020c8AD673661c8117f2855C384758C572 \\n    function Escapable(address _escapeHatchCaller, address _escapeHatchDestination) public {\\n        escapeHatchCaller = _escapeHatchCaller;\\n        escapeHatchDestination = _escapeHatchDestination;\\n    }\\n\\n    /// @dev The addresses preassigned as `escapeHatchCaller` or `owner`\\n    ///  are the only addresses that can call a function with this modifier\\n    modifier onlyEscapeHatchCallerOrOwner {\\n        require ((msg.sender == escapeHatchCaller)||(msg.sender == owner));\\n        _;\\n    }\\n\\n    /// @notice Creates the blacklist of tokens that are not able to be taken\\n    ///  out of the contract; can only be done at the deployment, and the logic\\n    ///  to add to the blacklist will be in the constructor of a child contract\\n    /// @param _token the token contract address that is to be blacklisted \\n    function blacklistEscapeToken(address _token) internal {\\n        escapeBlacklist[_token] = true;\\n        EscapeHatchBlackistedToken(_token);\\n    }\\n\\n    /// @notice Checks to see if `_token` is in the blacklist of tokens\\n    /// @param _token the token address being queried\\n    /// @return False if `_token` is in the blacklist and can't be taken out of\\n    ///  the contract via the `escapeHatch()`\\n    function isTokenEscapable(address _token) view public returns (bool) {\\n        return !escapeBlacklist[_token];\\n    }\\n\\n    /// @notice The `escapeHatch()` should only be called as a last resort if a\\n    /// security issue is uncovered or something unexpected happened\\n    /// @param _token to transfer, use 0x0 for ether\\n    function escapeHatch(address _token) public onlyEscapeHatchCallerOrOwner {   \\n        require(escapeBlacklist[_token]==false);\\n\\n        uint256 balance;\\n\\n        /// @dev Logic for ether\\n        if (_token == 0x0) {\\n            balance = this.balance;\\n            escapeHatchDestination.transfer(balance);\\n            EscapeHatchCalled(_token, balance);\\n            return;\\n        }\\n        /// @dev Logic for tokens\\n        ERC20 token = ERC20(_token);\\n        balance = token.balanceOf(this);\\n        require(token.transfer(escapeHatchDestination, balance));\\n        EscapeHatchCalled(_token, balance);\\n    }\\n\\n    /// @notice Changes the address assigned to call `escapeHatch()`\\n    /// @param _newEscapeHatchCaller The address of a trusted account or\\n    ///  contract to call `escapeHatch()` to send the value in this contract to\\n    ///  the `escapeHatchDestination`; it would be ideal that `escapeHatchCaller`\\n    ///  cannot move funds out of `escapeHatchDestination`\\n    function changeHatchEscapeCaller(address _newEscapeHatchCaller) public onlyEscapeHatchCallerOrOwner {\\n        escapeHatchCaller = _newEscapeHatchCaller;\\n    }\\n\\n    event EscapeHatchBlackistedToken(address token);\\n    event EscapeHatchCalled(address token, uint amount);\\n}\\n\",\"keccak256\":\"0xd5d7b1a916841b21cfdee2bc9de4a178820421252b0c764070d78e846cd4511d\"},\"giveth-common-contracts/contracts/Owned.sol\":{\"content\":\"pragma solidity ^0.4.19;\\n\\n\\n/// @title Owned\\n/// @author Adrià Massanet <adria@codecontext.io>\\n/// @notice The Owned contract has an owner address, and provides basic \\n///  authorization control functions, this simplifies & the implementation of\\n///  user permissions; this contract has three work flows for a change in\\n///  ownership, the first requires the new owner to validate that they have the\\n///  ability to accept ownership, the second allows the ownership to be\\n///  directly transfered without requiring acceptance, and the third allows for\\n///  the ownership to be removed to allow for decentralization \\ncontract Owned {\\n\\n    address public owner;\\n    address public newOwnerCandidate;\\n\\n    event OwnershipRequested(address indexed by, address indexed to);\\n    event OwnershipTransferred(address indexed from, address indexed to);\\n    event OwnershipRemoved();\\n\\n    /// @dev The constructor sets the `msg.sender` as the`owner` of the contract\\n    function Owned() public {\\n        owner = msg.sender;\\n    }\\n\\n    /// @dev `owner` is the only address that can call a function with this\\n    /// modifier\\n    modifier onlyOwner() {\\n        require (msg.sender == owner);\\n        _;\\n    }\\n    \\n    /// @dev In this 1st option for ownership transfer `proposeOwnership()` must\\n    ///  be called first by the current `owner` then `acceptOwnership()` must be\\n    ///  called by the `newOwnerCandidate`\\n    /// @notice `onlyOwner` Proposes to transfer control of the contract to a\\n    ///  new owner\\n    /// @param _newOwnerCandidate The address being proposed as the new owner\\n    function proposeOwnership(address _newOwnerCandidate) public onlyOwner {\\n        newOwnerCandidate = _newOwnerCandidate;\\n        OwnershipRequested(msg.sender, newOwnerCandidate);\\n    }\\n\\n    /// @notice Can only be called by the `newOwnerCandidate`, accepts the\\n    ///  transfer of ownership\\n    function acceptOwnership() public {\\n        require(msg.sender == newOwnerCandidate);\\n\\n        address oldOwner = owner;\\n        owner = newOwnerCandidate;\\n        newOwnerCandidate = 0x0;\\n\\n        OwnershipTransferred(oldOwner, owner);\\n    }\\n\\n    /// @dev In this 2nd option for ownership transfer `changeOwnership()` can\\n    ///  be called and it will immediately assign ownership to the `newOwner`\\n    /// @notice `owner` can step down and assign some other address to this role\\n    /// @param _newOwner The address of the new owner\\n    function changeOwnership(address _newOwner) public onlyOwner {\\n        require(_newOwner != 0x0);\\n\\n        address oldOwner = owner;\\n        owner = _newOwner;\\n        newOwnerCandidate = 0x0;\\n\\n        OwnershipTransferred(oldOwner, owner);\\n    }\\n\\n    /// @dev In this 3rd option for ownership transfer `removeOwnership()` can\\n    ///  be called and it will immediately assign ownership to the 0x0 address;\\n    ///  it requires a 0xdece be input as a parameter to prevent accidental use\\n    /// @notice Decentralizes the contract, this operation cannot be undone \\n    /// @param _dac `0xdac` has to be entered for this function to work\\n    function removeOwnership(address _dac) public onlyOwner {\\n        require(_dac == 0xdac);\\n        owner = 0x0;\\n        newOwnerCandidate = 0x0;\\n        OwnershipRemoved();     \\n    }\\n} \\n\",\"keccak256\":\"0xc7d1401775fb1b41187de281757de68718fe27ba2660ba4bb194436aab7d0213\"}},\"version\":1}"
      }
    },
    "giveth-common-contracts/contracts/ERC20.sol": {
      "ERC20": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "name": "success",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "name": "supply",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_from",
                "type": "address"
              },
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "name": "success",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "name": "balance",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "name": "success",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "name": "remaining",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_owner",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_spender",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "",
            "sourceMap": ""
          },
          "methodIdentifiers": {
            "allowance(address,address)": "dd62ed3e",
            "approve(address,uint256)": "095ea7b3",
            "balanceOf(address)": "70a08231",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb",
            "transferFrom(address,address,uint256)": "23b872dd"
          }
        },
        "metadata": ""
      }
    },
    "giveth-common-contracts/contracts/Escapable.sol": {
      "Escapable": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "escapeHatchCaller",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newOwner",
                "type": "address"
              }
            ],
            "name": "changeOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_dac",
                "type": "address"
              }
            ],
            "name": "removeOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newOwnerCandidate",
                "type": "address"
              }
            ],
            "name": "proposeOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "acceptOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_token",
                "type": "address"
              }
            ],
            "name": "isTokenEscapable",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_token",
                "type": "address"
              }
            ],
            "name": "escapeHatch",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "newOwnerCandidate",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newEscapeHatchCaller",
                "type": "address"
              }
            ],
            "name": "changeHatchEscapeCaller",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "escapeHatchDestination",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "name": "_escapeHatchCaller",
                "type": "address"
              },
              {
                "name": "_escapeHatchDestination",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "token",
                "type": "address"
              }
            ],
            "name": "EscapeHatchBlackistedToken",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "token",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "EscapeHatchCalled",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "by",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              }
            ],
            "name": "OwnershipRequested",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "OwnershipRemoved",
            "type": "event"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "6060604052341561000f57600080fd5b6040516040806107a4833981016040528080519190602001805160008054600160a060020a03338116600160a060020a0319928316179092556002805496831696821696909617909555600380549190921694169390931790925550506107298061007b6000396000f3006060604052600436106100955763ffffffff60e060020a6000350416631f6eb6e7811461009a5780632af4c31e146100c9578063666a3427146100ea578063710bf3221461010957806379ba509714610128578063892db0571461013b5780638da5cb5b1461016e578063a142d60814610181578063d091b550146101a0578063d836fbe8146101b3578063f5b61230146101d2575b600080fd5b34156100a557600080fd5b6100ad6101e5565b604051600160a060020a03909116815260200160405180910390f35b34156100d457600080fd5b6100e8600160a060020a03600435166101f4565b005b34156100f557600080fd5b6100e8600160a060020a0360043516610295565b341561011457600080fd5b6100e8600160a060020a036004351661031f565b341561013357600080fd5b6100e861039d565b341561014657600080fd5b61015a600160a060020a036004351661042a565b604051901515815260200160405180910390f35b341561017957600080fd5b6100ad610449565b341561018c57600080fd5b6100e8600160a060020a0360043516610458565b34156101ab57600080fd5b6100ad61067a565b34156101be57600080fd5b6100e8600160a060020a0360043516610689565b34156101dd57600080fd5b6100ad6106ee565b600254600160a060020a031681565b6000805433600160a060020a0390811691161461021057600080fd5b600160a060020a038216151561022557600080fd5b5060008054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff1980841691909117938490556001805490911690559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60005433600160a060020a039081169116146102b057600080fd5b610dac600160a060020a038216146102c757600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff199081169091556001805490911690557f94e8b32e01b9eedfddd778ffbd051a7718cdc14781702884561162dca6f74dbb60405160405180910390a150565b60005433600160a060020a0390811691161461033a57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383811691909117918290559081169033167f13a4b3bc0d5234dd3d87c9f1557d8faefa37986da62c36ba49309e2fb2c9aec460405160405180910390a350565b60015460009033600160a060020a039081169116146103bb57600080fd5b50600080546001805473ffffffffffffffffffffffffffffffffffffffff19808416600160a060020a03838116919091179586905591169091559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b600160a060020a031660009081526004602052604090205460ff161590565b600054600160a060020a031681565b600254600090819033600160a060020a0390811691161480610488575060005433600160a060020a039081169116145b151561049357600080fd5b600160a060020a03831660009081526004602052604090205460ff16156104b957600080fd5b600160a060020a038316151561054b57600354600160a060020a033081163193501682156108fc0283604051600060405180830381858888f19350505050151561050257600080fd5b7fa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f28383604051600160a060020a03909216825260208201526040908101905180910390a1610675565b5081600160a060020a0381166370a082313060405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b151561059b57600080fd5b5af115156105a857600080fd5b5050506040518051600354909350600160a060020a03808416925063a9059cbb91168460405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561060e57600080fd5b5af1151561061b57600080fd5b50505060405180519050151561063057600080fd5b7fa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f28383604051600160a060020a03909216825260208201526040908101905180910390a15b505050565b600154600160a060020a031681565b60025433600160a060020a03908116911614806106b4575060005433600160a060020a039081169116145b15156106bf57600080fd5b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600354600160a060020a0316815600a165627a7a72305820189df89f1bfefe2468263f3f6b57dfd805805c76698f650cefdb3ae607a87cec0029",
            "sourceMap": "1147:3644:6:-;;;2004:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;993:5:7;:18;;-1:-1:-1;;;;;1001:10:7;993:18;;-1:-1:-1;;;;;;993:18:7;;;;;;;2101:17:6;:38;;;;;;;;;;;;;;;2149:22;:48;;;;;;;;;;;;;;;-1:-1:-1;;1147:3644:6;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "6060604052600436106100955763ffffffff60e060020a6000350416631f6eb6e7811461009a5780632af4c31e146100c9578063666a3427146100ea578063710bf3221461010957806379ba509714610128578063892db0571461013b5780638da5cb5b1461016e578063a142d60814610181578063d091b550146101a0578063d836fbe8146101b3578063f5b61230146101d2575b600080fd5b34156100a557600080fd5b6100ad6101e5565b604051600160a060020a03909116815260200160405180910390f35b34156100d457600080fd5b6100e8600160a060020a03600435166101f4565b005b34156100f557600080fd5b6100e8600160a060020a0360043516610295565b341561011457600080fd5b6100e8600160a060020a036004351661031f565b341561013357600080fd5b6100e861039d565b341561014657600080fd5b61015a600160a060020a036004351661042a565b604051901515815260200160405180910390f35b341561017957600080fd5b6100ad610449565b341561018c57600080fd5b6100e8600160a060020a0360043516610458565b34156101ab57600080fd5b6100ad61067a565b34156101be57600080fd5b6100e8600160a060020a0360043516610689565b34156101dd57600080fd5b6100ad6106ee565b600254600160a060020a031681565b6000805433600160a060020a0390811691161461021057600080fd5b600160a060020a038216151561022557600080fd5b5060008054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff1980841691909117938490556001805490911690559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60005433600160a060020a039081169116146102b057600080fd5b610dac600160a060020a038216146102c757600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff199081169091556001805490911690557f94e8b32e01b9eedfddd778ffbd051a7718cdc14781702884561162dca6f74dbb60405160405180910390a150565b60005433600160a060020a0390811691161461033a57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383811691909117918290559081169033167f13a4b3bc0d5234dd3d87c9f1557d8faefa37986da62c36ba49309e2fb2c9aec460405160405180910390a350565b60015460009033600160a060020a039081169116146103bb57600080fd5b50600080546001805473ffffffffffffffffffffffffffffffffffffffff19808416600160a060020a03838116919091179586905591169091559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b600160a060020a031660009081526004602052604090205460ff161590565b600054600160a060020a031681565b600254600090819033600160a060020a0390811691161480610488575060005433600160a060020a039081169116145b151561049357600080fd5b600160a060020a03831660009081526004602052604090205460ff16156104b957600080fd5b600160a060020a038316151561054b57600354600160a060020a033081163193501682156108fc0283604051600060405180830381858888f19350505050151561050257600080fd5b7fa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f28383604051600160a060020a03909216825260208201526040908101905180910390a1610675565b5081600160a060020a0381166370a082313060405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b151561059b57600080fd5b5af115156105a857600080fd5b5050506040518051600354909350600160a060020a03808416925063a9059cbb91168460405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561060e57600080fd5b5af1151561061b57600080fd5b50505060405180519050151561063057600080fd5b7fa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f28383604051600160a060020a03909216825260208201526040908101905180910390a15b505050565b600154600160a060020a031681565b60025433600160a060020a03908116911614806106b4575060005433600160a060020a039081169116145b15156106bf57600080fd5b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600354600160a060020a0316815600a165627a7a72305820189df89f1bfefe2468263f3f6b57dfd805805c76698f650cefdb3ae607a87cec0029",
            "sourceMap": "1147:3644:6:-;;;;;;;;;-1:-1:-1;;;1147:3644:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1181:32;;;;;;;;;;;;;;;-1:-1:-1;;;;;1181:32:6;;;;;;;;;;;;;;2422:246:7;;;;;;;;;;-1:-1:-1;;;;;2422:246:7;;;;;;;3062:182;;;;;;;;;;-1:-1:-1;;;;;3062:182:7;;;;;1585:185;;;;;;;;;;-1:-1:-1;;;;;1585:185:7;;;;;1882:242;;;;;;;;;;;;3215:117:6;;;;;;;;;;-1:-1:-1;;;;;3215:117:6;;;;;;;;;;;;;;;;;;;;;;638:20:7;;;;;;;;;;;;3540:611:6;;;;;;;;;;-1:-1:-1;;;;;3540:611:6;;;;;664:32:7;;;;;;;;;;;;4520:158:6;;;;;;;;;;-1:-1:-1;;;;;4520:158:6;;;;;1219:37;;;;;;;;;;;;1181:32;;;-1:-1:-1;;;;;1181:32:6;;:::o;2422:246:7:-;2529:16;1171:5;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;-1:-1:-1;;;;;2501:16:7;;;;2493:25;;;;;;-1:-1:-1;2548:5:7;;;-1:-1:-1;;;;;2563:17:7;;;-1:-1:-1;;2563:17:7;;;;;;;;;;;2548:5;2590:23;;;;;;;2548:5;;;;2655;2548;2624:37;;;;;;;;;;2422:246;;:::o;3062:182::-;1171:5;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;3144:5;-1:-1:-1;;;;;3136:13:7;;;3128:22;;;;;;3168:3;3160:11;;-1:-1:-1;;3160:11:7;;;;;;;3181:23;;;;;;;3214:18;;;;;;;;;;3062:182;:::o;1585:185::-;1171:5;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;1666:17;:38;;-1:-1:-1;;1666:38:7;-1:-1:-1;;;;;1666:38:7;;;;;;;;;;;1745:17;;;;1733:10;1714:49;;;;;;;;;;;1585:185;:::o;1882:242::-;1948:17;;1977:16;;1934:10;-1:-1:-1;;;;;1934:31:7;;;1948:17;;1934:31;1926:40;;;;;;-1:-1:-1;1996:5:7;;;;2019:17;;-1:-1:-1;;2011:25:7;;;-1:-1:-1;;;;;2019:17:7;;;2011:25;;;;;;;;2046:23;;;;;1996:5;;;;2111;1996;2080:37;;;;;;;;;;1882:242;:::o;3215:117:6:-;-1:-1:-1;;;;;3302:23:6;3278:4;3302:23;;;:15;:23;;;;;;;;3301:24;;3215:117::o;638:20:7:-;;;-1:-1:-1;;;;;638:20:7;;:::o;3540:611:6:-;2431:17;;3676:15;;;;2417:10;-1:-1:-1;;;;;2417:31:6;;;2431:17;;2417:31;;2416:56;;-1:-1:-1;2466:5:6;;2452:10;-1:-1:-1;;;;;2452:19:6;;;2466:5;;2452:19;2416:56;2407:66;;;;;;;;-1:-1:-1;;;;;3634:23:6;;;;;;:15;:23;;;;;;;;:30;3626:39;;;;;;-1:-1:-1;;;;;3739:13:6;;;3735:188;;;3804:22;;-1:-1:-1;;;;;3778:4:6;:12;;;;-1:-1:-1;3804:22:6;:40;;;;3778:12;3804:40;;;;;;;;;;;;;;;;;;;;;;;;;;3858:34;3876:6;3884:7;3858:34;;-1:-1:-1;;;;;3858:34:6;;;;;;;;;;;;;;;;;;;;3906:7;;3735:188;-1:-1:-1;3986:6:6;-1:-1:-1;;;;;4013:15:6;;;4029:4;4013:21;;-1:-1:-1;;;4013:21:6;;;;;;-1:-1:-1;;;;;4013:21:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4067:22;;4013:21;;-1:-1:-1;;;;;;4052:14:6;;;;-1:-1:-1;4052:14:6;;4067:22;4013:21;4052:47;;-1:-1:-1;;;4052:47:6;;;;;;-1:-1:-1;;;;;4052:47:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4044:56;;;;;;;;4110:34;4128:6;4136:7;4110:34;;-1:-1:-1;;;;;4110:34:6;;;;;;;;;;;;;;;;;;;;2483:1;3540:611;;;:::o;664:32:7:-;;;-1:-1:-1;;;;;664:32:7;;:::o;4520:158:6:-;2431:17;;2417:10;-1:-1:-1;;;;;2417:31:6;;;2431:17;;2417:31;;2416:56;;-1:-1:-1;2466:5:6;;2452:10;-1:-1:-1;;;;;2452:19:6;;;2466:5;;2452:19;2416:56;2407:66;;;;;;;;4630:17;:41;;-1:-1:-1;;4630:41:6;-1:-1:-1;;;;;4630:41:6;;;;;;;;;;4520:158::o;1219:37::-;;;-1:-1:-1;;;;;1219:37:6;;:::o"
          },
          "methodIdentifiers": {
            "acceptOwnership()": "79ba5097",
            "changeHatchEscapeCaller(address)": "d836fbe8",
            "changeOwnership(address)": "2af4c31e",
            "escapeHatch(address)": "a142d608",
            "escapeHatchCaller()": "1f6eb6e7",
            "escapeHatchDestination()": "f5b61230",
            "isTokenEscapable(address)": "892db057",
            "newOwnerCandidate()": "d091b550",
            "owner()": "8da5cb5b",
            "proposeOwnership(address)": "710bf322",
            "removeOwnership(address)": "666a3427"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.21+commit.dfe3193c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"escapeHatchCaller\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dac\",\"type\":\"address\"}],\"name\":\"removeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwnerCandidate\",\"type\":\"address\"}],\"name\":\"proposeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isTokenEscapable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"escapeHatch\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwnerCandidate\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newEscapeHatchCaller\",\"type\":\"address\"}],\"name\":\"changeHatchEscapeCaller\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"escapeHatchDestination\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_escapeHatchCaller\",\"type\":\"address\"},{\"name\":\"_escapeHatchDestination\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"}],\"name\":\"EscapeHatchBlackistedToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EscapeHatchCalled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"by\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"OwnershipRemoved\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"changeHatchEscapeCaller(address)\":{\"params\":{\"_newEscapeHatchCaller\":\"The address of a trusted account or  contract to call `escapeHatch()` to send the value in this contract to  the `escapeHatchDestination`; it would be ideal that `escapeHatchCaller`  cannot move funds out of `escapeHatchDestination`\"}},\"changeOwnership(address)\":{\"details\":\"In this 2nd option for ownership transfer `changeOwnership()` can  be called and it will immediately assign ownership to the `newOwner`\",\"params\":{\"_newOwner\":\"The address of the new owner\"}},\"escapeHatch(address)\":{\"params\":{\"_token\":\"to transfer, use 0x0 for ether\"}},\"isTokenEscapable(address)\":{\"params\":{\"_token\":\"the token address being queried\"},\"return\":\"False if `_token` is in the blacklist and can't be taken out of  the contract via the `escapeHatch()`\"},\"proposeOwnership(address)\":{\"details\":\"In this 1st option for ownership transfer `proposeOwnership()` must  be called first by the current `owner` then `acceptOwnership()` must be  called by the `newOwnerCandidate`\",\"params\":{\"_newOwnerCandidate\":\"The address being proposed as the new owner\"}},\"removeOwnership(address)\":{\"details\":\"In this 3rd option for ownership transfer `removeOwnership()` can  be called and it will immediately assign ownership to the 0x0 address;  it requires a 0xdece be input as a parameter to prevent accidental use\",\"params\":{\"_dac\":\"`0xdac` has to be entered for this function to work\"}}}},\"userdoc\":{\"methods\":{\"acceptOwnership()\":{\"notice\":\"Can only be called by the `newOwnerCandidate`, accepts the  transfer of ownership\"},\"changeHatchEscapeCaller(address)\":{\"notice\":\"Changes the address assigned to call `escapeHatch()`\"},\"changeOwnership(address)\":{\"notice\":\"`owner` can step down and assign some other address to this role\"},\"escapeHatch(address)\":{\"notice\":\"The `escapeHatch()` should only be called as a last resort if a security issue is uncovered or something unexpected happened\"},\"isTokenEscapable(address)\":{\"notice\":\"Checks to see if `_token` is in the blacklist of tokens\"},\"proposeOwnership(address)\":{\"notice\":\"`onlyOwner` Proposes to transfer control of the contract to a  new owner\"},\"removeOwnership(address)\":{\"notice\":\"Decentralizes the contract, this operation cannot be undone \"}}}},\"settings\":{\"compilationTarget\":{\"giveth-common-contracts/contracts/Escapable.sol\":\"Escapable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"giveth-common-contracts/contracts/ERC20.sol\":{\"content\":\"pragma solidity ^0.4.19;\\n\\n\\n/**\\n * @title ERC20\\n * @dev A standard interface for tokens.\\n * @dev https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\\n */\\ncontract ERC20 {\\n  \\n    /// @dev Returns the total token supply\\n    function totalSupply() public constant returns (uint256 supply);\\n\\n    /// @dev Returns the account balance of the account with address _owner\\n    function balanceOf(address _owner) public constant returns (uint256 balance);\\n\\n    /// @dev Transfers _value number of tokens to address _to\\n    function transfer(address _to, uint256 _value) public returns (bool success);\\n\\n    /// @dev Transfers _value number of tokens from address _from to address _to\\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\\n\\n    /// @dev Allows _spender to withdraw from the msg.sender's account up to the _value amount\\n    function approve(address _spender, uint256 _value) public returns (bool success);\\n\\n    /// @dev Returns the amount which _spender is still allowed to withdraw from _owner\\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining);\\n\\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\\n\\n}\\n\",\"keccak256\":\"0xe58902b5bdf9f918c6ec8ee4da44bf87faf225098fae84671ab07b46af427338\"},\"giveth-common-contracts/contracts/Escapable.sol\":{\"content\":\"pragma solidity ^0.4.19;\\n/*\\n    Copyright 2016, Jordi Baylina\\n    Contributor: Adrià Massanet <adria@codecontext.io>\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n*/\\n\\nimport \\\"./Owned.sol\\\";\\nimport \\\"./ERC20.sol\\\";\\n\\n\\n/// @dev `Escapable` is a base level contract built off of the `Owned`\\n///  contract; it creates an escape hatch function that can be called in an\\n///  emergency that will allow designated addresses to send any ether or tokens\\n///  held in the contract to an `escapeHatchDestination` as long as they were\\n///  not blacklisted\\ncontract Escapable is Owned {\\n    address public escapeHatchCaller;\\n    address public escapeHatchDestination;\\n    mapping (address=>bool) private escapeBlacklist; // Token contract addresses\\n\\n    /// @notice The Constructor assigns the `escapeHatchDestination` and the\\n    ///  `escapeHatchCaller`\\n    /// @param _escapeHatchCaller The address of a trusted account or contract\\n    ///  to call `escapeHatch()` to send the ether in this contract to the\\n    ///  `escapeHatchDestination` it would be ideal that `escapeHatchCaller`\\n    ///  cannot move funds out of `escapeHatchDestination`\\n    /// @param _escapeHatchDestination The address of a safe location (usu a\\n    ///  Multisig) to send the ether held in this contract; if a neutral address\\n    ///  is required, the WHG Multisig is an option:\\n    ///  0x8Ff920020c8AD673661c8117f2855C384758C572 \\n    function Escapable(address _escapeHatchCaller, address _escapeHatchDestination) public {\\n        escapeHatchCaller = _escapeHatchCaller;\\n        escapeHatchDestination = _escapeHatchDestination;\\n    }\\n\\n    /// @dev The addresses preassigned as `escapeHatchCaller` or `owner`\\n    ///  are the only addresses that can call a function with this modifier\\n    modifier onlyEscapeHatchCallerOrOwner {\\n        require ((msg.sender == escapeHatchCaller)||(msg.sender == owner));\\n        _;\\n    }\\n\\n    /// @notice Creates the blacklist of tokens that are not able to be taken\\n    ///  out of the contract; can only be done at the deployment, and the logic\\n    ///  to add to the blacklist will be in the constructor of a child contract\\n    /// @param _token the token contract address that is to be blacklisted \\n    function blacklistEscapeToken(address _token) internal {\\n        escapeBlacklist[_token] = true;\\n        EscapeHatchBlackistedToken(_token);\\n    }\\n\\n    /// @notice Checks to see if `_token` is in the blacklist of tokens\\n    /// @param _token the token address being queried\\n    /// @return False if `_token` is in the blacklist and can't be taken out of\\n    ///  the contract via the `escapeHatch()`\\n    function isTokenEscapable(address _token) view public returns (bool) {\\n        return !escapeBlacklist[_token];\\n    }\\n\\n    /// @notice The `escapeHatch()` should only be called as a last resort if a\\n    /// security issue is uncovered or something unexpected happened\\n    /// @param _token to transfer, use 0x0 for ether\\n    function escapeHatch(address _token) public onlyEscapeHatchCallerOrOwner {   \\n        require(escapeBlacklist[_token]==false);\\n\\n        uint256 balance;\\n\\n        /// @dev Logic for ether\\n        if (_token == 0x0) {\\n            balance = this.balance;\\n            escapeHatchDestination.transfer(balance);\\n            EscapeHatchCalled(_token, balance);\\n            return;\\n        }\\n        /// @dev Logic for tokens\\n        ERC20 token = ERC20(_token);\\n        balance = token.balanceOf(this);\\n        require(token.transfer(escapeHatchDestination, balance));\\n        EscapeHatchCalled(_token, balance);\\n    }\\n\\n    /// @notice Changes the address assigned to call `escapeHatch()`\\n    /// @param _newEscapeHatchCaller The address of a trusted account or\\n    ///  contract to call `escapeHatch()` to send the value in this contract to\\n    ///  the `escapeHatchDestination`; it would be ideal that `escapeHatchCaller`\\n    ///  cannot move funds out of `escapeHatchDestination`\\n    function changeHatchEscapeCaller(address _newEscapeHatchCaller) public onlyEscapeHatchCallerOrOwner {\\n        escapeHatchCaller = _newEscapeHatchCaller;\\n    }\\n\\n    event EscapeHatchBlackistedToken(address token);\\n    event EscapeHatchCalled(address token, uint amount);\\n}\\n\",\"keccak256\":\"0xd5d7b1a916841b21cfdee2bc9de4a178820421252b0c764070d78e846cd4511d\"},\"giveth-common-contracts/contracts/Owned.sol\":{\"content\":\"pragma solidity ^0.4.19;\\n\\n\\n/// @title Owned\\n/// @author Adrià Massanet <adria@codecontext.io>\\n/// @notice The Owned contract has an owner address, and provides basic \\n///  authorization control functions, this simplifies & the implementation of\\n///  user permissions; this contract has three work flows for a change in\\n///  ownership, the first requires the new owner to validate that they have the\\n///  ability to accept ownership, the second allows the ownership to be\\n///  directly transfered without requiring acceptance, and the third allows for\\n///  the ownership to be removed to allow for decentralization \\ncontract Owned {\\n\\n    address public owner;\\n    address public newOwnerCandidate;\\n\\n    event OwnershipRequested(address indexed by, address indexed to);\\n    event OwnershipTransferred(address indexed from, address indexed to);\\n    event OwnershipRemoved();\\n\\n    /// @dev The constructor sets the `msg.sender` as the`owner` of the contract\\n    function Owned() public {\\n        owner = msg.sender;\\n    }\\n\\n    /// @dev `owner` is the only address that can call a function with this\\n    /// modifier\\n    modifier onlyOwner() {\\n        require (msg.sender == owner);\\n        _;\\n    }\\n    \\n    /// @dev In this 1st option for ownership transfer `proposeOwnership()` must\\n    ///  be called first by the current `owner` then `acceptOwnership()` must be\\n    ///  called by the `newOwnerCandidate`\\n    /// @notice `onlyOwner` Proposes to transfer control of the contract to a\\n    ///  new owner\\n    /// @param _newOwnerCandidate The address being proposed as the new owner\\n    function proposeOwnership(address _newOwnerCandidate) public onlyOwner {\\n        newOwnerCandidate = _newOwnerCandidate;\\n        OwnershipRequested(msg.sender, newOwnerCandidate);\\n    }\\n\\n    /// @notice Can only be called by the `newOwnerCandidate`, accepts the\\n    ///  transfer of ownership\\n    function acceptOwnership() public {\\n        require(msg.sender == newOwnerCandidate);\\n\\n        address oldOwner = owner;\\n        owner = newOwnerCandidate;\\n        newOwnerCandidate = 0x0;\\n\\n        OwnershipTransferred(oldOwner, owner);\\n    }\\n\\n    /// @dev In this 2nd option for ownership transfer `changeOwnership()` can\\n    ///  be called and it will immediately assign ownership to the `newOwner`\\n    /// @notice `owner` can step down and assign some other address to this role\\n    /// @param _newOwner The address of the new owner\\n    function changeOwnership(address _newOwner) public onlyOwner {\\n        require(_newOwner != 0x0);\\n\\n        address oldOwner = owner;\\n        owner = _newOwner;\\n        newOwnerCandidate = 0x0;\\n\\n        OwnershipTransferred(oldOwner, owner);\\n    }\\n\\n    /// @dev In this 3rd option for ownership transfer `removeOwnership()` can\\n    ///  be called and it will immediately assign ownership to the 0x0 address;\\n    ///  it requires a 0xdece be input as a parameter to prevent accidental use\\n    /// @notice Decentralizes the contract, this operation cannot be undone \\n    /// @param _dac `0xdac` has to be entered for this function to work\\n    function removeOwnership(address _dac) public onlyOwner {\\n        require(_dac == 0xdac);\\n        owner = 0x0;\\n        newOwnerCandidate = 0x0;\\n        OwnershipRemoved();     \\n    }\\n} \\n\",\"keccak256\":\"0xc7d1401775fb1b41187de281757de68718fe27ba2660ba4bb194436aab7d0213\"}},\"version\":1}"
      }
    },
    "giveth-common-contracts/contracts/Owned.sol": {
      "Owned": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newOwner",
                "type": "address"
              }
            ],
            "name": "changeOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_dac",
                "type": "address"
              }
            ],
            "name": "removeOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newOwnerCandidate",
                "type": "address"
              }
            ],
            "name": "proposeOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "acceptOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "newOwnerCandidate",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "by",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              }
            ],
            "name": "OwnershipRequested",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "OwnershipRemoved",
            "type": "event"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "6060604052341561000f57600080fd5b60008054600160a060020a033316600160a060020a03199091161790556103b08061003b6000396000f3006060604052600436106100775763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416632af4c31e811461007c578063666a34271461009d578063710bf322146100bc57806379ba5097146100db5780638da5cb5b146100ee578063d091b5501461011d575b600080fd5b341561008757600080fd5b61009b600160a060020a0360043516610130565b005b34156100a857600080fd5b61009b600160a060020a03600435166101d1565b34156100c757600080fd5b61009b600160a060020a036004351661025b565b34156100e657600080fd5b61009b6102d9565b34156100f957600080fd5b610101610366565b604051600160a060020a03909116815260200160405180910390f35b341561012857600080fd5b610101610375565b6000805433600160a060020a0390811691161461014c57600080fd5b600160a060020a038216151561016157600080fd5b5060008054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff1980841691909117938490556001805490911690559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60005433600160a060020a039081169116146101ec57600080fd5b610dac600160a060020a0382161461020357600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff199081169091556001805490911690557f94e8b32e01b9eedfddd778ffbd051a7718cdc14781702884561162dca6f74dbb60405160405180910390a150565b60005433600160a060020a0390811691161461027657600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383811691909117918290559081169033167f13a4b3bc0d5234dd3d87c9f1557d8faefa37986da62c36ba49309e2fb2c9aec460405160405180910390a350565b60015460009033600160a060020a039081169116146102f757600080fd5b50600080546001805473ffffffffffffffffffffffffffffffffffffffff19808416600160a060020a03838116919091179586905591169091559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b600054600160a060020a031681565b600154600160a060020a0316815600a165627a7a7230582094f3ef431e86235027f139567f8a43276a952d0a2b46179793b470721c69ca240029",
            "sourceMap": "616:2630:7:-;;;959:59;;;;;;;;993:5;:18;;-1:-1:-1;;;;;1001:10:7;993:18;-1:-1:-1;;;;;;993:18:7;;;;;;616:2630;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "6060604052600436106100775763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416632af4c31e811461007c578063666a34271461009d578063710bf322146100bc57806379ba5097146100db5780638da5cb5b146100ee578063d091b5501461011d575b600080fd5b341561008757600080fd5b61009b600160a060020a0360043516610130565b005b34156100a857600080fd5b61009b600160a060020a03600435166101d1565b34156100c757600080fd5b61009b600160a060020a036004351661025b565b34156100e657600080fd5b61009b6102d9565b34156100f957600080fd5b610101610366565b604051600160a060020a03909116815260200160405180910390f35b341561012857600080fd5b610101610375565b6000805433600160a060020a0390811691161461014c57600080fd5b600160a060020a038216151561016157600080fd5b5060008054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff1980841691909117938490556001805490911690559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60005433600160a060020a039081169116146101ec57600080fd5b610dac600160a060020a0382161461020357600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff199081169091556001805490911690557f94e8b32e01b9eedfddd778ffbd051a7718cdc14781702884561162dca6f74dbb60405160405180910390a150565b60005433600160a060020a0390811691161461027657600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383811691909117918290559081169033167f13a4b3bc0d5234dd3d87c9f1557d8faefa37986da62c36ba49309e2fb2c9aec460405160405180910390a350565b60015460009033600160a060020a039081169116146102f757600080fd5b50600080546001805473ffffffffffffffffffffffffffffffffffffffff19808416600160a060020a03838116919091179586905591169091559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b600054600160a060020a031681565b600154600160a060020a0316815600a165627a7a7230582094f3ef431e86235027f139567f8a43276a952d0a2b46179793b470721c69ca240029",
            "sourceMap": "616:2630:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2422:246;;;;;;;;;;-1:-1:-1;;;;;2422:246:7;;;;;;;3062:182;;;;;;;;;;-1:-1:-1;;;;;3062:182:7;;;;;1585:185;;;;;;;;;;-1:-1:-1;;;;;1585:185:7;;;;;1882:242;;;;;;;;;;;;638:20;;;;;;;;;;;;;;;-1:-1:-1;;;;;638:20:7;;;;;;;;;;;;;;664:32;;;;;;;;;;;;2422:246;2529:16;1171:5;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;-1:-1:-1;;;;;2501:16:7;;;;2493:25;;;;;;-1:-1:-1;2548:5:7;;;-1:-1:-1;;;;;2563:17:7;;;-1:-1:-1;;2563:17:7;;;;;;;;;;;2548:5;2590:23;;;;;;;2548:5;;;;2655;2548;2624:37;;;;;;;;;;2422:246;;:::o;3062:182::-;1171:5;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;3144:5;-1:-1:-1;;;;;3136:13:7;;;3128:22;;;;;;3168:3;3160:11;;-1:-1:-1;;3160:11:7;;;;;;;3181:23;;;;;;;3214:18;;;;;;;;;;3062:182;:::o;1585:185::-;1171:5;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;1666:17;:38;;-1:-1:-1;;1666:38:7;-1:-1:-1;;;;;1666:38:7;;;;;;;;;;;1745:17;;;;1733:10;1714:49;;;;;;;;;;;1585:185;:::o;1882:242::-;1948:17;;1977:16;;1934:10;-1:-1:-1;;;;;1934:31:7;;;1948:17;;1934:31;1926:40;;;;;;-1:-1:-1;1996:5:7;;;;2019:17;;-1:-1:-1;;2011:25:7;;;-1:-1:-1;;;;;2019:17:7;;;2011:25;;;;;;;;2046:23;;;;;1996:5;;;;2111;1996;2080:37;;;;;;;;;;1882:242;:::o;638:20::-;;;-1:-1:-1;;;;;638:20:7;;:::o;664:32::-;;;-1:-1:-1;;;;;664:32:7;;:::o"
          },
          "methodIdentifiers": {
            "acceptOwnership()": "79ba5097",
            "changeOwnership(address)": "2af4c31e",
            "newOwnerCandidate()": "d091b550",
            "owner()": "8da5cb5b",
            "proposeOwnership(address)": "710bf322",
            "removeOwnership(address)": "666a3427"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.21+commit.dfe3193c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dac\",\"type\":\"address\"}],\"name\":\"removeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwnerCandidate\",\"type\":\"address\"}],\"name\":\"proposeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwnerCandidate\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"by\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"OwnershipRemoved\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"Adrià Massanet <adria@codecontext.io>\",\"methods\":{\"changeOwnership(address)\":{\"details\":\"In this 2nd option for ownership transfer `changeOwnership()` can  be called and it will immediately assign ownership to the `newOwner`\",\"params\":{\"_newOwner\":\"The address of the new owner\"}},\"proposeOwnership(address)\":{\"details\":\"In this 1st option for ownership transfer `proposeOwnership()` must  be called first by the current `owner` then `acceptOwnership()` must be  called by the `newOwnerCandidate`\",\"params\":{\"_newOwnerCandidate\":\"The address being proposed as the new owner\"}},\"removeOwnership(address)\":{\"details\":\"In this 3rd option for ownership transfer `removeOwnership()` can  be called and it will immediately assign ownership to the 0x0 address;  it requires a 0xdece be input as a parameter to prevent accidental use\",\"params\":{\"_dac\":\"`0xdac` has to be entered for this function to work\"}}},\"title\":\"Owned\"},\"userdoc\":{\"methods\":{\"acceptOwnership()\":{\"notice\":\"Can only be called by the `newOwnerCandidate`, accepts the  transfer of ownership\"},\"changeOwnership(address)\":{\"notice\":\"`owner` can step down and assign some other address to this role\"},\"proposeOwnership(address)\":{\"notice\":\"`onlyOwner` Proposes to transfer control of the contract to a  new owner\"},\"removeOwnership(address)\":{\"notice\":\"Decentralizes the contract, this operation cannot be undone \"}}}},\"settings\":{\"compilationTarget\":{\"giveth-common-contracts/contracts/Owned.sol\":\"Owned\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"giveth-common-contracts/contracts/Owned.sol\":{\"content\":\"pragma solidity ^0.4.19;\\n\\n\\n/// @title Owned\\n/// @author Adrià Massanet <adria@codecontext.io>\\n/// @notice The Owned contract has an owner address, and provides basic \\n///  authorization control functions, this simplifies & the implementation of\\n///  user permissions; this contract has three work flows for a change in\\n///  ownership, the first requires the new owner to validate that they have the\\n///  ability to accept ownership, the second allows the ownership to be\\n///  directly transfered without requiring acceptance, and the third allows for\\n///  the ownership to be removed to allow for decentralization \\ncontract Owned {\\n\\n    address public owner;\\n    address public newOwnerCandidate;\\n\\n    event OwnershipRequested(address indexed by, address indexed to);\\n    event OwnershipTransferred(address indexed from, address indexed to);\\n    event OwnershipRemoved();\\n\\n    /// @dev The constructor sets the `msg.sender` as the`owner` of the contract\\n    function Owned() public {\\n        owner = msg.sender;\\n    }\\n\\n    /// @dev `owner` is the only address that can call a function with this\\n    /// modifier\\n    modifier onlyOwner() {\\n        require (msg.sender == owner);\\n        _;\\n    }\\n    \\n    /// @dev In this 1st option for ownership transfer `proposeOwnership()` must\\n    ///  be called first by the current `owner` then `acceptOwnership()` must be\\n    ///  called by the `newOwnerCandidate`\\n    /// @notice `onlyOwner` Proposes to transfer control of the contract to a\\n    ///  new owner\\n    /// @param _newOwnerCandidate The address being proposed as the new owner\\n    function proposeOwnership(address _newOwnerCandidate) public onlyOwner {\\n        newOwnerCandidate = _newOwnerCandidate;\\n        OwnershipRequested(msg.sender, newOwnerCandidate);\\n    }\\n\\n    /// @notice Can only be called by the `newOwnerCandidate`, accepts the\\n    ///  transfer of ownership\\n    function acceptOwnership() public {\\n        require(msg.sender == newOwnerCandidate);\\n\\n        address oldOwner = owner;\\n        owner = newOwnerCandidate;\\n        newOwnerCandidate = 0x0;\\n\\n        OwnershipTransferred(oldOwner, owner);\\n    }\\n\\n    /// @dev In this 2nd option for ownership transfer `changeOwnership()` can\\n    ///  be called and it will immediately assign ownership to the `newOwner`\\n    /// @notice `owner` can step down and assign some other address to this role\\n    /// @param _newOwner The address of the new owner\\n    function changeOwnership(address _newOwner) public onlyOwner {\\n        require(_newOwner != 0x0);\\n\\n        address oldOwner = owner;\\n        owner = _newOwner;\\n        newOwnerCandidate = 0x0;\\n\\n        OwnershipTransferred(oldOwner, owner);\\n    }\\n\\n    /// @dev In this 3rd option for ownership transfer `removeOwnership()` can\\n    ///  be called and it will immediately assign ownership to the 0x0 address;\\n    ///  it requires a 0xdece be input as a parameter to prevent accidental use\\n    /// @notice Decentralizes the contract, this operation cannot be undone \\n    /// @param _dac `0xdac` has to be entered for this function to work\\n    function removeOwnership(address _dac) public onlyOwner {\\n        require(_dac == 0xdac);\\n        owner = 0x0;\\n        newOwnerCandidate = 0x0;\\n        OwnershipRemoved();     \\n    }\\n} \\n\",\"keccak256\":\"0xc7d1401775fb1b41187de281757de68718fe27ba2660ba4bb194436aab7d0213\"}},\"version\":1}"
      }
    },
    "lib/Pausable.sol": {
      "Pausable": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newOwner",
                "type": "address"
              }
            ],
            "name": "changeOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "unpause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "paused",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_dac",
                "type": "address"
              }
            ],
            "name": "removeOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newOwnerCandidate",
                "type": "address"
              }
            ],
            "name": "proposeOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "acceptOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "pause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "newOwnerCandidate",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "Pause",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "Unpause",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "by",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              }
            ],
            "name": "OwnershipRequested",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "OwnershipRemoved",
            "type": "event"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "60606040526001805460a060020a60ff021916905560008054600160a060020a033316600160a060020a0319909116179055610575806100406000396000f3006060604052600436106100985763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416632af4c31e811461009d5780633f4ba83a146100be5780635c975abb146100d1578063666a3427146100f8578063710bf3221461011757806379ba5097146101365780638456cb59146101495780638da5cb5b1461015c578063d091b5501461018b575b600080fd5b34156100a857600080fd5b6100bc600160a060020a036004351661019e565b005b34156100c957600080fd5b6100bc61023f565b34156100dc57600080fd5b6100e46102cf565b604051901515815260200160405180910390f35b341561010357600080fd5b6100bc600160a060020a03600435166102f0565b341561012257600080fd5b6100bc600160a060020a036004351661037a565b341561014157600080fd5b6100bc6103f8565b341561015457600080fd5b6100bc610485565b341561016757600080fd5b61016f61052b565b604051600160a060020a03909116815260200160405180910390f35b341561019657600080fd5b61016f61053a565b6000805433600160a060020a039081169116146101ba57600080fd5b600160a060020a03821615156101cf57600080fd5b5060008054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff1980841691909117938490556001805490911690559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60005433600160a060020a0390811691161461025a57600080fd5b60015474010000000000000000000000000000000000000000900460ff16151561028357600080fd5b6001805474ff0000000000000000000000000000000000000000191690557f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b60015474010000000000000000000000000000000000000000900460ff1681565b60005433600160a060020a0390811691161461030b57600080fd5b610dac600160a060020a0382161461032257600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff199081169091556001805490911690557f94e8b32e01b9eedfddd778ffbd051a7718cdc14781702884561162dca6f74dbb60405160405180910390a150565b60005433600160a060020a0390811691161461039557600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383811691909117918290559081169033167f13a4b3bc0d5234dd3d87c9f1557d8faefa37986da62c36ba49309e2fb2c9aec460405160405180910390a350565b60015460009033600160a060020a0390811691161461041657600080fd5b50600080546001805473ffffffffffffffffffffffffffffffffffffffff19808416600160a060020a03838116919091179586905591169091559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60005433600160a060020a039081169116146104a057600080fd5b60015474010000000000000000000000000000000000000000900460ff16156104c857600080fd5b6001805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790557f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b600054600160a060020a031681565b600154600160a060020a0316815600a165627a7a72305820bb785ce9c17176958a95e1d3737160fd8a998ff648f3938558b46aace683be010029",
            "sourceMap": "194:822:8:-;;;268:26;;;-1:-1:-1;;;;;;268:26:8;;;289:5;993:18:7;;-1:-1:-1;;;;;1001:10:7;993:18;-1:-1:-1;;;;;;993:18:7;;;;;;194:822:8;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "6060604052600436106100985763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416632af4c31e811461009d5780633f4ba83a146100be5780635c975abb146100d1578063666a3427146100f8578063710bf3221461011757806379ba5097146101365780638456cb59146101495780638da5cb5b1461015c578063d091b5501461018b575b600080fd5b34156100a857600080fd5b6100bc600160a060020a036004351661019e565b005b34156100c957600080fd5b6100bc61023f565b34156100dc57600080fd5b6100e46102cf565b604051901515815260200160405180910390f35b341561010357600080fd5b6100bc600160a060020a03600435166102f0565b341561012257600080fd5b6100bc600160a060020a036004351661037a565b341561014157600080fd5b6100bc6103f8565b341561015457600080fd5b6100bc610485565b341561016757600080fd5b61016f61052b565b604051600160a060020a03909116815260200160405180910390f35b341561019657600080fd5b61016f61053a565b6000805433600160a060020a039081169116146101ba57600080fd5b600160a060020a03821615156101cf57600080fd5b5060008054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff1980841691909117938490556001805490911690559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60005433600160a060020a0390811691161461025a57600080fd5b60015474010000000000000000000000000000000000000000900460ff16151561028357600080fd5b6001805474ff0000000000000000000000000000000000000000191690557f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b60015474010000000000000000000000000000000000000000900460ff1681565b60005433600160a060020a0390811691161461030b57600080fd5b610dac600160a060020a0382161461032257600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff199081169091556001805490911690557f94e8b32e01b9eedfddd778ffbd051a7718cdc14781702884561162dca6f74dbb60405160405180910390a150565b60005433600160a060020a0390811691161461039557600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383811691909117918290559081169033167f13a4b3bc0d5234dd3d87c9f1557d8faefa37986da62c36ba49309e2fb2c9aec460405160405180910390a350565b60015460009033600160a060020a0390811691161461041657600080fd5b50600080546001805473ffffffffffffffffffffffffffffffffffffffff19808416600160a060020a03838116919091179586905591169091559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60005433600160a060020a039081169116146104a057600080fd5b60015474010000000000000000000000000000000000000000900460ff16156104c857600080fd5b6001805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790557f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b600054600160a060020a031681565b600154600160a060020a0316815600a165627a7a72305820bb785ce9c17176958a95e1d3737160fd8a998ff648f3938558b46aace683be010029",
            "sourceMap": "194:822:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2422:246:7;;;;;;;;;;-1:-1:-1;;;;;2422:246:7;;;;;;;912:102:8;;;;;;;;;;;;268:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3062:182:7;;;;;;;;;;-1:-1:-1;;;;;3062:182:7;;;;;1585:185;;;;;;;;;;-1:-1:-1;;;;;1585:185:7;;;;;1882:242;;;;;;;;;;;;724:100:8;;;;;;;;;;;;638:20:7;;;;;;;;;;;;;;;-1:-1:-1;;;;;638:20:7;;;;;;;;;;;;;;664:32;;;;;;;;;;;;2422:246;2529:16;1171:5;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;-1:-1:-1;;;;;2501:16:7;;;;2493:25;;;;;;-1:-1:-1;2548:5:7;;;-1:-1:-1;;;;;2563:17:7;;;-1:-1:-1;;2563:17:7;;;;;;;;;;;2548:5;2590:23;;;;;;;2548:5;;;;2655;2548;2624:37;;;;;;;;;;2422:246;;:::o;912:102:8:-;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;614:6:8;;;;;;;606:15;;;;;;;;969:6;:14;;-1:-1:-1;;969:14:8;;;998:9;;;;;;;;;;912:102::o;268:26::-;;;;;;;;;:::o;3062:182:7:-;1171:5;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;3144:5;-1:-1:-1;;;;;3136:13:7;;;3128:22;;;;;;3168:3;3160:11;;-1:-1:-1;;3160:11:7;;;;;;;3181:23;;;;;;;3214:18;;;;;;;;;;3062:182;:::o;1585:185::-;1171:5;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;1666:17;:38;;-1:-1:-1;;1666:38:7;-1:-1:-1;;;;;1666:38:7;;;;;;;;;;;1745:17;;;;1733:10;1714:49;;;;;;;;;;;1585:185;:::o;1882:242::-;1948:17;;1977:16;;1934:10;-1:-1:-1;;;;;1934:31:7;;;1948:17;;1934:31;1926:40;;;;;;-1:-1:-1;1996:5:7;;;;2019:17;;-1:-1:-1;;2011:25:7;;;-1:-1:-1;;;;;2019:17:7;;;2011:25;;;;;;;;2046:23;;;;;1996:5;;;;2111;1996;2080:37;;;;;;;;;;1882:242;:::o;724:100:8:-;1171:5:7;;1157:10;-1:-1:-1;;;;;1157:19:7;;;1171:5;;1157:19;1148:29;;;;;;446:6:8;;;;;;;445:7;437:16;;;;;;791:4;782:13;;-1:-1:-1;;782:13:8;;;;;810:7;;;;;;;;;;724:100::o;638:20:7:-;;;-1:-1:-1;;;;;638:20:7;;:::o;664:32::-;;;-1:-1:-1;;;;;664:32:7;;:::o"
          },
          "methodIdentifiers": {
            "acceptOwnership()": "79ba5097",
            "changeOwnership(address)": "2af4c31e",
            "newOwnerCandidate()": "d091b550",
            "owner()": "8da5cb5b",
            "pause()": "8456cb59",
            "paused()": "5c975abb",
            "proposeOwnership(address)": "710bf322",
            "removeOwnership(address)": "666a3427",
            "unpause()": "3f4ba83a"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.21+commit.dfe3193c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dac\",\"type\":\"address\"}],\"name\":\"removeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwnerCandidate\",\"type\":\"address\"}],\"name\":\"proposeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwnerCandidate\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"by\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"OwnershipRemoved\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"changeOwnership(address)\":{\"details\":\"In this 2nd option for ownership transfer `changeOwnership()` can  be called and it will immediately assign ownership to the `newOwner`\",\"params\":{\"_newOwner\":\"The address of the new owner\"}},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"proposeOwnership(address)\":{\"details\":\"In this 1st option for ownership transfer `proposeOwnership()` must  be called first by the current `owner` then `acceptOwnership()` must be  called by the `newOwnerCandidate`\",\"params\":{\"_newOwnerCandidate\":\"The address being proposed as the new owner\"}},\"removeOwnership(address)\":{\"details\":\"In this 3rd option for ownership transfer `removeOwnership()` can  be called and it will immediately assign ownership to the 0x0 address;  it requires a 0xdece be input as a parameter to prevent accidental use\",\"params\":{\"_dac\":\"`0xdac` has to be entered for this function to work\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}},\"title\":\"Pausable\"},\"userdoc\":{\"methods\":{\"acceptOwnership()\":{\"notice\":\"Can only be called by the `newOwnerCandidate`, accepts the  transfer of ownership\"},\"changeOwnership(address)\":{\"notice\":\"`owner` can step down and assign some other address to this role\"},\"proposeOwnership(address)\":{\"notice\":\"`onlyOwner` Proposes to transfer control of the contract to a  new owner\"},\"removeOwnership(address)\":{\"notice\":\"Decentralizes the contract, this operation cannot be undone \"}}}},\"settings\":{\"compilationTarget\":{\"lib/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"giveth-common-contracts/contracts/Owned.sol\":{\"content\":\"pragma solidity ^0.4.19;\\n\\n\\n/// @title Owned\\n/// @author Adrià Massanet <adria@codecontext.io>\\n/// @notice The Owned contract has an owner address, and provides basic \\n///  authorization control functions, this simplifies & the implementation of\\n///  user permissions; this contract has three work flows for a change in\\n///  ownership, the first requires the new owner to validate that they have the\\n///  ability to accept ownership, the second allows the ownership to be\\n///  directly transfered without requiring acceptance, and the third allows for\\n///  the ownership to be removed to allow for decentralization \\ncontract Owned {\\n\\n    address public owner;\\n    address public newOwnerCandidate;\\n\\n    event OwnershipRequested(address indexed by, address indexed to);\\n    event OwnershipTransferred(address indexed from, address indexed to);\\n    event OwnershipRemoved();\\n\\n    /// @dev The constructor sets the `msg.sender` as the`owner` of the contract\\n    function Owned() public {\\n        owner = msg.sender;\\n    }\\n\\n    /// @dev `owner` is the only address that can call a function with this\\n    /// modifier\\n    modifier onlyOwner() {\\n        require (msg.sender == owner);\\n        _;\\n    }\\n    \\n    /// @dev In this 1st option for ownership transfer `proposeOwnership()` must\\n    ///  be called first by the current `owner` then `acceptOwnership()` must be\\n    ///  called by the `newOwnerCandidate`\\n    /// @notice `onlyOwner` Proposes to transfer control of the contract to a\\n    ///  new owner\\n    /// @param _newOwnerCandidate The address being proposed as the new owner\\n    function proposeOwnership(address _newOwnerCandidate) public onlyOwner {\\n        newOwnerCandidate = _newOwnerCandidate;\\n        OwnershipRequested(msg.sender, newOwnerCandidate);\\n    }\\n\\n    /// @notice Can only be called by the `newOwnerCandidate`, accepts the\\n    ///  transfer of ownership\\n    function acceptOwnership() public {\\n        require(msg.sender == newOwnerCandidate);\\n\\n        address oldOwner = owner;\\n        owner = newOwnerCandidate;\\n        newOwnerCandidate = 0x0;\\n\\n        OwnershipTransferred(oldOwner, owner);\\n    }\\n\\n    /// @dev In this 2nd option for ownership transfer `changeOwnership()` can\\n    ///  be called and it will immediately assign ownership to the `newOwner`\\n    /// @notice `owner` can step down and assign some other address to this role\\n    /// @param _newOwner The address of the new owner\\n    function changeOwnership(address _newOwner) public onlyOwner {\\n        require(_newOwner != 0x0);\\n\\n        address oldOwner = owner;\\n        owner = _newOwner;\\n        newOwnerCandidate = 0x0;\\n\\n        OwnershipTransferred(oldOwner, owner);\\n    }\\n\\n    /// @dev In this 3rd option for ownership transfer `removeOwnership()` can\\n    ///  be called and it will immediately assign ownership to the 0x0 address;\\n    ///  it requires a 0xdece be input as a parameter to prevent accidental use\\n    /// @notice Decentralizes the contract, this operation cannot be undone \\n    /// @param _dac `0xdac` has to be entered for this function to work\\n    function removeOwnership(address _dac) public onlyOwner {\\n        require(_dac == 0xdac);\\n        owner = 0x0;\\n        newOwnerCandidate = 0x0;\\n        OwnershipRemoved();     \\n    }\\n} \\n\",\"keccak256\":\"0xc7d1401775fb1b41187de281757de68718fe27ba2660ba4bb194436aab7d0213\"},\"lib/Pausable.sol\":{\"content\":\"pragma solidity ^0.4.21;\\n\\nimport \\\"giveth-common-contracts/contracts/Owned.sol\\\";\\n\\n/**\\n * @title Pausable\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\n */\\ncontract Pausable is Owned {\\n    event Pause();\\n    event Unpause();\\n\\n    bool public paused = false;\\n\\n    /**\\n    * @dev Modifier to make a function callable only when the contract is not paused.\\n    */\\n    modifier whenNotPaused() {\\n        require(!paused);\\n        _;\\n    }\\n\\n    /**\\n    * @dev Modifier to make a function callable only when the contract is paused.\\n    */\\n    modifier whenPaused() {\\n        require(paused);\\n        _;\\n    }\\n\\n    /**\\n    * @dev called by the owner to pause, triggers stopped state\\n    */\\n    function pause() onlyOwner whenNotPaused public {\\n        paused = true;\\n        emit Pause();\\n    }\\n\\n    /**\\n    * @dev called by the owner to unpause, returns to normal state\\n    */\\n    function unpause() onlyOwner whenPaused public {\\n        paused = false;\\n        emit Unpause();\\n    }\\n}\",\"keccak256\":\"0xd134809350f024c16096d995915c6a348d770e1ec633723419f4f3acbd1e4b46\"}},\"version\":1}"
      }
    },
    "minimetoken/contracts/Controlled.sol": {
      "Controlled": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newController",
                "type": "address"
              }
            ],
            "name": "changeController",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "controller",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "6060604052341561000f57600080fd5b60008054600160a060020a033316600160a060020a03199091161790556101668061003b6000396000f30060606040526004361061004b5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633cebb8238114610050578063f77c47911461007e575b600080fd5b341561005b57600080fd5b61007c73ffffffffffffffffffffffffffffffffffffffff600435166100ba565b005b341561008957600080fd5b61009161011e565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6000543373ffffffffffffffffffffffffffffffffffffffff9081169116146100e257600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a723058200854002cb66be0d0d09610166112a7b86336158083da362a374cc31735a23c810029",
            "sourceMap": "26:548:9:-;;;274:56;;;;;;;;305:10;:23;;-1:-1:-1;;;;;318:10:9;305:23;-1:-1:-1;;;;;;305:23:9;;;;;;26:548;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "60606040526004361061004b5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633cebb8238114610050578063f77c47911461007e575b600080fd5b341561005b57600080fd5b61007c73ffffffffffffffffffffffffffffffffffffffff600435166100ba565b005b341561008957600080fd5b61009161011e565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6000543373ffffffffffffffffffffffffffffffffffffffff9081169116146100e257600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a723058200854002cb66be0d0d09610166112a7b86336158083da362a374cc31735a23c810029",
            "sourceMap": "26:548:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:116;;;;;;;;;;;;;;;;;;242:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:116;219:10;;205;219;205:24;;;219:10;;205:24;197:33;;;;;;538:10;:27;;-1:-1:-1;;538:27:9;;;;;;;;;;;;456:116::o;242:25::-;;;;;;:::o"
          },
          "methodIdentifiers": {
            "changeController(address)": "3cebb823",
            "controller()": "f77c4791"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.21+commit.dfe3193c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_newController\",\"type\":\"address\"}],\"name\":\"changeController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{\"changeController(address)\":{\"params\":{\"_newController\":\"The new controller of the contract\"}}}},\"userdoc\":{\"methods\":{\"changeController(address)\":{\"notice\":\"Changes the controller of the contract\"}}}},\"settings\":{\"compilationTarget\":{\"minimetoken/contracts/Controlled.sol\":\"Controlled\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"minimetoken/contracts/Controlled.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\ncontract Controlled {\\n    /// @notice The address of the controller is the only address that can call\\n    ///  a function with this modifier\\n    modifier onlyController { require(msg.sender == controller); _; }\\n\\n    address public controller;\\n\\n    function Controlled() public { controller = msg.sender;}\\n\\n    /// @notice Changes the controller of the contract\\n    /// @param _newController The new controller of the contract\\n    function changeController(address _newController) public onlyController {\\n        controller = _newController;\\n    }\\n}\\n\",\"keccak256\":\"0x770798704985a4588762ea932b913bc1df01b4625ab86c5a7278883bbde44b78\"}},\"version\":1}"
      }
    },
    "minimetoken/contracts/MiniMeToken.sol": {
      "ApproveAndCallFallBack": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "from",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              },
              {
                "name": "_token",
                "type": "address"
              },
              {
                "name": "_data",
                "type": "bytes"
              }
            ],
            "name": "receiveApproval",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "",
            "sourceMap": ""
          },
          "methodIdentifiers": {
            "receiveApproval(address,uint256,address,bytes)": "8f4ffcb1"
          }
        },
        "metadata": ""
      },
      "MiniMeToken": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "name": "success",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "creationBlock",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_from",
                "type": "address"
              },
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "name": "success",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "decimals",
            "outputs": [
              {
                "name": "",
                "type": "uint8"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newController",
                "type": "address"
              }
            ],
            "name": "changeController",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_blockNumber",
                "type": "uint256"
              }
            ],
            "name": "balanceOfAt",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "version",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_cloneTokenName",
                "type": "string"
              },
              {
                "name": "_cloneDecimalUnits",
                "type": "uint8"
              },
              {
                "name": "_cloneTokenSymbol",
                "type": "string"
              },
              {
                "name": "_snapshotBlock",
                "type": "uint256"
              },
              {
                "name": "_transfersEnabled",
                "type": "bool"
              }
            ],
            "name": "createCloneToken",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "name": "balance",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "parentToken",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "generateTokens",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_blockNumber",
                "type": "uint256"
              }
            ],
            "name": "totalSupplyAt",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "name": "success",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "transfersEnabled",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "parentSnapShotBlock",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              },
              {
                "name": "_extraData",
                "type": "bytes"
              }
            ],
            "name": "approveAndCall",
            "outputs": [
              {
                "name": "success",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "destroyTokens",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "name": "remaining",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_token",
                "type": "address"
              }
            ],
            "name": "claimTokens",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "tokenFactory",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_transfersEnabled",
                "type": "bool"
              }
            ],
            "name": "enableTransfers",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "controller",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "name": "_tokenFactory",
                "type": "address"
              },
              {
                "name": "_parentToken",
                "type": "address"
              },
              {
                "name": "_parentSnapShotBlock",
                "type": "uint256"
              },
              {
                "name": "_tokenName",
                "type": "string"
              },
              {
                "name": "_decimalUnits",
                "type": "uint8"
              },
              {
                "name": "_tokenSymbol",
                "type": "string"
              },
              {
                "name": "_transfersEnabled",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "payable": true,
            "stateMutability": "payable",
            "type": "fallback"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_token",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_controller",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "ClaimedTokens",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_cloneToken",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_snapshotBlock",
                "type": "uint256"
              }
            ],
            "name": "NewCloneToken",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_owner",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_spender",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "sourceMap": "1541:19804:10:-;;;1809:33;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4244:728;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;305:10:9;:23;;-1:-1:-1;;;;;318:10:9;305:23;;-1:-1:-1;;;;;;305:23:9;;;;;;;;;;4501:12:10;:48;;;;;305:23:9;4501:48:10;-1:-1:-1;;;;;;4501:48:10;;;;;;;;;4244:728;-1:-1:-1;305:23:9;;-1:-1:-1;4566:10:10;;4559:17;;;;;;;;:::i;:::-;-1:-1:-1;4634:8:10;:24;;-1:-1:-1;;4634:24:10;;;;;;;4713:6;4722:12;;4713:21;;;;;;;;:::i;:::-;-1:-1:-1;4790:11:10;:39;;-1:-1:-1;;;;;;4790:39:10;-1:-1:-1;;;;;4790:39:10;;;;;;;;;;;-1:-1:-1;;;4839:19:10;:42;4891:16;:36;;-1:-1:-1;;4891:36:10;;;;;;;;;;-1:-1:-1;4953:12:10;4937:13;:28;1541:19804;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1541:19804:10;;;-1:-1:-1;1541:19804:10;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "",
            "sourceMap": "1541:19804:10:-;;;;;;;;;-1:-1:-1;;;1541:19804:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20156:10;;20145:22;;-1:-1:-1;;;;;20156:10:10;20145;:22::i;:::-;20137:31;;;;;;;;20202:10;;-1:-1:-1;;;;;20202:10:10;20186:40;20233:9;20244:10;20186:69;;-1:-1:-1;;;20186:69:10;;;;;;-1:-1:-1;;;;;20186:69:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20178:78;;;;;;;;1541:19804;1583:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1583:18:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9074:829;;;;;;;;;;-1:-1:-1;;;;;9074:829:10;;;;;;;;;;;;;;;;;;;;;;;;2724:25;;;;;;;;;;;;;;;;;;;;;;;;;;;11356:105;;;;;;;;;;;;5794:705;;;;;;;;;;-1:-1:-1;;;;;5794:705:10;;;;;;;;;;;;1663:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:116:9;;;;;;;;;;-1:-1:-1;;;;;456:116:9;;;;;11815:938:10;;;;;;;;;;-1:-1:-1;;;;;11815:938:10;;;;;;;1809:33;;;;;;;;;;;;14613:755;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14613:755:10;;-1:-1:-1;;14613:755:10;;;;;;;;;-1:-1:-1;14613:755:10;;-1:-1:-1;;;14613:755:10;;;;-1:-1:-1;;;;;14613:755:10;;;;;;;;;;;;;;;8541:134;;;;;;;;;;-1:-1:-1;;;;;8541:134:10;;;;;2423:30;;;;;;;;;;;;15699:576;;;;;;;;;;-1:-1:-1;;;;;15699:576:10;;;;;;;1744:20;;;;;;;;;;;;12966:910;;;;;;;;;;;;;;5271:173;;;;;;;;;;-1:-1:-1;;;;;5271:173:10;;;;;;;3303:28;;;;;;;;;;;;2610:31;;;;;;;;;;;;10890:342;;;;;;;;;;;;;-1:-1:-1;;;;;10890:342:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10890:342:10;;-1:-1:-1;10890:342:10;;-1:-1:-1;;;;;;10890:342:10;16505:500;;;;;;;;;;-1:-1:-1;;;;;16505:500:10;;;;;;;10222:151;;;;;;;;;;-1:-1:-1;;;;;10222:151:10;;;;;;;;;;20563:365;;;;;;;;;;-1:-1:-1;;;;;20563:365:10;;;;;3389:38;;;;;;;;;;;;17228:124;;;;;;;;;;;;;;;;242:25:9;;;;;;;;;;;;19467:222:10;19528:4;;-1:-1:-1;;;;;19567:10:10;;;19563:28;;;19586:5;19579:12;;;;19563:28;19644:5;19632:18;19624:26;;19681:1;19676:4;:6;19669:13;;19467:222;;;;;:::o;1583:18::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9074:829::-;9174:16;;9142:12;;9174:16;;9166:25;;;;;;;;9514:12;;;9513:54;;-1:-1:-1;;;;;;9540:10:10;9532:19;;;;;;:7;:19;;;;;;;;:29;;;;;;;;;;:34;9513:54;9505:63;;;;;;;;9662:10;;9651:22;;-1:-1:-1;;;;;9662:10:10;9651;:22::i;:::-;9647:130;;;9713:10;;-1:-1:-1;;;;;9713:10:10;9697:37;9735:10;9747:8;9757:7;9697:68;;-1:-1:-1;;;9697:68:10;;;;;;-1:-1:-1;;;;;9697:68:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9689:77;;;;;;;;-1:-1:-1;;;;;9795:10:10;9787:19;;;;;;:7;:19;;;;;;;;:29;;;;;;;;;;;;;;:39;;;9836;;9787;;9836;;;;;;;;;;;;;-1:-1:-1;9892:4:10;9074:829;;;;;:::o;2724:25::-;;;;:::o;11356:105::-;11404:4;11427:27;11441:12;11427:13;:27::i;:::-;11420:34;;11356:105;;:::o;5794:705::-;5882:12;6201:10;;6187;-1:-1:-1;;;;;6187:24:10;;;6201:10;;6187:24;6183:262;;6235:16;;;;6227:25;;;;;;;;-1:-1:-1;;;;;6333:14:10;;;;;;;:7;:14;;;;;;;;6348:10;6333:26;;;;;;;;;;:36;;;6329:54;;;-1:-1:-1;6378:5:10;6371:12;;6329:54;-1:-1:-1;;;;;6397:14:10;;;;;;;:7;:14;;;;;;;;6412:10;6397:26;;;;;;;;;:37;;;;;;;6183:262;6461:31;6472:5;6479:3;6484:7;6461:10;:31::i;:::-;6454:38;;5794:705;;;;;;:::o;1663:21::-;;;;;;:::o;456:116:9:-;219:10;;205;-1:-1:-1;;;;;205:24:9;;;219:10;;205:24;197:33;;;;;;538:10;:27;;-1:-1:-1;;538:27:9;-1:-1:-1;;;;;538:27:9;;;;;;;;;;456:116::o;11815:938:10:-;-1:-1:-1;;;;;12253:16:10;;11904:4;12253:16;;;:8;:16;;;;;:23;:28;;12252:92;;-1:-1:-1;;;;;;12299:16:10;;;;;;:8;:16;;;;;:19;;12331:12;;12299:16;:19;;;;;;;;;;;;;;;:29;-1:-1:-1;;;;;12299:29:10;:44;12252:92;12248:499;;;12372:11;;-1:-1:-1;;;;;12372:11:10;12364:25;12360:222;;12416:11;;12466:19;;-1:-1:-1;;;;;12416:11:10;;;;:23;;12440:6;;12448:38;;12452:12;;12448:3;:38::i;:::-;12416:71;;-1:-1:-1;;;12416:71:10;;;;;;-1:-1:-1;;;;;12416:71:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12409:78;;;;12360:222;-1:-1:-1;12566:1:10;12559:8;;12248:499;-1:-1:-1;;;;;12705:16:10;;;;;;:8;:16;;;;;12694:42;;12723:12;12694:10;:42::i;:::-;12687:49;;;;1809:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14613:755;14825:7;;14848:19;;14844:54;;;14886:12;14869:29;;14844:54;14933:12;;;;;-1:-1:-1;;;;;14933:12:10;:29;14976:4;14994:14;15022:15;15051:18;15083:17;15114;14933:212;;-1:-1:-1;;;14933:212:10;;;;;;-1:-1:-1;;;;;14933:212:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14933:212:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14933:212:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;15156:27:10;;;15184:10;15156:39;;-1:-1:-1;;;15156:39:10;;;;;;-1:-1:-1;;;;;15156:39:10;;;;;;;;;;-1:-1:-1;15156:39:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;15275:50:10;;;15310:14;15275:50;;;;;;;;;;;;;;15350:10;14613:755;-1:-1:-1;;;;;;14613:755:10:o;8541:134::-;8601:15;8635:33;8647:6;8655:12;8635:11;:33::i;:::-;8628:40;;8541:134;;;;:::o;2423:30::-;;;-1:-1:-1;;;;;2423:30:10;;:::o;15699:576::-;15789:4;219:10:9;;15789:4:10;;;;205:10:9;-1:-1:-1;;;;;205:24:9;;;219:10;;205:24;197:33;;;;;;15827:13:10;:11;:13::i;:::-;15805:35;-1:-1:-1;15858:24:10;;;:42;;;;15850:51;;;;;;15958:17;15968:6;15958:9;:17::i;:::-;15933:42;-1:-1:-1;15993:27:10;;;:48;;;;15985:57;;;;;;16074:62;16091:18;16128:7;16111:14;:24;16074:16;:62::i;:::-;-1:-1:-1;;;;;16163:16:10;;;;;;:8;:16;;;;;16146:63;;16181:27;;;16146:16;:63::i;:::-;-1:-1:-1;;;;;16219:28:10;;16228:1;16219:28;16239:7;16219:28;;;;;;;;;;;;;;-1:-1:-1;16264:4:10;;15699:576;-1:-1:-1;;;;15699:576:10:o;1744:20::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12966:910;13405:18;:25;13032:4;;13405:30;;13404:96;;;13487:12;13453:18;13472:1;13453:21;;;;;;;;;;;;;;;;;;;:31;-1:-1:-1;;;;;13453:31:10;:46;13404:96;13400:470;;;13528:11;;-1:-1:-1;;;;;13528:11:10;13520:25;13516:183;;13572:11;;13616:19;;-1:-1:-1;;;;;13572:11:10;;;;:25;;13598:38;;13602:12;;13598:3;:38::i;:::-;13572:65;;-1:-1:-1;;;13572:65:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13565:72;;;;13516:183;-1:-1:-1;13683:1:10;13676:8;;13400:470;13815:44;13826:18;13846:12;13815:10;:44::i;:::-;13808:51;;;;5271:173;5367:16;;5335:12;;5367:16;;5359:25;;;;;;;;5401:36;5412:10;5424:3;5429:7;5401:10;:36::i;3303:28::-;;;;;;:::o;2610:31::-;;;;:::o;10890:342::-;10988:12;11020:26;11028:8;11038:7;11020;:26::i;:::-;11012:35;;;;;;;;-1:-1:-1;;;;;11058:48:10;;;11120:10;11144:7;11165:4;11183:10;11058:145;;;;;-1:-1:-1;;;11058:145:10;;;-1:-1:-1;;;;;11058:145:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11058:145:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11221:4:10;;10890:342;-1:-1:-1;;;;;;10890:342:10:o;16505:500::-;16594:4;219:10:9;;16594:4:10;;;;205:10:9;-1:-1:-1;;;;;205:24:9;;;219:10;;205:24;197:33;;;;;;16632:13:10;:11;:13::i;:::-;16610:35;-1:-1:-1;16663:25:10;;;;16655:34;;;;;;16726:17;16736:6;16726:9;:17::i;:::-;16699:44;-1:-1:-1;16761:30:10;;;;16753:39;;;;;;16802:62;16819:18;16856:7;16839:14;:24;16802:16;:62::i;:::-;-1:-1:-1;;;;;16891:16:10;;;;;;:8;:16;;;;;16874:65;;16909:29;;;16874:16;:65::i;:::-;16966:1;-1:-1:-1;;;;;16949:28:10;;;16969:7;16949:28;;;;;;;;;;;;;;-1:-1:-1;16994:4:10;;16505:500;-1:-1:-1;;;;16505:500:10:o;10222:151::-;-1:-1:-1;;;;;10341:15:10;;;10305:17;10341:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;10222:151::o;20563:365::-;20739:17;219:10:9;;20739:17:10;;205:10:9;-1:-1:-1;;;;;205:24:9;;;219:10;;205:24;197:33;;;;;;-1:-1:-1;;;;;20636:13:10;;;20632:97;;;20665:10;;-1:-1:-1;;;;;20665:10:10;;;;20685:4;:12;;20665:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20712:7;;20632:97;20771:6;;-1:-1:-1;;;;;;20803:15:10;;;20819:4;20803:21;;-1:-1:-1;;;20803:21:10;;;;;;-1:-1:-1;;;;;20803:21:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20849:10;;20803:21;;-1:-1:-1;;;;;;20834:14:10;;;;-1:-1:-1;20834:14:10;;20849:10;20803:21;20834:35;;-1:-1:-1;;;20834:35:10;;;;;;-1:-1:-1;;;;;20834:35:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20901:10:10;;-1:-1:-1;;;;;20901:10:10;;;;20879:42;;;20913:7;20879:42;;;;;;;;;;;;;;232:1:9;20563:365:10;;;:::o;3389:38::-;;;;;;-1:-1:-1;;;;;3389:38:10;;:::o;17228:124::-;219:10:9;;205;-1:-1:-1;;;;;205:24:9;;;219:10;;205:24;197:33;;;;;;17309:16:10;:36;;-1:-1:-1;;17309:36:10;;;;;;;;;;17228:124::o;242:25:9:-;;;-1:-1:-1;;;;;242:25:9;;:::o;6878:1528:10:-;6962:4;;;6986:12;;6982:60;;;7024:4;7017:11;;;;6982:60;7063:19;;7085:12;7063:34;;7055:43;;;;;;-1:-1:-1;;;;;7193:8:10;;;;;;7192:36;;-1:-1:-1;7222:4:10;-1:-1:-1;;;;;7207:20:10;;;;;;;;7192:36;7184:45;;;;;;;;7396:32;7408:5;7415:12;7396:11;:32::i;:::-;7370:58;;7467:7;7445:19;:29;7441:78;;;7500:5;7493:12;;;;7441:78;7605:10;;7594:22;;-1:-1:-1;;;;;7605:10:10;7594;:22::i;:::-;7590:127;;;7659:10;;-1:-1:-1;;;;;7659:10:10;7643:38;7682:5;7689:3;7694:7;7643:59;;-1:-1:-1;;;7643:59:10;;;;;;-1:-1:-1;;;;;7643:59:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7635:68;;;;;;;;-1:-1:-1;;;;;7861:15:10;;;;;;:8;:15;;;;;7844:64;;7878:29;;;7844:16;:64::i;:::-;8061:30;8073:3;8078:12;8061:11;:30::i;:::-;8037:54;-1:-1:-1;8112:27:10;;;:48;;;;8104:57;;;;;;-1:-1:-1;;;;;8213:13:10;;;;;;:8;:13;;;;;8196:60;;8228:27;;;8196:16;:60::i;:::-;-1:-1:-1;;;;;8345:29:10;;;;;;;8366:7;8345:29;;;;;;;;;;;;;;8395:4;8388:11;;6878:1528;;;;;;;;:::o;19761:95::-;19813:4;19840:1;19836;:5;:13;;19848:1;19836:13;;;-1:-1:-1;19844:1:10;;19761:95;-1:-1:-1;19761:95:10:o;17726:765::-;17825:4;18166:8;18188;18261;17845:11;:18;;;;17867:1;17845:23;17841:37;;;17877:1;17870:8;;;;17841:37;17956:18;;;;-1:-1:-1;;17956:20:10;;;17944:33;;;;;;;;;;;;;;;:43;-1:-1:-1;;;;;17944:43:10;17934:53;;17930:117;;18020:18;;;;-1:-1:-1;;18020:20:10;;;18008:33;;;;;;;;;;;;;;;:39;;;;-1:-1:-1;;;;;18008:39:10;;-1:-1:-1;18001:46:10;;17930:117;18070:11;18082:1;18070:14;;;;;;;;;;;;;;;;;;;:24;-1:-1:-1;;;;;18070:24:10;18061:33;;18057:47;;;18103:1;18096:8;;;;18057:47;18199:18;;18177:1;;-1:-1:-1;;;18199:20:10;;-1:-1:-1;18229:217:10;18242:3;18236;:9;18229:217;;;18289:1;18285;18273:9;;;:13;18272:18;18261:29;;18336:6;18308:11;18320:3;18308:16;;;;;;;;;;;;;;;;;;;:26;-1:-1:-1;;;;;18308:26:10;:34;18304:132;;18368:3;18362:9;;18304:132;;;18420:1;18416:3;:5;18410:11;;18304:132;18229:217;;;18462:11;18474:3;18462:16;;;;;;;;;;;;;;;;;;;:22;;;;-1:-1:-1;;;;;18462:22:10;;-1:-1:-1;17726:765:10;;;;;;;;:::o;18709:587::-;18812:18;;18928:32;;;;18812:23;;18811:98;;-1:-1:-1;18861:18:10;;18896:12;;18861:18;;-1:-1:-1;;18861:21:10;;;18849:34;;;;;;;;;;;;;;;:44;-1:-1:-1;;;;;18849:44:10;:59;18811:98;18807:483;;;18976:20;;18963:11;;18976:20;18963:11;18976:20;;;;:::i;:::-;18963:35;;;;;;;;;;;;;;;;;19015:48;;-1:-1:-1;;;;;19080:37:10;;;-1:-1:-1;19080:37:10;19050:12;19015:48;;-1:-1:-1;;19015:48:10;;;;;;;19080:37;;;;18963:35;-1:-1:-1;18807:483:10;;;19201:18;;;;-1:-1:-1;;19201:20:10;;;19189:33;;;;;;;;;;;;;;;19239:37;;-1:-1:-1;;;;;19239:37:10;;;-1:-1:-1;19239:37:10;;;;;;19189:33;-1:-1:-1;18807:483:10;18709:587;;;;:::o;1541:19804::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
          },
          "methodIdentifiers": {
            "allowance(address,address)": "dd62ed3e",
            "approve(address,uint256)": "095ea7b3",
            "approveAndCall(address,uint256,bytes)": "cae9ca51",
            "balanceOf(address)": "70a08231",
            "balanceOfAt(address,uint256)": "4ee2cd7e",
            "changeController(address)": "3cebb823",
            "claimTokens(address)": "df8de3e7",
            "controller()": "f77c4791",
            "createCloneToken(string,uint8,string,uint256,bool)": "6638c087",
            "creationBlock()": "17634514",
            "decimals()": "313ce567",
            "destroyTokens(address,uint256)": "d3ce77fe",
            "enableTransfers(bool)": "f41e60c5",
            "generateTokens(address,uint256)": "827f32c0",
            "name()": "06fdde03",
            "parentSnapShotBlock()": "c5bcc4f1",
            "parentToken()": "80a54001",
            "symbol()": "95d89b41",
            "tokenFactory()": "e77772fe",
            "totalSupply()": "18160ddd",
            "totalSupplyAt(uint256)": "981b24d0",
            "transfer(address,uint256)": "a9059cbb",
            "transferFrom(address,address,uint256)": "23b872dd",
            "transfersEnabled()": "bef97c87",
            "version()": "54fd4d50"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.21+commit.dfe3193c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creationBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newController\",\"type\":\"address\"}],\"name\":\"changeController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cloneTokenName\",\"type\":\"string\"},{\"name\":\"_cloneDecimalUnits\",\"type\":\"uint8\"},{\"name\":\"_cloneTokenSymbol\",\"type\":\"string\"},{\"name\":\"_snapshotBlock\",\"type\":\"uint256\"},{\"name\":\"_transfersEnabled\",\"type\":\"bool\"}],\"name\":\"createCloneToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"generateTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transfersEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentSnapShotBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"destroyTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenFactory\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_transfersEnabled\",\"type\":\"bool\"}],\"name\":\"enableTransfers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenFactory\",\"type\":\"address\"},{\"name\":\"_parentToken\",\"type\":\"address\"},{\"name\":\"_parentSnapShotBlock\",\"type\":\"uint256\"},{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_decimalUnits\",\"type\":\"uint8\"},{\"name\":\"_tokenSymbol\",\"type\":\"string\"},{\"name\":\"_transfersEnabled\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_controller\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ClaimedTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_cloneToken\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_snapshotBlock\",\"type\":\"uint256\"}],\"name\":\"NewCloneToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"This function makes it easy to read the `allowed[]` map\",\"params\":{\"_owner\":\"The address of the account that owns the token\",\"_spender\":\"The address of the account able to transfer the tokens\"},\"return\":\"Amount of remaining tokens of _owner that _spender is allowed  to spend\"},\"approve(address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to be approved for transfer\",\"_spender\":\"The address of the account able to transfer the tokens\"},\"return\":\"True if the approval was successful\"},\"approveAndCall(address,uint256,bytes)\":{\"params\":{\"_amount\":\"The amount of tokens to be approved for transfer\",\"_spender\":\"The address of the contract able to transfer the tokens\"},\"return\":\"True if the function call was successful\"},\"balanceOf(address)\":{\"params\":{\"_owner\":\"The address that's balance is being requested\"},\"return\":\"The balance of `_owner` at the current block\"},\"balanceOfAt(address,uint256)\":{\"details\":\"Queries the balance of `_owner` at a specific `_blockNumber`\",\"params\":{\"_blockNumber\":\"The block number when the balance is queried\",\"_owner\":\"The address from which the balance will be retrieved\"},\"return\":\"The balance at `_blockNumber`\"},\"changeController(address)\":{\"params\":{\"_newController\":\"The new controller of the contract\"}},\"claimTokens(address)\":{\"params\":{\"_token\":\"The address of the token contract that you want to recover  set to 0 in case you want to extract ether.\"}},\"createCloneToken(string,uint8,string,uint256,bool)\":{\"params\":{\"_cloneDecimalUnits\":\"Number of decimals of the smallest unit\",\"_cloneTokenName\":\"Name of the clone token\",\"_cloneTokenSymbol\":\"Symbol of the clone token\",\"_snapshotBlock\":\"Block when the distribution of the parent token is  copied to set the initial distribution of the new clone token;  if the block is zero than the actual block, the current block is used\",\"_transfersEnabled\":\"True if transfers are allowed in the clone\"},\"return\":\"The address of the new MiniMeToken Contract\"},\"destroyTokens(address,uint256)\":{\"params\":{\"_amount\":\"The quantity of tokens to burn\",\"_owner\":\"The address that will lose the tokens\"},\"return\":\"True if the tokens are burned correctly\"},\"enableTransfers(bool)\":{\"params\":{\"_transfersEnabled\":\"True if transfers are allowed in the clone\"}},\"generateTokens(address,uint256)\":{\"params\":{\"_amount\":\"The quantity of tokens generated\",\"_owner\":\"The address that will be assigned the new tokens\"},\"return\":\"True if the tokens are generated correctly\"},\"totalSupply()\":{\"details\":\"This function makes it easy to get the total number of tokens\",\"return\":\"The total number of tokens\"},\"totalSupplyAt(uint256)\":{\"params\":{\"_blockNumber\":\"The block number when the totalSupply is queried\"},\"return\":\"The total amount of tokens at `_blockNumber`\"},\"transfer(address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to be transferred\",\"_to\":\"The address of the recipient\"},\"return\":\"Whether the transfer was successful or not\"},\"transferFrom(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to be transferred\",\"_from\":\"The address holding the tokens being transferred\",\"_to\":\"The address of the recipient\"},\"return\":\"True if the transfer was successful\"}}},\"userdoc\":{\"methods\":{\"approve(address,uint256)\":{\"notice\":\"`msg.sender` approves `_spender` to spend `_amount` tokens on  its behalf. This is a modified version of the ERC20 approve function  to be a little bit safer\"},\"approveAndCall(address,uint256,bytes)\":{\"notice\":\"`msg.sender` approves `_spender` to send `_amount` tokens on  its behalf, and then a function is triggered in the contract that is  being approved, `_spender`. This allows users to use their tokens to  interact with contracts in one function call instead of two\"},\"balanceOfAt(address,uint256)\":{\"notice\":\"/////////////\"},\"changeController(address)\":{\"notice\":\"Changes the controller of the contract\"},\"claimTokens(address)\":{\"notice\":\"///////This method can be used by the controller to extract mistakenly  sent tokens to this contract.\"},\"createCloneToken(string,uint8,string,uint256,bool)\":{\"notice\":\"/////////////Creates a new clone token with the initial distribution being  this token at `_snapshotBlock`\"},\"destroyTokens(address,uint256)\":{\"notice\":\"Burns `_amount` tokens from `_owner`\"},\"enableTransfers(bool)\":{\"notice\":\"/////////////Enables token holders to transfer their tokens freely if true\"},\"generateTokens(address,uint256)\":{\"notice\":\"/////////////Generates `_amount` tokens that are assigned to `_owner`\"},\"totalSupplyAt(uint256)\":{\"notice\":\"Total amount of tokens at a specific `_blockNumber`.\"},\"transfer(address,uint256)\":{\"notice\":\"////////////////Send `_amount` tokens to `_to` from `msg.sender`\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Send `_amount` tokens to `_to` from `_from` on the condition it  is approved by `_from`\"}}}},\"settings\":{\"compilationTarget\":{\"minimetoken/contracts/MiniMeToken.sol\":\"MiniMeToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"minimetoken/contracts/Controlled.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\ncontract Controlled {\\n    /// @notice The address of the controller is the only address that can call\\n    ///  a function with this modifier\\n    modifier onlyController { require(msg.sender == controller); _; }\\n\\n    address public controller;\\n\\n    function Controlled() public { controller = msg.sender;}\\n\\n    /// @notice Changes the controller of the contract\\n    /// @param _newController The new controller of the contract\\n    function changeController(address _newController) public onlyController {\\n        controller = _newController;\\n    }\\n}\\n\",\"keccak256\":\"0x770798704985a4588762ea932b913bc1df01b4625ab86c5a7278883bbde44b78\"},\"minimetoken/contracts/MiniMeToken.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/*\\n    Copyright 2016, Jordi Baylina\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n\\n/// @title MiniMeToken Contract\\n/// @author Jordi Baylina\\n/// @dev This token contract's goal is to make it easy for anyone to clone this\\n///  token using the token distribution at a given block, this will allow DAO's\\n///  and DApps to upgrade their features in a decentralized manner without\\n///  affecting the original token\\n/// @dev It is ERC20 compliant, but still needs to under go further testing.\\n\\nimport \\\"./Controlled.sol\\\";\\nimport \\\"./TokenController.sol\\\";\\n\\ncontract ApproveAndCallFallBack {\\n    function receiveApproval(address from, uint256 _amount, address _token, bytes _data) public;\\n}\\n\\n/// @dev The actual token contract, the default controller is the msg.sender\\n///  that deploys the contract, so usually this token will be deployed by a\\n///  token controller contract, which Giveth will call a \\\"Campaign\\\"\\ncontract MiniMeToken is Controlled {\\n\\n    string public name;                //The Token's name: e.g. DigixDAO Tokens\\n    uint8 public decimals;             //Number of decimals of the smallest unit\\n    string public symbol;              //An identifier: e.g. REP\\n    string public version = 'MMT_0.2'; //An arbitrary versioning scheme\\n\\n\\n    /// @dev `Checkpoint` is the structure that attaches a block number to a\\n    ///  given value, the block number attached is the one that last changed the\\n    ///  value\\n    struct  Checkpoint {\\n\\n        // `fromBlock` is the block number that the value was generated from\\n        uint128 fromBlock;\\n\\n        // `value` is the amount of tokens at a specific block number\\n        uint128 value;\\n    }\\n\\n    // `parentToken` is the Token address that was cloned to produce this token;\\n    //  it will be 0x0 for a token that was not cloned\\n    MiniMeToken public parentToken;\\n\\n    // `parentSnapShotBlock` is the block number from the Parent Token that was\\n    //  used to determine the initial distribution of the Clone Token\\n    uint public parentSnapShotBlock;\\n\\n    // `creationBlock` is the block number that the Clone Token was created\\n    uint public creationBlock;\\n\\n    // `balances` is the map that tracks the balance of each address, in this\\n    //  contract when the balance changes the block number that the change\\n    //  occurred is also included in the map\\n    mapping (address => Checkpoint[]) balances;\\n\\n    // `allowed` tracks any extra transfer rights as in all ERC20 tokens\\n    mapping (address => mapping (address => uint256)) allowed;\\n\\n    // Tracks the history of the `totalSupply` of the token\\n    Checkpoint[] totalSupplyHistory;\\n\\n    // Flag that determines if the token is transferable or not.\\n    bool public transfersEnabled;\\n\\n    // The factory used to create new clone tokens\\n    MiniMeTokenFactory public tokenFactory;\\n\\n////////////////\\n// Constructor\\n////////////////\\n\\n    /// @notice Constructor to create a MiniMeToken\\n    /// @param _tokenFactory The address of the MiniMeTokenFactory contract that\\n    ///  will create the Clone token contracts, the token factory needs to be\\n    ///  deployed first\\n    /// @param _parentToken Address of the parent token, set to 0x0 if it is a\\n    ///  new token\\n    /// @param _parentSnapShotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token, set to 0 if it\\n    ///  is a new token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    function MiniMeToken(\\n        address _tokenFactory,\\n        address _parentToken,\\n        uint _parentSnapShotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) public {\\n        tokenFactory = MiniMeTokenFactory(_tokenFactory);\\n        name = _tokenName;                                 // Set the name\\n        decimals = _decimalUnits;                          // Set the decimals\\n        symbol = _tokenSymbol;                             // Set the symbol\\n        parentToken = MiniMeToken(_parentToken);\\n        parentSnapShotBlock = _parentSnapShotBlock;\\n        transfersEnabled = _transfersEnabled;\\n        creationBlock = block.number;\\n    }\\n\\n\\n///////////////////\\n// ERC20 Methods\\n///////////////////\\n\\n    /// @notice Send `_amount` tokens to `_to` from `msg.sender`\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return Whether the transfer was successful or not\\n    function transfer(address _to, uint256 _amount) public returns (bool success) {\\n        require(transfersEnabled);\\n        return doTransfer(msg.sender, _to, _amount);\\n    }\\n\\n    /// @notice Send `_amount` tokens to `_to` from `_from` on the condition it\\n    ///  is approved by `_from`\\n    /// @param _from The address holding the tokens being transferred\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return True if the transfer was successful\\n    function transferFrom(address _from, address _to, uint256 _amount\\n    ) public returns (bool success) {\\n\\n        // The controller of this contract can move tokens around at will,\\n        //  this is important to recognize! Confirm that you trust the\\n        //  controller of this contract, which in most situations should be\\n        //  another open source smart contract or 0x0\\n        if (msg.sender != controller) {\\n            require(transfersEnabled);\\n\\n            // The standard ERC 20 transferFrom functionality\\n            if (allowed[_from][msg.sender] < _amount) return false;\\n            allowed[_from][msg.sender] -= _amount;\\n        }\\n        return doTransfer(_from, _to, _amount);\\n    }\\n\\n    /// @dev This is the actual transfer function in the token contract, it can\\n    ///  only be called by other functions in this contract.\\n    /// @param _from The address holding the tokens being transferred\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return True if the transfer was successful\\n    function doTransfer(address _from, address _to, uint _amount\\n    ) internal returns(bool) {\\n\\n           if (_amount == 0) {\\n               return true;\\n           }\\n\\n           require(parentSnapShotBlock < block.number);\\n\\n           // Do not allow transfer to 0x0 or the token contract itself\\n           require((_to != 0) && (_to != address(this)));\\n\\n           // If the amount being transfered is more than the balance of the\\n           //  account the transfer returns false\\n           var previousBalanceFrom = balanceOfAt(_from, block.number);\\n           if (previousBalanceFrom < _amount) {\\n               return false;\\n           }\\n\\n           // Alerts the token controller of the transfer\\n           if (isContract(controller)) {\\n               require(TokenController(controller).onTransfer(_from, _to, _amount));\\n           }\\n\\n           // First update the balance array with the new value for the address\\n           //  sending the tokens\\n           updateValueAtNow(balances[_from], previousBalanceFrom - _amount);\\n\\n           // Then update the balance array with the new value for the address\\n           //  receiving the tokens\\n           var previousBalanceTo = balanceOfAt(_to, block.number);\\n           require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\n           updateValueAtNow(balances[_to], previousBalanceTo + _amount);\\n\\n           // An event to make the transfer easy to find on the blockchain\\n           Transfer(_from, _to, _amount);\\n\\n           return true;\\n    }\\n\\n    /// @param _owner The address that's balance is being requested\\n    /// @return The balance of `_owner` at the current block\\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\\n        return balanceOfAt(_owner, block.number);\\n    }\\n\\n    /// @notice `msg.sender` approves `_spender` to spend `_amount` tokens on\\n    ///  its behalf. This is a modified version of the ERC20 approve function\\n    ///  to be a little bit safer\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @param _amount The amount of tokens to be approved for transfer\\n    /// @return True if the approval was successful\\n    function approve(address _spender, uint256 _amount) public returns (bool success) {\\n        require(transfersEnabled);\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender,0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require((_amount == 0) || (allowed[msg.sender][_spender] == 0));\\n\\n        // Alerts the token controller of the approve function call\\n        if (isContract(controller)) {\\n            require(TokenController(controller).onApprove(msg.sender, _spender, _amount));\\n        }\\n\\n        allowed[msg.sender][_spender] = _amount;\\n        Approval(msg.sender, _spender, _amount);\\n        return true;\\n    }\\n\\n    /// @dev This function makes it easy to read the `allowed[]` map\\n    /// @param _owner The address of the account that owns the token\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @return Amount of remaining tokens of _owner that _spender is allowed\\n    ///  to spend\\n    function allowance(address _owner, address _spender\\n    ) public constant returns (uint256 remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n    /// @notice `msg.sender` approves `_spender` to send `_amount` tokens on\\n    ///  its behalf, and then a function is triggered in the contract that is\\n    ///  being approved, `_spender`. This allows users to use their tokens to\\n    ///  interact with contracts in one function call instead of two\\n    /// @param _spender The address of the contract able to transfer the tokens\\n    /// @param _amount The amount of tokens to be approved for transfer\\n    /// @return True if the function call was successful\\n    function approveAndCall(address _spender, uint256 _amount, bytes _extraData\\n    ) public returns (bool success) {\\n        require(approve(_spender, _amount));\\n\\n        ApproveAndCallFallBack(_spender).receiveApproval(\\n            msg.sender,\\n            _amount,\\n            this,\\n            _extraData\\n        );\\n\\n        return true;\\n    }\\n\\n    /// @dev This function makes it easy to get the total number of tokens\\n    /// @return The total number of tokens\\n    function totalSupply() public constant returns (uint) {\\n        return totalSupplyAt(block.number);\\n    }\\n\\n\\n////////////////\\n// Query balance and totalSupply in History\\n////////////////\\n\\n    /// @dev Queries the balance of `_owner` at a specific `_blockNumber`\\n    /// @param _owner The address from which the balance will be retrieved\\n    /// @param _blockNumber The block number when the balance is queried\\n    /// @return The balance at `_blockNumber`\\n    function balanceOfAt(address _owner, uint _blockNumber) public constant\\n        returns (uint) {\\n\\n        // These next few lines are used when the balance of the token is\\n        //  requested before a check point was ever created for this token, it\\n        //  requires that the `parentToken.balanceOfAt` be queried at the\\n        //  genesis block for that token as this contains initial balance of\\n        //  this token\\n        if ((balances[_owner].length == 0)\\n            || (balances[_owner][0].fromBlock > _blockNumber)) {\\n            if (address(parentToken) != 0) {\\n                return parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock));\\n            } else {\\n                // Has no parent\\n                return 0;\\n            }\\n\\n        // This will return the expected balance during normal situations\\n        } else {\\n            return getValueAt(balances[_owner], _blockNumber);\\n        }\\n    }\\n\\n    /// @notice Total amount of tokens at a specific `_blockNumber`.\\n    /// @param _blockNumber The block number when the totalSupply is queried\\n    /// @return The total amount of tokens at `_blockNumber`\\n    function totalSupplyAt(uint _blockNumber) public constant returns(uint) {\\n\\n        // These next few lines are used when the totalSupply of the token is\\n        //  requested before a check point was ever created for this token, it\\n        //  requires that the `parentToken.totalSupplyAt` be queried at the\\n        //  genesis block for this token as that contains totalSupply of this\\n        //  token at this block number.\\n        if ((totalSupplyHistory.length == 0)\\n            || (totalSupplyHistory[0].fromBlock > _blockNumber)) {\\n            if (address(parentToken) != 0) {\\n                return parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock));\\n            } else {\\n                return 0;\\n            }\\n\\n        // This will return the expected totalSupply during normal situations\\n        } else {\\n            return getValueAt(totalSupplyHistory, _blockNumber);\\n        }\\n    }\\n\\n////////////////\\n// Clone Token Method\\n////////////////\\n\\n    /// @notice Creates a new clone token with the initial distribution being\\n    ///  this token at `_snapshotBlock`\\n    /// @param _cloneTokenName Name of the clone token\\n    /// @param _cloneDecimalUnits Number of decimals of the smallest unit\\n    /// @param _cloneTokenSymbol Symbol of the clone token\\n    /// @param _snapshotBlock Block when the distribution of the parent token is\\n    ///  copied to set the initial distribution of the new clone token;\\n    ///  if the block is zero than the actual block, the current block is used\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\n    /// @return The address of the new MiniMeToken Contract\\n    function createCloneToken(\\n        string _cloneTokenName,\\n        uint8 _cloneDecimalUnits,\\n        string _cloneTokenSymbol,\\n        uint _snapshotBlock,\\n        bool _transfersEnabled\\n        ) public returns(address) {\\n        if (_snapshotBlock == 0) _snapshotBlock = block.number;\\n        MiniMeToken cloneToken = tokenFactory.createCloneToken(\\n            this,\\n            _snapshotBlock,\\n            _cloneTokenName,\\n            _cloneDecimalUnits,\\n            _cloneTokenSymbol,\\n            _transfersEnabled\\n            );\\n\\n        cloneToken.changeController(msg.sender);\\n\\n        // An event to make the token easy to find on the blockchain\\n        NewCloneToken(address(cloneToken), _snapshotBlock);\\n        return address(cloneToken);\\n    }\\n\\n////////////////\\n// Generate and destroy tokens\\n////////////////\\n\\n    /// @notice Generates `_amount` tokens that are assigned to `_owner`\\n    /// @param _owner The address that will be assigned the new tokens\\n    /// @param _amount The quantity of tokens generated\\n    /// @return True if the tokens are generated correctly\\n    function generateTokens(address _owner, uint _amount\\n    ) public onlyController returns (bool) {\\n        uint curTotalSupply = totalSupply();\\n        require(curTotalSupply + _amount >= curTotalSupply); // Check for overflow\\n        uint previousBalanceTo = balanceOf(_owner);\\n        require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply + _amount);\\n        updateValueAtNow(balances[_owner], previousBalanceTo + _amount);\\n        Transfer(0, _owner, _amount);\\n        return true;\\n    }\\n\\n\\n    /// @notice Burns `_amount` tokens from `_owner`\\n    /// @param _owner The address that will lose the tokens\\n    /// @param _amount The quantity of tokens to burn\\n    /// @return True if the tokens are burned correctly\\n    function destroyTokens(address _owner, uint _amount\\n    ) onlyController public returns (bool) {\\n        uint curTotalSupply = totalSupply();\\n        require(curTotalSupply >= _amount);\\n        uint previousBalanceFrom = balanceOf(_owner);\\n        require(previousBalanceFrom >= _amount);\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply - _amount);\\n        updateValueAtNow(balances[_owner], previousBalanceFrom - _amount);\\n        Transfer(_owner, 0, _amount);\\n        return true;\\n    }\\n\\n////////////////\\n// Enable tokens transfers\\n////////////////\\n\\n\\n    /// @notice Enables token holders to transfer their tokens freely if true\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\n    function enableTransfers(bool _transfersEnabled) public onlyController {\\n        transfersEnabled = _transfersEnabled;\\n    }\\n\\n////////////////\\n// Internal helper functions to query and set a value in a snapshot array\\n////////////////\\n\\n    /// @dev `getValueAt` retrieves the number of tokens at a given block number\\n    /// @param checkpoints The history of values being queried\\n    /// @param _block The block number to retrieve the value at\\n    /// @return The number of tokens being queried\\n    function getValueAt(Checkpoint[] storage checkpoints, uint _block\\n    ) constant internal returns (uint) {\\n        if (checkpoints.length == 0) return 0;\\n\\n        // Shortcut for the actual value\\n        if (_block >= checkpoints[checkpoints.length-1].fromBlock)\\n            return checkpoints[checkpoints.length-1].value;\\n        if (_block < checkpoints[0].fromBlock) return 0;\\n\\n        // Binary search of the value in the array\\n        uint min = 0;\\n        uint max = checkpoints.length-1;\\n        while (max > min) {\\n            uint mid = (max + min + 1)/ 2;\\n            if (checkpoints[mid].fromBlock<=_block) {\\n                min = mid;\\n            } else {\\n                max = mid-1;\\n            }\\n        }\\n        return checkpoints[min].value;\\n    }\\n\\n    /// @dev `updateValueAtNow` used to update the `balances` map and the\\n    ///  `totalSupplyHistory`\\n    /// @param checkpoints The history of data being updated\\n    /// @param _value The new number of tokens\\n    function updateValueAtNow(Checkpoint[] storage checkpoints, uint _value\\n    ) internal  {\\n        if ((checkpoints.length == 0)\\n        || (checkpoints[checkpoints.length -1].fromBlock < block.number)) {\\n               Checkpoint storage newCheckPoint = checkpoints[ checkpoints.length++ ];\\n               newCheckPoint.fromBlock =  uint128(block.number);\\n               newCheckPoint.value = uint128(_value);\\n           } else {\\n               Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length-1];\\n               oldCheckPoint.value = uint128(_value);\\n           }\\n    }\\n\\n    /// @dev Internal function to determine if an address is a contract\\n    /// @param _addr The address being queried\\n    /// @return True if `_addr` is a contract\\n    function isContract(address _addr) constant internal returns(bool) {\\n        uint size;\\n        if (_addr == 0) return false;\\n        assembly {\\n            size := extcodesize(_addr)\\n        }\\n        return size>0;\\n    }\\n\\n    /// @dev Helper function to return a min betwen the two uints\\n    function min(uint a, uint b) pure internal returns (uint) {\\n        return a < b ? a : b;\\n    }\\n\\n    /// @notice The fallback function: If the contract's controller has not been\\n    ///  set to 0, then the `proxyPayment` method is called which relays the\\n    ///  ether and creates tokens as described in the token controller contract\\n    function () public payable {\\n        require(isContract(controller));\\n        require(TokenController(controller).proxyPayment.value(msg.value)(msg.sender));\\n    }\\n\\n//////////\\n// Safety Methods\\n//////////\\n\\n    /// @notice This method can be used by the controller to extract mistakenly\\n    ///  sent tokens to this contract.\\n    /// @param _token The address of the token contract that you want to recover\\n    ///  set to 0 in case you want to extract ether.\\n    function claimTokens(address _token) public onlyController {\\n        if (_token == 0x0) {\\n            controller.transfer(this.balance);\\n            return;\\n        }\\n\\n        MiniMeToken token = MiniMeToken(_token);\\n        uint balance = token.balanceOf(this);\\n        token.transfer(controller, balance);\\n        ClaimedTokens(_token, controller, balance);\\n    }\\n\\n////////////////\\n// Events\\n////////////////\\n    event ClaimedTokens(address indexed _token, address indexed _controller, uint _amount);\\n    event Transfer(address indexed _from, address indexed _to, uint256 _amount);\\n    event NewCloneToken(address indexed _cloneToken, uint _snapshotBlock);\\n    event Approval(\\n        address indexed _owner,\\n        address indexed _spender,\\n        uint256 _amount\\n        );\\n\\n}\\n\\n\\n////////////////\\n// MiniMeTokenFactory\\n////////////////\\n\\n/// @dev This contract is used to generate clone contracts from a contract.\\n///  In solidity this is the way to create a contract from a contract of the\\n///  same class\\ncontract MiniMeTokenFactory {\\n\\n    /// @notice Update the DApp by creating a new token with new functionalities\\n    ///  the msg.sender becomes the controller of this clone token\\n    /// @param _parentToken Address of the token being cloned\\n    /// @param _snapshotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    /// @return The address of the new token contract\\n    function createCloneToken(\\n        address _parentToken,\\n        uint _snapshotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) public returns (MiniMeToken) {\\n        MiniMeToken newToken = new MiniMeToken(\\n            this,\\n            _parentToken,\\n            _snapshotBlock,\\n            _tokenName,\\n            _decimalUnits,\\n            _tokenSymbol,\\n            _transfersEnabled\\n            );\\n\\n        newToken.changeController(msg.sender);\\n        return newToken;\\n    }\\n}\\n\",\"keccak256\":\"0x3dba5ff0dd1de9ebff6cd48898e78f7ce7c9996d345c702dca6a3a7d69750ed4\"},\"minimetoken/contracts/TokenController.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/// @dev The token controller contract must implement these functions\\ncontract TokenController {\\n    /// @notice Called when `_owner` sends ether to the MiniMe Token contract\\n    /// @param _owner The address that sent the ether to create tokens\\n    /// @return True if the ether is accepted, false if it throws\\n    function proxyPayment(address _owner) public payable returns(bool);\\n\\n    /// @notice Notifies the controller about a token transfer allowing the\\n    ///  controller to react if desired\\n    /// @param _from The origin of the transfer\\n    /// @param _to The destination of the transfer\\n    /// @param _amount The amount of the transfer\\n    /// @return False if the controller does not authorize the transfer\\n    function onTransfer(address _from, address _to, uint _amount) public returns(bool);\\n\\n    /// @notice Notifies the controller about an approval allowing the\\n    ///  controller to react if desired\\n    /// @param _owner The address that calls `approve()`\\n    /// @param _spender The spender in the `approve()` call\\n    /// @param _amount The amount in the `approve()` call\\n    /// @return False if the controller does not authorize the approval\\n    function onApprove(address _owner, address _spender, uint _amount) public\\n        returns(bool);\\n}\\n\",\"keccak256\":\"0xf8bf7de20c0412ab90ec43c1432508a8316e17bd246adffa737e0d779413ff5e\"}},\"version\":1}"
      },
      "MiniMeTokenFactory": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "_parentToken",
                "type": "address"
              },
              {
                "name": "_snapshotBlock",
                "type": "uint256"
              },
              {
                "name": "_tokenName",
                "type": "string"
              },
              {
                "name": "_decimalUnits",
                "type": "uint8"
              },
              {
                "name": "_tokenSymbol",
                "type": "string"
              },
              {
                "name": "_transfersEnabled",
                "type": "bool"
              }
            ],
            "name": "createCloneToken",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "sourceMap": "21574:1241:10:-;;;;;;;;;;;;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "6060604052600436106100405763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416635b7b72c18114610045575b600080fd5b341561005057600080fd5b6101096004803573ffffffffffffffffffffffffffffffffffffffff169060248035919060649060443590810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803560ff1690602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496505050509135151591506101329050565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6000803088888888888861014461030f565b73ffffffffffffffffffffffffffffffffffffffff8089168252871660208201526040810186905260ff8416608082015281151560c082015260e0606082018181529060a0830190830187818151815260200191508051906020019080838360005b838110156101be5780820151838201526020016101a6565b50505050905090810190601f1680156101eb5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015610221578082015183820152602001610209565b50505050905090810190601f16801561024e5780820380516001836020036101000a031916815260200191505b509950505050505050505050604051809103906000f080151561027057600080fd5b90508073ffffffffffffffffffffffffffffffffffffffff16633cebb823336040517c010000000000000000000000000000000000000000000000000000000063ffffffff841602815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401600060405180830381600087803b15156102f357600080fd5b5af1151561030057600080fd5b50919998505050505050505050565b6040516119dd80610320833901905600606060405260408051908101604052600781527f4d4d545f302e3200000000000000000000000000000000000000000000000000602082015260049080516200004d92916020019062000162565b5034156200005a57600080fd5b604051620019dd380380620019dd833981016040528080519190602001805191906020018051919060200180518201919060200180519190602001805182019190602001805160008054600160a060020a03338116600160a060020a031990921691909117909155600b8054918b166101000261010060a860020a0319909216919091179055915060019050848051620000f992916020019062000162565b506002805460ff191660ff851617905560038280516200011e92916020019062000162565b5060058054600160a060020a031916600160a060020a039790971696909617909555505050600655600b805460ff1916911515919091179055504360075562000207565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001a557805160ff1916838001178555620001d5565b82800160010185558215620001d5579182015b82811115620001d5578251825591602001919060010190620001b8565b50620001e3929150620001e7565b5090565b6200020491905b80821115620001e35760008155600101620001ee565b90565b6117c680620002176000396000f30060606040526004361061012f5763ffffffff60e060020a60003504166306fdde0381146101c4578063095ea7b31461024e578063176345141461028457806318160ddd146102a957806323b872dd146102bc578063313ce567146102e45780633cebb8231461030d5780634ee2cd7e1461032c57806354fd4d501461034e5780636638c0871461036157806370a082311461042557806380a5400114610444578063827f32c01461045757806395d89b4114610479578063981b24d01461048c578063a9059cbb146104a2578063bef97c87146104c4578063c5bcc4f1146104d7578063cae9ca51146104ea578063d3ce77fe1461054f578063dd62ed3e14610571578063df8de3e714610596578063e77772fe146105b5578063f41e60c5146105c8578063f77c4791146105e0575b60005461014490600160a060020a03166105f3565b151561014f57600080fd5b600054600160a060020a031663f48c3054343360405160e060020a63ffffffff8516028152600160a060020a0390911660048201526024016020604051808303818588803b151561019f57600080fd5b5af115156101ac57600080fd5b505050506040518051905015156101c257600080fd5b005b34156101cf57600080fd5b6101d7610620565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156102135780820151838201526020016101fb565b50505050905090810190601f1680156102405780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561025957600080fd5b610270600160a060020a03600435166024356106be565b604051901515815260200160405180910390f35b341561028f57600080fd5b610297610816565b60405190815260200160405180910390f35b34156102b457600080fd5b61029761081c565b34156102c757600080fd5b610270600160a060020a036004358116906024351660443561082d565b34156102ef57600080fd5b6102f76108cf565b60405160ff909116815260200160405180910390f35b341561031857600080fd5b6101c2600160a060020a03600435166108d8565b341561033757600080fd5b610297600160a060020a0360043516602435610922565b341561035957600080fd5b6101d7610a4b565b341561036c57600080fd5b61040960046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803560ff1690602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650508435946020013515159350610ab692505050565b604051600160a060020a03909116815260200160405180910390f35b341561043057600080fd5b610297600160a060020a0360043516610ccf565b341561044f57600080fd5b610409610ce3565b341561046257600080fd5b610270600160a060020a0360043516602435610cf2565b341561048457600080fd5b6101d7610dc2565b341561049757600080fd5b610297600435610e2d565b34156104ad57600080fd5b610270600160a060020a0360043516602435610f09565b34156104cf57600080fd5b610270610f28565b34156104e257600080fd5b610297610f31565b34156104f557600080fd5b61027060048035600160a060020a03169060248035919060649060443590810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650610f3795505050505050565b341561055a57600080fd5b610270600160a060020a036004351660243561104e565b341561057c57600080fd5b610297600160a060020a0360043581169060243516611118565b34156105a157600080fd5b6101c2600160a060020a0360043516611143565b34156105c057600080fd5b6104096112d4565b34156105d357600080fd5b6101c260043515156112e8565b34156105eb57600080fd5b610409611316565b600080600160a060020a038316151561060f576000915061061a565b823b90506000811191505b50919050565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106b65780601f1061068b576101008083540402835291602001916106b6565b820191906000526020600020905b81548152906001019060200180831161069957829003601f168201915b505050505081565b600b5460009060ff1615156106d257600080fd5b8115806107025750600160a060020a03338116600090815260096020908152604080832093871683529290522054155b151561070d57600080fd5b60005461072290600160a060020a03166105f3565b156107ac57600054600160a060020a031663da682aeb33858560405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401602060405180830381600087803b151561078a57600080fd5b5af1151561079757600080fd5b5050506040518051905015156107ac57600080fd5b600160a060020a03338116600081815260096020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b60075481565b600061082743610e2d565b90505b90565b6000805433600160a060020a039081169116146108ba57600b5460ff16151561085557600080fd5b600160a060020a03808516600090815260096020908152604080832033909416835292905220548290101561088c575060006108c8565b600160a060020a03808516600090815260096020908152604080832033909416835292905220805483900390555b6108c5848484611325565b90505b9392505050565b60025460ff1681565b60005433600160a060020a039081169116146108f357600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a038216600090815260086020526040812054158061097e5750600160a060020a03831660009081526008602052604081208054849290811061096757fe5b6000918252602090912001546001608060020a0316115b15610a2257600554600160a060020a031615610a1a57600554600654600160a060020a0390911690634ee2cd7e9085906109b99086906114f2565b60405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b15156109fc57600080fd5b5af11515610a0957600080fd5b505050604051805190509050610810565b506000610810565b600160a060020a0383166000908152600860205260409020610a449083611508565b9050610810565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106b65780601f1061068b576101008083540402835291602001916106b6565b600080831515610ac4574393505b600b546101009004600160a060020a0316635b7b72c130868a8a8a8960405160e060020a63ffffffff8916028152600160a060020a038716600482019081526024820187905260ff8516606483015282151560a483015260c0604483019081529091608481019060c40187818151815260200191508051906020019080838360005b83811015610b5e578082015183820152602001610b46565b50505050905090810190601f168015610b8b5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015610bc1578082015183820152602001610ba9565b50505050905090810190601f168015610bee5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b1515610c1257600080fd5b5af11515610c1f57600080fd5b5050506040518051915050600160a060020a038116633cebb8233360405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401600060405180830381600087803b1515610c7857600080fd5b5af11515610c8557600080fd5b50505080600160a060020a03167f086c875b377f900b07ce03575813022f05dd10ed7640b5282cf6d3c3fc352ade8560405190815260200160405180910390a29695505050505050565b6000610cdb8243610922565b90505b919050565b600554600160a060020a031681565b600080548190819033600160a060020a03908116911614610d1257600080fd5b610d1a61081c565b915083820182901015610d2c57600080fd5b610d3585610ccf565b905083810181901015610d4757600080fd5b610d54600a858401611667565b600160a060020a0385166000908152600860205260409020610d7890828601611667565b84600160a060020a031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8660405190815260200160405180910390a3506001949350505050565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106b65780601f1061068b576101008083540402835291602001916106b6565b600a546000901580610e62575081600a6000815481101515610e4b57fe5b6000918252602090912001546001608060020a0316115b15610ef757600554600160a060020a031615610eef57600554600654600160a060020a039091169063981b24d090610e9b9085906114f2565b60405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b1515610ed157600080fd5b5af11515610ede57600080fd5b505050604051805190509050610cde565b506000610cde565b610f02600a83611508565b9050610cde565b600b5460009060ff161515610f1d57600080fd5b6108c8338484611325565b600b5460ff1681565b60065481565b6000610f4384846106be565b1515610f4e57600080fd5b83600160a060020a0316638f4ffcb1338530866040518563ffffffff1660e060020a0281526004018085600160a060020a0316600160a060020a0316815260200184815260200183600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610fe6578082015183820152602001610fce565b50505050905090810190601f1680156110135780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b151561103457600080fd5b5af1151561104157600080fd5b5060019695505050505050565b600080548190819033600160a060020a0390811691161461106e57600080fd5b61107661081c565b91508382101561108557600080fd5b61108e85610ccf565b90508381101561109d57600080fd5b6110aa600a858403611667565b600160a060020a03851660009081526008602052604090206110ce90858303611667565b600085600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8660405190815260200160405180910390a3506001949350505050565b600160a060020a03918216600090815260096020908152604080832093909416825291909152205490565b60008054819033600160a060020a0390811691161461116157600080fd5b600160a060020a03831615156111af57600054600160a060020a039081169030163180156108fc0290604051600060405180830381858888f1935050505015156111aa57600080fd5b6112cf565b82915081600160a060020a03166370a082313060405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b151561120057600080fd5b5af1151561120d57600080fd5b5050506040518051600054909250600160a060020a03808516925063a9059cbb91168360405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561127357600080fd5b5af1151561128057600080fd5b50505060405180515050600054600160a060020a039081169084167ff931edb47c50b4b4104c187b5814a9aef5f709e17e2ecf9617e860cacade929c8360405190815260200160405180910390a35b505050565b600b546101009004600160a060020a031681565b60005433600160a060020a0390811691161461130357600080fd5b600b805460ff1916911515919091179055565b600054600160a060020a031681565b6000808083151561133957600192506114e9565b60065443901061134857600080fd5b600160a060020a03851615801590611372575030600160a060020a031685600160a060020a031614155b151561137d57600080fd5b6113878643610922565b91508382101561139a57600092506114e9565b6000546113af90600160a060020a03166105f3565b1561143957600054600160a060020a0316634a39314987878760405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401602060405180830381600087803b151561141757600080fd5b5af1151561142457600080fd5b50505060405180519050151561143957600080fd5b600160a060020a038616600090815260086020526040902061145d90858403611667565b6114678543610922565b90508381018190101561147957600080fd5b600160a060020a038516600090815260086020526040902061149d90828601611667565b84600160a060020a031686600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8660405190815260200160405180910390a3600192505b50509392505050565b600081831061150157816108c8565b5090919050565b600080600080858054905060001415611524576000935061165e565b85548690600019810190811061153657fe5b6000918252602090912001546001608060020a031685106115935785548690600019810190811061156357fe5b60009182526020909120015470010000000000000000000000000000000090046001608060020a0316935061165e565b8560008154811015156115a257fe5b6000918252602090912001546001608060020a03168510156115c7576000935061165e565b8554600093506000190191505b828211156116245760026001838501010490508486828154811015156115f657fe5b6000918252602090912001546001608060020a0316116116185780925061161f565b6001810391505b6115d4565b858381548110151561163257fe5b60009182526020909120015470010000000000000000000000000000000090046001608060020a031693505b50505092915050565b8154600090819015806116a05750835443908590600019810190811061168957fe5b6000918252602090912001546001608060020a0316105b1561171257835484906116b6826001830161175d565b815481106116c057fe5b600091825260209091200180546001608060020a03858116700100000000000000000000000000000000024382166fffffffffffffffffffffffffffffffff1990931692909217161781559150611757565b83548490600019810190811061172457fe5b600091825260209091200180546001608060020a0380861670010000000000000000000000000000000002911617815590505b50505050565b8154818355818115116112cf576000838152602090206112cf91810190830161082a91905b808211156117965760008155600101611782565b50905600a165627a7a7230582005c9c98a3395f1477580383a230dcb712727fb2333a7981f32c68597082d28050029a165627a7a72305820e228c0f9799f645af5214a70339e7955606e55f64d663d7da3025f86bd7a48120029",
            "sourceMap": "21574:1241:10:-;;;;;;;;;;;;;;;;;;;;;;;22254:559;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22254:559:10;;-1:-1:-1;;;;22254:559:10;;;;;-1:-1:-1;22254:559:10;;-1:-1:-1;22254:559:10;;;;;;;;;;;;;;;;;;;;22478:11;22501:20;22553:4;22571:12;22597:14;22625:10;22649:13;22676:12;22702:17;22524:209;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;22524:209:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;22524:209:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22501:232;;22744:8;:25;;;22770:10;22744:37;;;;;;;;;;;;;;;;;;;-1:-1:-1;22744:37:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22798:8:10;;22254:559;-1:-1:-1;;;;;;;;;22254:559:10:o;21574:1241::-;;;;;;;;;;:::o"
          },
          "methodIdentifiers": {
            "createCloneToken(address,uint256,string,uint8,string,bool)": "5b7b72c1"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.21+commit.dfe3193c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_parentToken\",\"type\":\"address\"},{\"name\":\"_snapshotBlock\",\"type\":\"uint256\"},{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_decimalUnits\",\"type\":\"uint8\"},{\"name\":\"_tokenSymbol\",\"type\":\"string\"},{\"name\":\"_transfersEnabled\",\"type\":\"bool\"}],\"name\":\"createCloneToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"createCloneToken(address,uint256,string,uint8,string,bool)\":{\"params\":{\"_decimalUnits\":\"Number of decimals of the new token\",\"_parentToken\":\"Address of the token being cloned\",\"_snapshotBlock\":\"Block of the parent token that will  determine the initial distribution of the clone token\",\"_tokenName\":\"Name of the new token\",\"_tokenSymbol\":\"Token Symbol for the new token\",\"_transfersEnabled\":\"If true, tokens will be able to be transferred\"},\"return\":\"The address of the new token contract\"}}},\"userdoc\":{\"methods\":{\"createCloneToken(address,uint256,string,uint8,string,bool)\":{\"notice\":\"Update the DApp by creating a new token with new functionalities  the msg.sender becomes the controller of this clone token\"}}}},\"settings\":{\"compilationTarget\":{\"minimetoken/contracts/MiniMeToken.sol\":\"MiniMeTokenFactory\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"minimetoken/contracts/Controlled.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\ncontract Controlled {\\n    /// @notice The address of the controller is the only address that can call\\n    ///  a function with this modifier\\n    modifier onlyController { require(msg.sender == controller); _; }\\n\\n    address public controller;\\n\\n    function Controlled() public { controller = msg.sender;}\\n\\n    /// @notice Changes the controller of the contract\\n    /// @param _newController The new controller of the contract\\n    function changeController(address _newController) public onlyController {\\n        controller = _newController;\\n    }\\n}\\n\",\"keccak256\":\"0x770798704985a4588762ea932b913bc1df01b4625ab86c5a7278883bbde44b78\"},\"minimetoken/contracts/MiniMeToken.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/*\\n    Copyright 2016, Jordi Baylina\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n\\n/// @title MiniMeToken Contract\\n/// @author Jordi Baylina\\n/// @dev This token contract's goal is to make it easy for anyone to clone this\\n///  token using the token distribution at a given block, this will allow DAO's\\n///  and DApps to upgrade their features in a decentralized manner without\\n///  affecting the original token\\n/// @dev It is ERC20 compliant, but still needs to under go further testing.\\n\\nimport \\\"./Controlled.sol\\\";\\nimport \\\"./TokenController.sol\\\";\\n\\ncontract ApproveAndCallFallBack {\\n    function receiveApproval(address from, uint256 _amount, address _token, bytes _data) public;\\n}\\n\\n/// @dev The actual token contract, the default controller is the msg.sender\\n///  that deploys the contract, so usually this token will be deployed by a\\n///  token controller contract, which Giveth will call a \\\"Campaign\\\"\\ncontract MiniMeToken is Controlled {\\n\\n    string public name;                //The Token's name: e.g. DigixDAO Tokens\\n    uint8 public decimals;             //Number of decimals of the smallest unit\\n    string public symbol;              //An identifier: e.g. REP\\n    string public version = 'MMT_0.2'; //An arbitrary versioning scheme\\n\\n\\n    /// @dev `Checkpoint` is the structure that attaches a block number to a\\n    ///  given value, the block number attached is the one that last changed the\\n    ///  value\\n    struct  Checkpoint {\\n\\n        // `fromBlock` is the block number that the value was generated from\\n        uint128 fromBlock;\\n\\n        // `value` is the amount of tokens at a specific block number\\n        uint128 value;\\n    }\\n\\n    // `parentToken` is the Token address that was cloned to produce this token;\\n    //  it will be 0x0 for a token that was not cloned\\n    MiniMeToken public parentToken;\\n\\n    // `parentSnapShotBlock` is the block number from the Parent Token that was\\n    //  used to determine the initial distribution of the Clone Token\\n    uint public parentSnapShotBlock;\\n\\n    // `creationBlock` is the block number that the Clone Token was created\\n    uint public creationBlock;\\n\\n    // `balances` is the map that tracks the balance of each address, in this\\n    //  contract when the balance changes the block number that the change\\n    //  occurred is also included in the map\\n    mapping (address => Checkpoint[]) balances;\\n\\n    // `allowed` tracks any extra transfer rights as in all ERC20 tokens\\n    mapping (address => mapping (address => uint256)) allowed;\\n\\n    // Tracks the history of the `totalSupply` of the token\\n    Checkpoint[] totalSupplyHistory;\\n\\n    // Flag that determines if the token is transferable or not.\\n    bool public transfersEnabled;\\n\\n    // The factory used to create new clone tokens\\n    MiniMeTokenFactory public tokenFactory;\\n\\n////////////////\\n// Constructor\\n////////////////\\n\\n    /// @notice Constructor to create a MiniMeToken\\n    /// @param _tokenFactory The address of the MiniMeTokenFactory contract that\\n    ///  will create the Clone token contracts, the token factory needs to be\\n    ///  deployed first\\n    /// @param _parentToken Address of the parent token, set to 0x0 if it is a\\n    ///  new token\\n    /// @param _parentSnapShotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token, set to 0 if it\\n    ///  is a new token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    function MiniMeToken(\\n        address _tokenFactory,\\n        address _parentToken,\\n        uint _parentSnapShotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) public {\\n        tokenFactory = MiniMeTokenFactory(_tokenFactory);\\n        name = _tokenName;                                 // Set the name\\n        decimals = _decimalUnits;                          // Set the decimals\\n        symbol = _tokenSymbol;                             // Set the symbol\\n        parentToken = MiniMeToken(_parentToken);\\n        parentSnapShotBlock = _parentSnapShotBlock;\\n        transfersEnabled = _transfersEnabled;\\n        creationBlock = block.number;\\n    }\\n\\n\\n///////////////////\\n// ERC20 Methods\\n///////////////////\\n\\n    /// @notice Send `_amount` tokens to `_to` from `msg.sender`\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return Whether the transfer was successful or not\\n    function transfer(address _to, uint256 _amount) public returns (bool success) {\\n        require(transfersEnabled);\\n        return doTransfer(msg.sender, _to, _amount);\\n    }\\n\\n    /// @notice Send `_amount` tokens to `_to` from `_from` on the condition it\\n    ///  is approved by `_from`\\n    /// @param _from The address holding the tokens being transferred\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return True if the transfer was successful\\n    function transferFrom(address _from, address _to, uint256 _amount\\n    ) public returns (bool success) {\\n\\n        // The controller of this contract can move tokens around at will,\\n        //  this is important to recognize! Confirm that you trust the\\n        //  controller of this contract, which in most situations should be\\n        //  another open source smart contract or 0x0\\n        if (msg.sender != controller) {\\n            require(transfersEnabled);\\n\\n            // The standard ERC 20 transferFrom functionality\\n            if (allowed[_from][msg.sender] < _amount) return false;\\n            allowed[_from][msg.sender] -= _amount;\\n        }\\n        return doTransfer(_from, _to, _amount);\\n    }\\n\\n    /// @dev This is the actual transfer function in the token contract, it can\\n    ///  only be called by other functions in this contract.\\n    /// @param _from The address holding the tokens being transferred\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return True if the transfer was successful\\n    function doTransfer(address _from, address _to, uint _amount\\n    ) internal returns(bool) {\\n\\n           if (_amount == 0) {\\n               return true;\\n           }\\n\\n           require(parentSnapShotBlock < block.number);\\n\\n           // Do not allow transfer to 0x0 or the token contract itself\\n           require((_to != 0) && (_to != address(this)));\\n\\n           // If the amount being transfered is more than the balance of the\\n           //  account the transfer returns false\\n           var previousBalanceFrom = balanceOfAt(_from, block.number);\\n           if (previousBalanceFrom < _amount) {\\n               return false;\\n           }\\n\\n           // Alerts the token controller of the transfer\\n           if (isContract(controller)) {\\n               require(TokenController(controller).onTransfer(_from, _to, _amount));\\n           }\\n\\n           // First update the balance array with the new value for the address\\n           //  sending the tokens\\n           updateValueAtNow(balances[_from], previousBalanceFrom - _amount);\\n\\n           // Then update the balance array with the new value for the address\\n           //  receiving the tokens\\n           var previousBalanceTo = balanceOfAt(_to, block.number);\\n           require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\n           updateValueAtNow(balances[_to], previousBalanceTo + _amount);\\n\\n           // An event to make the transfer easy to find on the blockchain\\n           Transfer(_from, _to, _amount);\\n\\n           return true;\\n    }\\n\\n    /// @param _owner The address that's balance is being requested\\n    /// @return The balance of `_owner` at the current block\\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\\n        return balanceOfAt(_owner, block.number);\\n    }\\n\\n    /// @notice `msg.sender` approves `_spender` to spend `_amount` tokens on\\n    ///  its behalf. This is a modified version of the ERC20 approve function\\n    ///  to be a little bit safer\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @param _amount The amount of tokens to be approved for transfer\\n    /// @return True if the approval was successful\\n    function approve(address _spender, uint256 _amount) public returns (bool success) {\\n        require(transfersEnabled);\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender,0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require((_amount == 0) || (allowed[msg.sender][_spender] == 0));\\n\\n        // Alerts the token controller of the approve function call\\n        if (isContract(controller)) {\\n            require(TokenController(controller).onApprove(msg.sender, _spender, _amount));\\n        }\\n\\n        allowed[msg.sender][_spender] = _amount;\\n        Approval(msg.sender, _spender, _amount);\\n        return true;\\n    }\\n\\n    /// @dev This function makes it easy to read the `allowed[]` map\\n    /// @param _owner The address of the account that owns the token\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @return Amount of remaining tokens of _owner that _spender is allowed\\n    ///  to spend\\n    function allowance(address _owner, address _spender\\n    ) public constant returns (uint256 remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n    /// @notice `msg.sender` approves `_spender` to send `_amount` tokens on\\n    ///  its behalf, and then a function is triggered in the contract that is\\n    ///  being approved, `_spender`. This allows users to use their tokens to\\n    ///  interact with contracts in one function call instead of two\\n    /// @param _spender The address of the contract able to transfer the tokens\\n    /// @param _amount The amount of tokens to be approved for transfer\\n    /// @return True if the function call was successful\\n    function approveAndCall(address _spender, uint256 _amount, bytes _extraData\\n    ) public returns (bool success) {\\n        require(approve(_spender, _amount));\\n\\n        ApproveAndCallFallBack(_spender).receiveApproval(\\n            msg.sender,\\n            _amount,\\n            this,\\n            _extraData\\n        );\\n\\n        return true;\\n    }\\n\\n    /// @dev This function makes it easy to get the total number of tokens\\n    /// @return The total number of tokens\\n    function totalSupply() public constant returns (uint) {\\n        return totalSupplyAt(block.number);\\n    }\\n\\n\\n////////////////\\n// Query balance and totalSupply in History\\n////////////////\\n\\n    /// @dev Queries the balance of `_owner` at a specific `_blockNumber`\\n    /// @param _owner The address from which the balance will be retrieved\\n    /// @param _blockNumber The block number when the balance is queried\\n    /// @return The balance at `_blockNumber`\\n    function balanceOfAt(address _owner, uint _blockNumber) public constant\\n        returns (uint) {\\n\\n        // These next few lines are used when the balance of the token is\\n        //  requested before a check point was ever created for this token, it\\n        //  requires that the `parentToken.balanceOfAt` be queried at the\\n        //  genesis block for that token as this contains initial balance of\\n        //  this token\\n        if ((balances[_owner].length == 0)\\n            || (balances[_owner][0].fromBlock > _blockNumber)) {\\n            if (address(parentToken) != 0) {\\n                return parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock));\\n            } else {\\n                // Has no parent\\n                return 0;\\n            }\\n\\n        // This will return the expected balance during normal situations\\n        } else {\\n            return getValueAt(balances[_owner], _blockNumber);\\n        }\\n    }\\n\\n    /// @notice Total amount of tokens at a specific `_blockNumber`.\\n    /// @param _blockNumber The block number when the totalSupply is queried\\n    /// @return The total amount of tokens at `_blockNumber`\\n    function totalSupplyAt(uint _blockNumber) public constant returns(uint) {\\n\\n        // These next few lines are used when the totalSupply of the token is\\n        //  requested before a check point was ever created for this token, it\\n        //  requires that the `parentToken.totalSupplyAt` be queried at the\\n        //  genesis block for this token as that contains totalSupply of this\\n        //  token at this block number.\\n        if ((totalSupplyHistory.length == 0)\\n            || (totalSupplyHistory[0].fromBlock > _blockNumber)) {\\n            if (address(parentToken) != 0) {\\n                return parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock));\\n            } else {\\n                return 0;\\n            }\\n\\n        // This will return the expected totalSupply during normal situations\\n        } else {\\n            return getValueAt(totalSupplyHistory, _blockNumber);\\n        }\\n    }\\n\\n////////////////\\n// Clone Token Method\\n////////////////\\n\\n    /// @notice Creates a new clone token with the initial distribution being\\n    ///  this token at `_snapshotBlock`\\n    /// @param _cloneTokenName Name of the clone token\\n    /// @param _cloneDecimalUnits Number of decimals of the smallest unit\\n    /// @param _cloneTokenSymbol Symbol of the clone token\\n    /// @param _snapshotBlock Block when the distribution of the parent token is\\n    ///  copied to set the initial distribution of the new clone token;\\n    ///  if the block is zero than the actual block, the current block is used\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\n    /// @return The address of the new MiniMeToken Contract\\n    function createCloneToken(\\n        string _cloneTokenName,\\n        uint8 _cloneDecimalUnits,\\n        string _cloneTokenSymbol,\\n        uint _snapshotBlock,\\n        bool _transfersEnabled\\n        ) public returns(address) {\\n        if (_snapshotBlock == 0) _snapshotBlock = block.number;\\n        MiniMeToken cloneToken = tokenFactory.createCloneToken(\\n            this,\\n            _snapshotBlock,\\n            _cloneTokenName,\\n            _cloneDecimalUnits,\\n            _cloneTokenSymbol,\\n            _transfersEnabled\\n            );\\n\\n        cloneToken.changeController(msg.sender);\\n\\n        // An event to make the token easy to find on the blockchain\\n        NewCloneToken(address(cloneToken), _snapshotBlock);\\n        return address(cloneToken);\\n    }\\n\\n////////////////\\n// Generate and destroy tokens\\n////////////////\\n\\n    /// @notice Generates `_amount` tokens that are assigned to `_owner`\\n    /// @param _owner The address that will be assigned the new tokens\\n    /// @param _amount The quantity of tokens generated\\n    /// @return True if the tokens are generated correctly\\n    function generateTokens(address _owner, uint _amount\\n    ) public onlyController returns (bool) {\\n        uint curTotalSupply = totalSupply();\\n        require(curTotalSupply + _amount >= curTotalSupply); // Check for overflow\\n        uint previousBalanceTo = balanceOf(_owner);\\n        require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply + _amount);\\n        updateValueAtNow(balances[_owner], previousBalanceTo + _amount);\\n        Transfer(0, _owner, _amount);\\n        return true;\\n    }\\n\\n\\n    /// @notice Burns `_amount` tokens from `_owner`\\n    /// @param _owner The address that will lose the tokens\\n    /// @param _amount The quantity of tokens to burn\\n    /// @return True if the tokens are burned correctly\\n    function destroyTokens(address _owner, uint _amount\\n    ) onlyController public returns (bool) {\\n        uint curTotalSupply = totalSupply();\\n        require(curTotalSupply >= _amount);\\n        uint previousBalanceFrom = balanceOf(_owner);\\n        require(previousBalanceFrom >= _amount);\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply - _amount);\\n        updateValueAtNow(balances[_owner], previousBalanceFrom - _amount);\\n        Transfer(_owner, 0, _amount);\\n        return true;\\n    }\\n\\n////////////////\\n// Enable tokens transfers\\n////////////////\\n\\n\\n    /// @notice Enables token holders to transfer their tokens freely if true\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\n    function enableTransfers(bool _transfersEnabled) public onlyController {\\n        transfersEnabled = _transfersEnabled;\\n    }\\n\\n////////////////\\n// Internal helper functions to query and set a value in a snapshot array\\n////////////////\\n\\n    /// @dev `getValueAt` retrieves the number of tokens at a given block number\\n    /// @param checkpoints The history of values being queried\\n    /// @param _block The block number to retrieve the value at\\n    /// @return The number of tokens being queried\\n    function getValueAt(Checkpoint[] storage checkpoints, uint _block\\n    ) constant internal returns (uint) {\\n        if (checkpoints.length == 0) return 0;\\n\\n        // Shortcut for the actual value\\n        if (_block >= checkpoints[checkpoints.length-1].fromBlock)\\n            return checkpoints[checkpoints.length-1].value;\\n        if (_block < checkpoints[0].fromBlock) return 0;\\n\\n        // Binary search of the value in the array\\n        uint min = 0;\\n        uint max = checkpoints.length-1;\\n        while (max > min) {\\n            uint mid = (max + min + 1)/ 2;\\n            if (checkpoints[mid].fromBlock<=_block) {\\n                min = mid;\\n            } else {\\n                max = mid-1;\\n            }\\n        }\\n        return checkpoints[min].value;\\n    }\\n\\n    /// @dev `updateValueAtNow` used to update the `balances` map and the\\n    ///  `totalSupplyHistory`\\n    /// @param checkpoints The history of data being updated\\n    /// @param _value The new number of tokens\\n    function updateValueAtNow(Checkpoint[] storage checkpoints, uint _value\\n    ) internal  {\\n        if ((checkpoints.length == 0)\\n        || (checkpoints[checkpoints.length -1].fromBlock < block.number)) {\\n               Checkpoint storage newCheckPoint = checkpoints[ checkpoints.length++ ];\\n               newCheckPoint.fromBlock =  uint128(block.number);\\n               newCheckPoint.value = uint128(_value);\\n           } else {\\n               Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length-1];\\n               oldCheckPoint.value = uint128(_value);\\n           }\\n    }\\n\\n    /// @dev Internal function to determine if an address is a contract\\n    /// @param _addr The address being queried\\n    /// @return True if `_addr` is a contract\\n    function isContract(address _addr) constant internal returns(bool) {\\n        uint size;\\n        if (_addr == 0) return false;\\n        assembly {\\n            size := extcodesize(_addr)\\n        }\\n        return size>0;\\n    }\\n\\n    /// @dev Helper function to return a min betwen the two uints\\n    function min(uint a, uint b) pure internal returns (uint) {\\n        return a < b ? a : b;\\n    }\\n\\n    /// @notice The fallback function: If the contract's controller has not been\\n    ///  set to 0, then the `proxyPayment` method is called which relays the\\n    ///  ether and creates tokens as described in the token controller contract\\n    function () public payable {\\n        require(isContract(controller));\\n        require(TokenController(controller).proxyPayment.value(msg.value)(msg.sender));\\n    }\\n\\n//////////\\n// Safety Methods\\n//////////\\n\\n    /// @notice This method can be used by the controller to extract mistakenly\\n    ///  sent tokens to this contract.\\n    /// @param _token The address of the token contract that you want to recover\\n    ///  set to 0 in case you want to extract ether.\\n    function claimTokens(address _token) public onlyController {\\n        if (_token == 0x0) {\\n            controller.transfer(this.balance);\\n            return;\\n        }\\n\\n        MiniMeToken token = MiniMeToken(_token);\\n        uint balance = token.balanceOf(this);\\n        token.transfer(controller, balance);\\n        ClaimedTokens(_token, controller, balance);\\n    }\\n\\n////////////////\\n// Events\\n////////////////\\n    event ClaimedTokens(address indexed _token, address indexed _controller, uint _amount);\\n    event Transfer(address indexed _from, address indexed _to, uint256 _amount);\\n    event NewCloneToken(address indexed _cloneToken, uint _snapshotBlock);\\n    event Approval(\\n        address indexed _owner,\\n        address indexed _spender,\\n        uint256 _amount\\n        );\\n\\n}\\n\\n\\n////////////////\\n// MiniMeTokenFactory\\n////////////////\\n\\n/// @dev This contract is used to generate clone contracts from a contract.\\n///  In solidity this is the way to create a contract from a contract of the\\n///  same class\\ncontract MiniMeTokenFactory {\\n\\n    /// @notice Update the DApp by creating a new token with new functionalities\\n    ///  the msg.sender becomes the controller of this clone token\\n    /// @param _parentToken Address of the token being cloned\\n    /// @param _snapshotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    /// @return The address of the new token contract\\n    function createCloneToken(\\n        address _parentToken,\\n        uint _snapshotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) public returns (MiniMeToken) {\\n        MiniMeToken newToken = new MiniMeToken(\\n            this,\\n            _parentToken,\\n            _snapshotBlock,\\n            _tokenName,\\n            _decimalUnits,\\n            _tokenSymbol,\\n            _transfersEnabled\\n            );\\n\\n        newToken.changeController(msg.sender);\\n        return newToken;\\n    }\\n}\\n\",\"keccak256\":\"0x3dba5ff0dd1de9ebff6cd48898e78f7ce7c9996d345c702dca6a3a7d69750ed4\"},\"minimetoken/contracts/TokenController.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/// @dev The token controller contract must implement these functions\\ncontract TokenController {\\n    /// @notice Called when `_owner` sends ether to the MiniMe Token contract\\n    /// @param _owner The address that sent the ether to create tokens\\n    /// @return True if the ether is accepted, false if it throws\\n    function proxyPayment(address _owner) public payable returns(bool);\\n\\n    /// @notice Notifies the controller about a token transfer allowing the\\n    ///  controller to react if desired\\n    /// @param _from The origin of the transfer\\n    /// @param _to The destination of the transfer\\n    /// @param _amount The amount of the transfer\\n    /// @return False if the controller does not authorize the transfer\\n    function onTransfer(address _from, address _to, uint _amount) public returns(bool);\\n\\n    /// @notice Notifies the controller about an approval allowing the\\n    ///  controller to react if desired\\n    /// @param _owner The address that calls `approve()`\\n    /// @param _spender The spender in the `approve()` call\\n    /// @param _amount The amount in the `approve()` call\\n    /// @return False if the controller does not authorize the approval\\n    function onApprove(address _owner, address _spender, uint _amount) public\\n        returns(bool);\\n}\\n\",\"keccak256\":\"0xf8bf7de20c0412ab90ec43c1432508a8316e17bd246adffa737e0d779413ff5e\"}},\"version\":1}"
      }
    },
    "minimetoken/contracts/TokenController.sol": {
      "TokenController": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "_from",
                "type": "address"
              },
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "onTransfer",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "onApprove",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              }
            ],
            "name": "proxyPayment",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": true,
            "stateMutability": "payable",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "",
            "sourceMap": ""
          },
          "methodIdentifiers": {
            "onApprove(address,address,uint256)": "da682aeb",
            "onTransfer(address,address,uint256)": "4a393149",
            "proxyPayment(address)": "f48c3054"
          }
        },
        "metadata": ""
      }
    }
  },
  "errors": [
    {
      "component": "general",
      "formattedMessage": "minimetoken/contracts/MiniMeToken.sol:179:12: Warning: Use of the \"var\" keyword is deprecated.\n           var previousBalanceFrom = balanceOfAt(_from, block.number);\n           ^---------------------^\n",
      "message": "Use of the \"var\" keyword is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 7393,
        "file": "minimetoken/contracts/MiniMeToken.sol",
        "start": 7370
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "minimetoken/contracts/MiniMeToken.sol:195:12: Warning: Use of the \"var\" keyword is deprecated.\n           var previousBalanceTo = balanceOfAt(_to, block.number);\n           ^-------------------^\n",
      "message": "Use of the \"var\" keyword is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 8058,
        "file": "minimetoken/contracts/MiniMeToken.sol",
        "start": 8037
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "giveth-common-contracts/contracts/Owned.sol:42:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        OwnershipRequested(msg.sender, newOwnerCandidate);\n        ^-----------------------------------------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 1763,
        "file": "giveth-common-contracts/contracts/Owned.sol",
        "start": 1714
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "giveth-common-contracts/contracts/Owned.sol:54:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        OwnershipTransferred(oldOwner, owner);\n        ^-----------------------------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 2117,
        "file": "giveth-common-contracts/contracts/Owned.sol",
        "start": 2080
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "giveth-common-contracts/contracts/Owned.sol:68:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        OwnershipTransferred(oldOwner, owner);\n        ^-----------------------------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 2661,
        "file": "giveth-common-contracts/contracts/Owned.sol",
        "start": 2624
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "giveth-common-contracts/contracts/Owned.sol:80:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        OwnershipRemoved();     \n        ^----------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 3232,
        "file": "giveth-common-contracts/contracts/Owned.sol",
        "start": 3214
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "giveth-common-contracts/contracts/Escapable.sol:62:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        EscapeHatchBlackistedToken(_token);\n        ^--------------------------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 2950,
        "file": "giveth-common-contracts/contracts/Escapable.sol",
        "start": 2916
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "giveth-common-contracts/contracts/Escapable.sol:83:23: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member.\n            balance = this.balance;\n                      ^----------^\n",
      "message": "Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member.",
      "severity": "warning",
      "sourceLocation": {
        "end": 3790,
        "file": "giveth-common-contracts/contracts/Escapable.sol",
        "start": 3778
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "giveth-common-contracts/contracts/Escapable.sol:85:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            EscapeHatchCalled(_token, balance);\n            ^--------------------------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 3892,
        "file": "giveth-common-contracts/contracts/Escapable.sol",
        "start": 3858
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "giveth-common-contracts/contracts/Escapable.sol:92:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        EscapeHatchCalled(_token, balance);\n        ^--------------------------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 4144,
        "file": "giveth-common-contracts/contracts/Escapable.sol",
        "start": 4110
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "minimetoken/contracts/MiniMeToken.sol:200:12: Warning: Invoking events without \"emit\" prefix is deprecated.\n           Transfer(_from, _to, _amount);\n           ^---------------------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 8374,
        "file": "minimetoken/contracts/MiniMeToken.sol",
        "start": 8345
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "minimetoken/contracts/MiniMeToken.sol:232:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Approval(msg.sender, _spender, _amount);\n        ^-------------------------------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 9875,
        "file": "minimetoken/contracts/MiniMeToken.sol",
        "start": 9836
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "minimetoken/contracts/MiniMeToken.sol:363:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        NewCloneToken(address(cloneToken), _snapshotBlock);\n        ^------------------------------------------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 15325,
        "file": "minimetoken/contracts/MiniMeToken.sol",
        "start": 15275
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "minimetoken/contracts/MiniMeToken.sol:383:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Transfer(0, _owner, _amount);\n        ^--------------------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 16247,
        "file": "minimetoken/contracts/MiniMeToken.sol",
        "start": 16219
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "minimetoken/contracts/MiniMeToken.sol:400:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Transfer(_owner, 0, _amount);\n        ^--------------------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 16977,
        "file": "minimetoken/contracts/MiniMeToken.sol",
        "start": 16949
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "minimetoken/contracts/MiniMeToken.sol:498:33: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member.\n            controller.transfer(this.balance);\n                                ^----------^\n",
      "message": "Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member.",
      "severity": "warning",
      "sourceLocation": {
        "end": 20697,
        "file": "minimetoken/contracts/MiniMeToken.sol",
        "start": 20685
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "minimetoken/contracts/MiniMeToken.sol:505:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        ClaimedTokens(_token, controller, balance);\n        ^----------------------------------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 20921,
        "file": "minimetoken/contracts/MiniMeToken.sol",
        "start": 20879
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/ForeignGivethBridge.sol:95:27: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function proxyPayment(address _owner) public payable returns(bool) {\n                          ^------------^\n",
      "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
      "severity": "warning",
      "sourceLocation": {
        "end": 3688,
        "file": "./contracts/ForeignGivethBridge.sol",
        "start": 3674
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/ForeignGivethBridge.sol:105:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function onTransfer(address _from, address _to, uint _amount) public returns(bool) {\n                        ^-----------^\n",
      "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
      "severity": "warning",
      "sourceLocation": {
        "end": 4124,
        "file": "./contracts/ForeignGivethBridge.sol",
        "start": 4111
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/ForeignGivethBridge.sol:105:40: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function onTransfer(address _from, address _to, uint _amount) public returns(bool) {\n                                       ^---------^\n",
      "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
      "severity": "warning",
      "sourceLocation": {
        "end": 4137,
        "file": "./contracts/ForeignGivethBridge.sol",
        "start": 4126
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/ForeignGivethBridge.sol:105:53: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function onTransfer(address _from, address _to, uint _amount) public returns(bool) {\n                                                    ^----------^\n",
      "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
      "severity": "warning",
      "sourceLocation": {
        "end": 4151,
        "file": "./contracts/ForeignGivethBridge.sol",
        "start": 4139
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/ForeignGivethBridge.sol:115:24: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function onApprove(address _owner, address _spender, uint _amount) public returns(bool) {\n                       ^------------^\n",
      "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
      "severity": "warning",
      "sourceLocation": {
        "end": 4599,
        "file": "./contracts/ForeignGivethBridge.sol",
        "start": 4585
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/ForeignGivethBridge.sol:115:40: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function onApprove(address _owner, address _spender, uint _amount) public returns(bool) {\n                                       ^--------------^\n",
      "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
      "severity": "warning",
      "sourceLocation": {
        "end": 4617,
        "file": "./contracts/ForeignGivethBridge.sol",
        "start": 4601
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/ForeignGivethBridge.sol:115:58: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function onApprove(address _owner, address _spender, uint _amount) public returns(bool) {\n                                                         ^----------^\n",
      "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
      "severity": "warning",
      "sourceLocation": {
        "end": 4631,
        "file": "./contracts/ForeignGivethBridge.sol",
        "start": 4619
      },
      "type": "Warning"
    }
  ],
  "sources": {
    "./contracts/ForeignGivethBridge.sol": {
      "id": 0
    },
    "./contracts/GivethBridge.sol": {
      "id": 1
    },
    "./contracts/GivethBridgeMock.sol": {
      "id": 2
    },
    "./contracts/lib/Pausable.sol": {
      "id": 3
    },
    "./contracts/lib/Vault.sol": {
      "id": 4
    },
    "giveth-common-contracts/contracts/ERC20.sol": {
      "id": 5
    },
    "giveth-common-contracts/contracts/Escapable.sol": {
      "id": 6
    },
    "giveth-common-contracts/contracts/Owned.sol": {
      "id": 7
    },
    "lib/Pausable.sol": {
      "id": 8
    },
    "minimetoken/contracts/Controlled.sol": {
      "id": 9
    },
    "minimetoken/contracts/MiniMeToken.sol": {
      "id": 10
    },
    "minimetoken/contracts/TokenController.sol": {
      "id": 11
    }
  }
}