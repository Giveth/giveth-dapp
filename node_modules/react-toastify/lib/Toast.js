"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _ProgressBar = require("./ProgressBar");

var _ProgressBar2 = _interopRequireDefault(_ProgressBar);

var _constant = require("./constant");

var _objectValues = require("./util/objectValues");

var _objectValues2 = _interopRequireDefault(_objectValues);

var _propValidator = require("./util/propValidator");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Toast = function (_Component) {
  _inherits(Toast, _Component);

  function Toast() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Toast);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Toast.__proto__ || Object.getPrototypeOf(Toast)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      isRunning: true
    }, _this.handleVisibility = function () {
      return _this.setState({ isRunning: !document.hidden });
    }, _this.pauseToast = function () {
      _this.setState({ isRunning: false });
    }, _this.playToast = function () {
      _this.setState({ isRunning: true });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Toast, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.props.onOpen !== null && this.props.onOpen(this.getChildrenProps());
      document.addEventListener("visibilitychange", this.handleVisibility);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.props.onClose !== null && this.props.onClose(this.getChildrenProps());
      document.removeEventListener("visibilitychange", this.handleVisibility);
    }
  }, {
    key: "getChildrenProps",
    value: function getChildrenProps() {
      return this.props.children.props;
    }
  }, {
    key: "getToastProps",
    value: function getToastProps() {
      var toastProps = {
        className: "toastify-content toastify-content--" + this.props.type + " " + this.props.className
      };

      if (this.props.autoClose !== false && this.props.pauseOnHover === true) {
        toastProps.onMouseEnter = this.pauseToast;
        toastProps.onMouseLeave = this.playToast;
      }

      this.props.closeOnClick && (toastProps.onClick = this.props.closeToast);

      return toastProps;
    }
  }, {
    key: "render",
    value: function render() {
      var _props = this.props,
          closeButton = _props.closeButton,
          children = _props.children,
          autoClose = _props.autoClose,
          type = _props.type,
          hideProgressBar = _props.hideProgressBar,
          closeToast = _props.closeToast,
          transition = _props.transition,
          position = _props.position,
          onExited = _props.onExited;


      var Transition = transition;

      return _react2.default.createElement(
        Transition,
        { "in": this.props.in, appear: true, unmountOnExit: true, onExited: onExited, position: position },
        _react2.default.createElement(
          "div",
          this.getToastProps(),
          _react2.default.createElement(
            "div",
            { className: "toastify__body " + this.props.bodyClassName },
            children
          ),
          closeButton !== false && closeButton,
          autoClose !== false && _react2.default.createElement(_ProgressBar2.default, {
            delay: autoClose,
            isRunning: this.state.isRunning,
            closeToast: closeToast,
            hide: hideProgressBar,
            type: type,
            className: this.props.progressClassName
          })
        )
      );
    }
  }]);

  return Toast;
}(_react.Component);

Toast.propTypes = {
  closeButton: _propValidator.falseOrElement.isRequired,
  autoClose: _propValidator.falseOrNumber.isRequired,
  children: _propTypes2.default.node.isRequired,
  closeToast: _propTypes2.default.func.isRequired,
  position: _propTypes2.default.oneOf((0, _objectValues2.default)(_constant.POSITION)).isRequired,
  pauseOnHover: _propTypes2.default.bool.isRequired,
  closeOnClick: _propTypes2.default.bool.isRequired,
  transition: _propTypes2.default.func.isRequired,
  in: _propTypes2.default.bool,
  onExited: _propTypes2.default.func,
  hideProgressBar: _propTypes2.default.bool,
  onOpen: _propTypes2.default.func,
  onClose: _propTypes2.default.func,
  type: _propTypes2.default.oneOf((0, _objectValues2.default)(_constant.TYPE)),
  className: _propTypes2.default.string,
  bodyClassName: _propTypes2.default.string,
  progressClassName: _propTypes2.default.string
};
Toast.defaultProps = {
  type: _constant.TYPE.DEFAULT,
  in: true,
  hideProgressBar: false,
  onOpen: null,
  onClose: null,
  className: "",
  bodyClassName: "",
  progressClassName: ""
};
exports.default = Toast;