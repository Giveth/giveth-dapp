'use strict';

require('rxjs/add/operator/finally');

require('rxjs/add/operator/shareReplay');

var _utils = require('./utils');

module.exports = function (settings) {
  return function (params) {
    var cachedObservable = (0, _utils.getCachedObservable)(this._cache, 'find', params);

    // return cached Observable if it exists
    if (cachedObservable) {
      return cachedObservable;
    }

    var options = (0, _utils.getOptions)(settings, this._rx, params.rx);
    var source = (0, _utils.getSource)(this.find.bind(this), arguments);
    var stream = options.listStrategy.call(this, source, options, arguments);

    var letStream = options.let ? stream.let(options.let) : stream;

    // set cache and return cached observable
    return (0, _utils.cacheObservable)(this._cache, 'find', params, letStream);
  };
};