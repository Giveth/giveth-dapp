{
  "v": "5.4.4",
  "fr": 23.9759979248047,
  "ip": 0,
  "op": 21.9999980958335,
  "w": 1080,
  "h": 1080,
  "nm": "Attention_jumpy",
  "ddd": 0,
  "assets": [],
  "fonts": {
    "list": [
      {
        "fName": "Avenir-Heavy",
        "fFamily": "Avenir",
        "fStyle": "Heavy",
        "ascent": 75.5996704101562
      }
    ]
  },
  "layers": [
    {
      "ddd": 0,
      "ind": 1,
      "ty": 1,
      "nm": "Face",
      "parent": 2,
      "hd": true,
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": { "a": 0, "k": 0, "ix": 10 },
        "p": {
          "a": 1,
          "k": [
            {
              "i": { "x": 0.24, "y": 1 },
              "o": { "x": 0.167, "y": 0 },
              "t": 0,
              "s": [0, 137, 0],
              "e": [200, 0, 0],
              "to": [33.333, -22.833, 0],
              "ti": [0, 0, 0]
            },
            {
              "i": { "x": 0.917, "y": 1 },
              "o": { "x": 0.802, "y": 0 },
              "t": 7,
              "s": [200, 0, 0],
              "e": [0, 137, 0],
              "to": [0, 0, 0],
              "ti": [66.667, 0, 0]
            },
            {
              "i": { "x": 0.199, "y": 1 },
              "o": { "x": 0.167, "y": 0 },
              "t": 12,
              "s": [0, 137, 0],
              "e": [-200, 0, 0],
              "to": [-66.667, 0, 0],
              "ti": [0, 0, 0]
            },
            {
              "i": { "x": 0.917, "y": 1 },
              "o": { "x": 0.808, "y": 0 },
              "t": 18,
              "s": [-200, 0, 0],
              "e": [0, 137, 0],
              "to": [0, 0, 0],
              "ti": [-33.333, -22.833, 0]
            },
            { "t": 21.9999980958335 }
          ],
          "ix": 2
        },
        "a": { "a": 0, "k": [37.5, 37.5, 0], "ix": 1 },
        "s": { "a": 0, "k": [100, 100], "ix": 6 }
      },
      "ao": 0,
      "ef": [
        {
          "ty": 5,
          "nm": "joystickLimit",
          "np": 3,
          "mn": "ADBE Slider Control",
          "ix": 1,
          "en": 1,
          "ef": [
            {
              "ty": 0,
              "nm": "Slider",
              "mn": "ADBE Slider Control-0001",
              "ix": 1,
              "v": { "a": 0, "k": 200, "ix": 1 }
            }
          ]
        }
      ],
      "sw": 75,
      "sh": 75,
      "sc": "#ffffff",
      "ip": 0,
      "op": 59.9999948068185,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 2,
      "ty": 4,
      "nm": "Face Origin",
      "hd": true,
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": { "a": 0, "k": 0, "ix": 10 },
        "p": { "a": 0, "k": [180, 180, 0], "ix": 2 },
        "a": { "a": 0, "k": [0, 0, 0], "ix": 1 },
        "s": { "a": 0, "k": [50, 50, 100], "ix": 6 }
      },
      "ao": 0,
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "ty": "rc",
              "d": 1,
              "s": {
                "a": 0,
                "k": [251.383, 200],
                "ix": 2,
                "x": "var $bm_rt;\nvar temp;\ntemp = $bm_mul(thisComp.layer('Face')('ADBE Effect Parade')('joystickLimit')('ADBE Slider Control-0001'), 2);\n$bm_rt = [\n    temp,\n    temp\n];"
              },
              "p": { "a": 0, "k": [0, 0], "ix": 3 },
              "r": { "a": 0, "k": 28, "ix": 4 },
              "nm": "Rectangle Path 1",
              "mn": "ADBE Vector Shape - Rect",
              "hd": false
            },
            {
              "ty": "fl",
              "c": {
                "a": 0,
                "k": [0.721706495098, 0.586110193589, 0.586110193589, 1],
                "ix": 4
              },
              "o": { "a": 0, "k": 100, "ix": 5 },
              "r": 1,
              "bm": 0,
              "nm": "Fill 1",
              "mn": "ADBE Vector Graphic - Fill",
              "hd": false
            },
            {
              "ty": "st",
              "c": {
                "a": 0,
                "k": [0.294117629528, 0.310726553202, 1, 1],
                "ix": 3
              },
              "o": { "a": 0, "k": 100, "ix": 4 },
              "w": { "a": 0, "k": 7, "ix": 5 },
              "lc": 1,
              "lj": 1,
              "ml": 4,
              "bm": 0,
              "d": [
                { "n": "d", "nm": "dash", "v": { "a": 0, "k": 14, "ix": 1 } },
                { "n": "o", "nm": "offset", "v": { "a": 0, "k": 0, "ix": 7 } }
              ],
              "nm": "Stroke 1",
              "mn": "ADBE Vector Graphic - Stroke",
              "hd": false
            },
            {
              "ty": "tr",
              "p": { "a": 0, "k": [0, 0], "ix": 2 },
              "a": { "a": 0, "k": [0, 0], "ix": 1 },
              "s": { "a": 0, "k": [100, 100], "ix": 3 },
              "r": { "a": 0, "k": 0, "ix": 6 },
              "o": { "a": 0, "k": 100, "ix": 7 },
              "sk": { "a": 0, "k": 0, "ix": 4 },
              "sa": { "a": 0, "k": 0, "ix": 5 },
              "nm": "Transform"
            }
          ],
          "nm": "Group 1",
          "np": 3,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 59.9999948068185,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 3,
      "ty": 3,
      "nm": "body_position",
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 0, "ix": 11 },
        "r": { "a": 0, "k": 0, "ix": 10 },
        "p": {
          "a": 1,
          "k": [
            {
              "i": { "x": 0, "y": 1 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 0,
              "s": [481, 540, 0],
              "e": [541, 370, 0],
              "to": [10, -28.333, 0],
              "ti": [0, -1.667, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 1, "y": 0 },
              "t": 6,
              "s": [541, 370, 0],
              "e": [481, 530, 0],
              "to": [0, 1.098, 0],
              "ti": [10, -28.333, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 9,
              "s": [481, 530, 0],
              "e": [481, 540, 0],
              "to": [-10, 28.333, 0],
              "ti": [8.333, 26.667, 0]
            },
            {
              "i": { "x": 0, "y": 1 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 11,
              "s": [481, 540, 0],
              "e": [431, 370, 0],
              "to": [-8.333, -26.667, 0],
              "ti": [0, 1.667, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 1, "y": 0 },
              "t": 17,
              "s": [431, 370, 0],
              "e": [481, 530, 0],
              "to": [0, -1.667, 0],
              "ti": [-8.333, -28.333, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 20,
              "s": [481, 530, 0],
              "e": [481, 540, 0],
              "to": [8.333, 28.333, 0],
              "ti": [0, -1.667, 0]
            },
            { "t": 21.9999980958335 }
          ],
          "ix": 2
        },
        "a": { "a": 0, "k": [0, 0, 0], "ix": 1 },
        "s": { "a": 0, "k": [100, 100, 100], "ix": 6 }
      },
      "ao": 0,
      "ip": 0,
      "op": 59.9999948068185,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 4,
      "ty": 5,
      "nm": "!",
      "parent": 5,
      "sr": 1,
      "ks": {
        "o": {
          "a": 1,
          "k": [
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 1,
              "s": [100],
              "e": [100]
            },
            { "t": 1.99999982689395 }
          ],
          "ix": 11
        },
        "r": {
          "a": 1,
          "k": [
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 1,
              "s": [0],
              "e": [0]
            },
            { "t": 1.99999982689395 }
          ],
          "ix": 10
        },
        "p": {
          "a": 0,
          "k": [-147.253, 88.039, 0],
          "ix": 2,
          "x": "var $bm_rt;\nfunction joystick(inputResult) {\n    var slideR, slideL, slideU, slideD;\n    var easeOverride_right = null;\n    var easeOverride_left = null;\n    var easeOverride_up = null;\n    var easeOverride_down = null;\n    var contrl = thisComp.layer('Face');\n    var myLimit = contrl('ADBE Effect Parade')('joystickLimit')('ADBE Slider Control-0001');\n    var contrlCurVal = contrl('ADBE Transform Group')('ADBE Position');\n    var resultVal;\n    var key1 = [\n            -147.2529296875,\n            88.0390625,\n            0\n        ];\n    var key2 = [\n            -128.047775268555,\n            88.0390625,\n            0\n        ];\n    var key3 = [\n            -167.661087036133,\n            88.0390625,\n            0\n        ];\n    var key4 = [\n            -147.2529296875,\n            70.2431411743164,\n            0\n        ];\n    var key5 = [\n            -147.2529296875,\n            104.161514282227,\n            0\n        ];\n    key1 = unArray(key1);\n    key2 = unArray(key2);\n    key3 = unArray(key3);\n    key4 = unArray(key4);\n    key5 = unArray(key5);\n    try {\n        if (!thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB').active) {\n            throw 'inactive';\n        }\n        slideR = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0001');\n        slideL = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0002');\n        slideU = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0003');\n        slideD = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0004');\n    } catch (err) {\n        slideR = 0;\n        slideL = 0;\n        slideU = 0;\n        slideD = 0;\n    }\n    if (easeOverride_right !== null && !isNaN(easeOverride_right)) {\n        slideR = moClamp(easeOverride_right, -100, 100);\n    }\n    if (easeOverride_left !== null && !isNaN(easeOverride_left)) {\n        slideL = moClamp(easeOverride_left, -100, 100);\n    }\n    if (easeOverride_up !== null && !isNaN(easeOverride_up)) {\n        slideU = moClamp(easeOverride_up, -100, 100);\n    }\n    if (easeOverride_down !== null && !isNaN(easeOverride_down)) {\n        slideD = moClamp(easeOverride_down, -100, 100);\n    }\n    var easeResultX, easeResultY;\n    if (contrlCurVal[0] >= 0) {\n        resultVal = linear(contrlCurVal[0], 0, myLimit, key1, key2);\n        if (slideR !== 0) {\n            easeResultX = easeSwitch(contrlCurVal[0], 0, myLimit, key1, key2, slideR);\n            resultVal = linear(Math.abs(slideR), 0, 100, resultVal, easeResultX);\n        }\n    } else {\n        resultVal = linear($bm_neg(contrlCurVal[0]), 0, myLimit, key1, key3);\n        if (slideL !== 0) {\n            easeResultX = easeSwitch($bm_neg(contrlCurVal[0]), 0, myLimit, key1, key3, slideL);\n            resultVal = linear(Math.abs(slideL), 0, 100, resultVal, easeResultX);\n        }\n    }\n    var resultAdd = 0;\n    if (contrlCurVal[1] <= 0) {\n        resultAdd = $bm_sub(linear($bm_neg(contrlCurVal[1]), 0, myLimit, key1, key4), key1);\n        if (slideU !== 0) {\n            easeResultY = $bm_sub(easeSwitch($bm_neg(contrlCurVal[1]), 0, myLimit, key1, key4, slideU), key1);\n            resultAdd = linear(Math.abs(slideU), 0, 100, resultAdd, easeResultY);\n        }\n    } else {\n        resultAdd = $bm_sub(linear(contrlCurVal[1], 0, myLimit, key1, key5), key1);\n        if (slideD !== 0) {\n            easeResultY = $bm_sub(easeSwitch(contrlCurVal[1], 0, myLimit, key1, key5, slideD), key1);\n            resultAdd = linear(Math.abs(slideD), 0, 100, resultAdd, easeResultY);\n        }\n    }\n    return $bm_sum($bm_sum(resultVal, resultAdd), $bm_sub(inputResult, key1));\n}\nfunction cosEase(val, min1, max1, input1, input2) {\n    var myCos = [];\n    if ($bm_isInstanceOfArray(input1)) {\n        for (var x = 0; x < input1.length; x++) {\n            myCos.push(getMeCos(val, min1, max1, input1[x], input2[x]));\n        }\n    } else {\n        myCos = getMeCos(val, min1, max1, input1, input2);\n    }\n    return myCos;\n    function getMeCos(val, min1, max1, input1, input2) {\n        var mapVal = moClamp($bm_div(val, $bm_sub(max1, min1)), 0, 1);\n        var c = $bm_sub(input2, input1);\n        var myCos2 = $bm_sum($bm_sum($bm_mul($bm_neg(c), Math.cos($bm_mul(mapVal, $bm_div(Math.PI, 2)))), c), input1);\n        return myCos2;\n    }\n}\nfunction sinEase(val, min1, max1, input1, input2) {\n    var mySin = [];\n    if ($bm_isInstanceOfArray(input1)) {\n        for (var x = 0; x < input1.length; x++) {\n            mySin.push(getMeSin(val, min1, max1, input1[x], input2[x]));\n        }\n    } else {\n        mySin = getMeSin(val, min1, max1, input1, input2);\n    }\n    return mySin;\n    function getMeSin(val, min1, max1, input1, input2) {\n        var mapVal = moClamp($bm_div(val, $bm_sub(max1, min1)), 0, 1);\n        var c = $bm_sub(input2, input1);\n        var mySin2 = $bm_sum($bm_mul(c, Math.sin($bm_mul(mapVal, $bm_div(Math.PI, 2)))), input1);\n        return mySin2;\n    }\n}\nfunction easeSwitch(val, min1, max1, input1, input2, morph) {\n    if (morph < 0) {\n        return cosEase(val, min1, max1, input1, input2);\n    } else {\n        return sinEase(val, min1, max1, input1, input2);\n    }\n}\nfunction unArray(inKey) {\n    if (inKey instanceof Array && inKey.length === 1) {\n        return inKey[0];\n    } else {\n        return inKey;\n    }\n}\nfunction moClamp(a, b, c) {\n    if (!(a instanceof Array)) {\n        return Math.max(b, Math.min(c, a));\n    } else {\n        var aryHold = [];\n        for (var x = 0; x < a.length; x++) {\n            aryHold.push(Math.max(b, Math.min(c, a[x])));\n        }\n        return aryHold;\n    }\n}\n$bm_rt = joystick(value);"
        },
        "a": {
          "a": 1,
          "k": [
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 1,
              "s": [51, 3, 0],
              "e": [51, 3, 0],
              "to": [0, 0, 0],
              "ti": [0, 0, 0]
            },
            { "t": 1.99999982689395 }
          ],
          "ix": 1
        },
        "s": {
          "a": 1,
          "k": [
            {
              "i": { "x": [0.833, 0.833, 0.833], "y": [0.833, 0.833, 0.833] },
              "o": { "x": [0.167, 0.167, 0.167], "y": [0.167, 0.167, 0.167] },
              "t": 0,
              "s": [114, 75, 100],
              "e": [100, 100, 100]
            },
            {
              "i": { "x": [0.833, 0.833, 0.833], "y": [0.833, 0.833, 0.833] },
              "o": { "x": [0.167, 0.167, 0.167], "y": [0.167, 0.167, 0.167] },
              "t": 3,
              "s": [100, 100, 100],
              "e": [100, 100, 100]
            },
            {
              "i": { "x": [0.833, 0.833, 0.833], "y": [0.833, 0.833, 0.833] },
              "o": { "x": [0.167, 0.167, 0.167], "y": [0.167, 0.167, 0.167] },
              "t": 8,
              "s": [100, 100, 100],
              "e": [114, 75, 100]
            },
            {
              "i": { "x": [0.833, 0.833, 0.833], "y": [0.833, 0.833, 0.833] },
              "o": { "x": [0.167, 0.167, 0.167], "y": [0.167, 0.167, 0.167] },
              "t": 11,
              "s": [114, 75, 100],
              "e": [100, 100, 100]
            },
            {
              "i": { "x": [0.833, 0.833, 0.833], "y": [0.833, 0.833, 0.833] },
              "o": { "x": [0.167, 0.167, 0.167], "y": [0.167, 0.167, 0.167] },
              "t": 14,
              "s": [100, 100, 100],
              "e": [100, 100, 100]
            },
            {
              "i": { "x": [0.833, 0.833, 0.833], "y": [0.833, 0.833, 0.833] },
              "o": { "x": [0.167, 0.167, 0.167], "y": [0.167, 0.167, 0.167] },
              "t": 19,
              "s": [100, 100, 100],
              "e": [114, 75, 100]
            },
            { "t": 21.9999980958335 }
          ],
          "ix": 6,
          "x": "var $bm_rt;\nfunction joystick(inputResult) {\n    var slideR, slideL, slideU, slideD;\n    var easeOverride_right = null;\n    var easeOverride_left = null;\n    var easeOverride_up = null;\n    var easeOverride_down = null;\n    var contrl = thisComp.layer('Face');\n    var myLimit = contrl('ADBE Effect Parade')('joystickLimit')('ADBE Slider Control-0001');\n    var contrlCurVal = contrl('ADBE Transform Group')('ADBE Position');\n    var resultVal;\n    var key1 = [\n            100,\n            100,\n            100\n        ];\n    var key2 = [\n            98,\n            100,\n            100\n        ];\n    var key3 = [\n            98,\n            100,\n            100\n        ];\n    var key4 = [\n            100,\n            97,\n            100\n        ];\n    var key5 = [\n            100,\n            97,\n            100\n        ];\n    key1 = unArray(key1);\n    key2 = unArray(key2);\n    key3 = unArray(key3);\n    key4 = unArray(key4);\n    key5 = unArray(key5);\n    try {\n        if (!thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB').active) {\n            throw 'inactive';\n        }\n        slideR = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0001');\n        slideL = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0002');\n        slideU = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0003');\n        slideD = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0004');\n    } catch (err) {\n        slideR = 0;\n        slideL = 0;\n        slideU = 0;\n        slideD = 0;\n    }\n    if (easeOverride_right !== null && !isNaN(easeOverride_right)) {\n        slideR = moClamp(easeOverride_right, -100, 100);\n    }\n    if (easeOverride_left !== null && !isNaN(easeOverride_left)) {\n        slideL = moClamp(easeOverride_left, -100, 100);\n    }\n    if (easeOverride_up !== null && !isNaN(easeOverride_up)) {\n        slideU = moClamp(easeOverride_up, -100, 100);\n    }\n    if (easeOverride_down !== null && !isNaN(easeOverride_down)) {\n        slideD = moClamp(easeOverride_down, -100, 100);\n    }\n    var easeResultX, easeResultY;\n    if (contrlCurVal[0] >= 0) {\n        resultVal = linear(contrlCurVal[0], 0, myLimit, key1, key2);\n        if (slideR !== 0) {\n            easeResultX = easeSwitch(contrlCurVal[0], 0, myLimit, key1, key2, slideR);\n            resultVal = linear(Math.abs(slideR), 0, 100, resultVal, easeResultX);\n        }\n    } else {\n        resultVal = linear($bm_neg(contrlCurVal[0]), 0, myLimit, key1, key3);\n        if (slideL !== 0) {\n            easeResultX = easeSwitch($bm_neg(contrlCurVal[0]), 0, myLimit, key1, key3, slideL);\n            resultVal = linear(Math.abs(slideL), 0, 100, resultVal, easeResultX);\n        }\n    }\n    var resultAdd = 0;\n    if (contrlCurVal[1] <= 0) {\n        resultAdd = $bm_sub(linear($bm_neg(contrlCurVal[1]), 0, myLimit, key1, key4), key1);\n        if (slideU !== 0) {\n            easeResultY = $bm_sub(easeSwitch($bm_neg(contrlCurVal[1]), 0, myLimit, key1, key4, slideU), key1);\n            resultAdd = linear(Math.abs(slideU), 0, 100, resultAdd, easeResultY);\n        }\n    } else {\n        resultAdd = $bm_sub(linear(contrlCurVal[1], 0, myLimit, key1, key5), key1);\n        if (slideD !== 0) {\n            easeResultY = $bm_sub(easeSwitch(contrlCurVal[1], 0, myLimit, key1, key5, slideD), key1);\n            resultAdd = linear(Math.abs(slideD), 0, 100, resultAdd, easeResultY);\n        }\n    }\n    return $bm_sum($bm_sum(resultVal, resultAdd), $bm_sub(inputResult, key1));\n}\nfunction cosEase(val, min1, max1, input1, input2) {\n    var myCos = [];\n    if ($bm_isInstanceOfArray(input1)) {\n        for (var x = 0; x < input1.length; x++) {\n            myCos.push(getMeCos(val, min1, max1, input1[x], input2[x]));\n        }\n    } else {\n        myCos = getMeCos(val, min1, max1, input1, input2);\n    }\n    return myCos;\n    function getMeCos(val, min1, max1, input1, input2) {\n        var mapVal = moClamp($bm_div(val, $bm_sub(max1, min1)), 0, 1);\n        var c = $bm_sub(input2, input1);\n        var myCos2 = $bm_sum($bm_sum($bm_mul($bm_neg(c), Math.cos($bm_mul(mapVal, $bm_div(Math.PI, 2)))), c), input1);\n        return myCos2;\n    }\n}\nfunction sinEase(val, min1, max1, input1, input2) {\n    var mySin = [];\n    if ($bm_isInstanceOfArray(input1)) {\n        for (var x = 0; x < input1.length; x++) {\n            mySin.push(getMeSin(val, min1, max1, input1[x], input2[x]));\n        }\n    } else {\n        mySin = getMeSin(val, min1, max1, input1, input2);\n    }\n    return mySin;\n    function getMeSin(val, min1, max1, input1, input2) {\n        var mapVal = moClamp($bm_div(val, $bm_sub(max1, min1)), 0, 1);\n        var c = $bm_sub(input2, input1);\n        var mySin2 = $bm_sum($bm_mul(c, Math.sin($bm_mul(mapVal, $bm_div(Math.PI, 2)))), input1);\n        return mySin2;\n    }\n}\nfunction easeSwitch(val, min1, max1, input1, input2, morph) {\n    if (morph < 0) {\n        return cosEase(val, min1, max1, input1, input2);\n    } else {\n        return sinEase(val, min1, max1, input1, input2);\n    }\n}\nfunction unArray(inKey) {\n    if (inKey instanceof Array && inKey.length === 1) {\n        return inKey[0];\n    } else {\n        return inKey;\n    }\n}\nfunction moClamp(a, b, c) {\n    if (!(a instanceof Array)) {\n        return Math.max(b, Math.min(c, a));\n    } else {\n        var aryHold = [];\n        for (var x = 0; x < a.length; x++) {\n            aryHold.push(Math.max(b, Math.min(c, a[x])));\n        }\n        return aryHold;\n    }\n}\n$bm_rt = joystick(value);"
        }
      },
      "ao": 0,
      "t": {
        "d": {
          "k": [
            {
              "s": {
                "s": 342.081817626953,
                "f": "Avenir-Heavy",
                "t": "!",
                "j": 0,
                "tr": 0,
                "lh": 410.498181152344,
                "ls": 0,
                "fc": [1, 1, 1]
              },
              "t": 0
            }
          ]
        },
        "p": {},
        "m": {
          "g": 1,
          "a": {
            "a": 1,
            "k": [
              {
                "i": { "x": [0.833, 0.833], "y": [0.833, 0.833] },
                "o": { "x": [0.167, 0.167], "y": [0.167, 0.167] },
                "t": 1,
                "s": [0, 0],
                "e": [0, 0]
              },
              { "t": 1.99999982689395 }
            ],
            "ix": 2
          }
        },
        "a": []
      },
      "ip": 0,
      "op": 59.9999948068185,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 5,
      "ty": 4,
      "nm": "triangle_body",
      "parent": 3,
      "sr": 1,
      "ks": {
        "o": {
          "a": 1,
          "k": [
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 1,
              "s": [100],
              "e": [100]
            },
            { "t": 1.99999982689395 }
          ],
          "ix": 11
        },
        "r": {
          "a": 1,
          "k": [
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 1,
              "s": [0],
              "e": [0]
            },
            { "t": 1.99999982689395 }
          ],
          "ix": 10
        },
        "p": {
          "a": 0,
          "k": [52, 88, 0],
          "ix": 2,
          "x": "var $bm_rt;\nfunction joystick(inputResult) {\n    var slideR, slideL, slideU, slideD;\n    var easeOverride_right = null;\n    var easeOverride_left = null;\n    var easeOverride_up = null;\n    var easeOverride_down = null;\n    var contrl = thisComp.layer('Face');\n    var myLimit = contrl('ADBE Effect Parade')('joystickLimit')('ADBE Slider Control-0001');\n    var contrlCurVal = contrl('ADBE Transform Group')('ADBE Position');\n    var resultVal;\n    var key1 = [\n            52,\n            -2,\n            0\n        ];\n    var key2 = [\n            294,\n            2,\n            0\n        ];\n    var key3 = [\n            -192,\n            4,\n            0\n        ];\n    var key4 = [\n            52,\n            214,\n            0\n        ];\n    var key5 = [\n            52,\n            220,\n            0\n        ];\n    key1 = unArray(key1);\n    key2 = unArray(key2);\n    key3 = unArray(key3);\n    key4 = unArray(key4);\n    key5 = unArray(key5);\n    try {\n        if (!thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB').active) {\n            throw 'inactive';\n        }\n        slideR = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0001');\n        slideL = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0002');\n        slideU = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0003');\n        slideD = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0004');\n    } catch (err) {\n        slideR = 0;\n        slideL = 0;\n        slideU = 0;\n        slideD = 0;\n    }\n    if (easeOverride_right !== null && !isNaN(easeOverride_right)) {\n        slideR = moClamp(easeOverride_right, -100, 100);\n    }\n    if (easeOverride_left !== null && !isNaN(easeOverride_left)) {\n        slideL = moClamp(easeOverride_left, -100, 100);\n    }\n    if (easeOverride_up !== null && !isNaN(easeOverride_up)) {\n        slideU = moClamp(easeOverride_up, -100, 100);\n    }\n    if (easeOverride_down !== null && !isNaN(easeOverride_down)) {\n        slideD = moClamp(easeOverride_down, -100, 100);\n    }\n    var easeResultX, easeResultY;\n    if (contrlCurVal[0] >= 0) {\n        resultVal = linear(contrlCurVal[0], 0, myLimit, key1, key2);\n        if (slideR !== 0) {\n            easeResultX = easeSwitch(contrlCurVal[0], 0, myLimit, key1, key2, slideR);\n            resultVal = linear(Math.abs(slideR), 0, 100, resultVal, easeResultX);\n        }\n    } else {\n        resultVal = linear($bm_neg(contrlCurVal[0]), 0, myLimit, key1, key3);\n        if (slideL !== 0) {\n            easeResultX = easeSwitch($bm_neg(contrlCurVal[0]), 0, myLimit, key1, key3, slideL);\n            resultVal = linear(Math.abs(slideL), 0, 100, resultVal, easeResultX);\n        }\n    }\n    var resultAdd = 0;\n    if (contrlCurVal[1] <= 0) {\n        resultAdd = $bm_sub(linear($bm_neg(contrlCurVal[1]), 0, myLimit, key1, key4), key1);\n        if (slideU !== 0) {\n            easeResultY = $bm_sub(easeSwitch($bm_neg(contrlCurVal[1]), 0, myLimit, key1, key4, slideU), key1);\n            resultAdd = linear(Math.abs(slideU), 0, 100, resultAdd, easeResultY);\n        }\n    } else {\n        resultAdd = $bm_sub(linear(contrlCurVal[1], 0, myLimit, key1, key5), key1);\n        if (slideD !== 0) {\n            easeResultY = $bm_sub(easeSwitch(contrlCurVal[1], 0, myLimit, key1, key5, slideD), key1);\n            resultAdd = linear(Math.abs(slideD), 0, 100, resultAdd, easeResultY);\n        }\n    }\n    return $bm_sum($bm_sum(resultVal, resultAdd), $bm_sub(inputResult, key1));\n}\nfunction cosEase(val, min1, max1, input1, input2) {\n    var myCos = [];\n    if ($bm_isInstanceOfArray(input1)) {\n        for (var x = 0; x < input1.length; x++) {\n            myCos.push(getMeCos(val, min1, max1, input1[x], input2[x]));\n        }\n    } else {\n        myCos = getMeCos(val, min1, max1, input1, input2);\n    }\n    return myCos;\n    function getMeCos(val, min1, max1, input1, input2) {\n        var mapVal = moClamp($bm_div(val, $bm_sub(max1, min1)), 0, 1);\n        var c = $bm_sub(input2, input1);\n        var myCos2 = $bm_sum($bm_sum($bm_mul($bm_neg(c), Math.cos($bm_mul(mapVal, $bm_div(Math.PI, 2)))), c), input1);\n        return myCos2;\n    }\n}\nfunction sinEase(val, min1, max1, input1, input2) {\n    var mySin = [];\n    if ($bm_isInstanceOfArray(input1)) {\n        for (var x = 0; x < input1.length; x++) {\n            mySin.push(getMeSin(val, min1, max1, input1[x], input2[x]));\n        }\n    } else {\n        mySin = getMeSin(val, min1, max1, input1, input2);\n    }\n    return mySin;\n    function getMeSin(val, min1, max1, input1, input2) {\n        var mapVal = moClamp($bm_div(val, $bm_sub(max1, min1)), 0, 1);\n        var c = $bm_sub(input2, input1);\n        var mySin2 = $bm_sum($bm_mul(c, Math.sin($bm_mul(mapVal, $bm_div(Math.PI, 2)))), input1);\n        return mySin2;\n    }\n}\nfunction easeSwitch(val, min1, max1, input1, input2, morph) {\n    if (morph < 0) {\n        return cosEase(val, min1, max1, input1, input2);\n    } else {\n        return sinEase(val, min1, max1, input1, input2);\n    }\n}\nfunction unArray(inKey) {\n    if (inKey instanceof Array && inKey.length === 1) {\n        return inKey[0];\n    } else {\n        return inKey;\n    }\n}\nfunction moClamp(a, b, c) {\n    if (!(a instanceof Array)) {\n        return Math.max(b, Math.min(c, a));\n    } else {\n        var aryHold = [];\n        for (var x = 0; x < a.length; x++) {\n            aryHold.push(Math.max(b, Math.min(c, a[x])));\n        }\n        return aryHold;\n    }\n}\n$bm_rt = joystick(value);"
        },
        "a": {
          "a": 0,
          "k": [-147, 19.65, 0],
          "ix": 1,
          "x": "var $bm_rt;\nfunction joystick(inputResult) {\n    var slideR, slideL, slideU, slideD;\n    var easeOverride_right = null;\n    var easeOverride_left = null;\n    var easeOverride_up = null;\n    var easeOverride_down = null;\n    var contrl = thisComp.layer('Face');\n    var myLimit = contrl('ADBE Effect Parade')('joystickLimit')('ADBE Slider Control-0001');\n    var contrlCurVal = contrl('ADBE Transform Group')('ADBE Position');\n    var resultVal;\n    var key1 = [\n            -147,\n            -72,\n            0\n        ];\n    var key2 = [\n            95,\n            -68,\n            0\n        ];\n    var key3 = [\n            -390.714294433594,\n            -66,\n            0\n        ];\n    var key4 = [\n            -147,\n            154,\n            0\n        ];\n    var key5 = [\n            -147,\n            154,\n            0\n        ];\n    key1 = unArray(key1);\n    key2 = unArray(key2);\n    key3 = unArray(key3);\n    key4 = unArray(key4);\n    key5 = unArray(key5);\n    try {\n        if (!thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB').active) {\n            throw 'inactive';\n        }\n        slideR = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0001');\n        slideL = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0002');\n        slideU = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0003');\n        slideD = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0004');\n    } catch (err) {\n        slideR = 0;\n        slideL = 0;\n        slideU = 0;\n        slideD = 0;\n    }\n    if (easeOverride_right !== null && !isNaN(easeOverride_right)) {\n        slideR = moClamp(easeOverride_right, -100, 100);\n    }\n    if (easeOverride_left !== null && !isNaN(easeOverride_left)) {\n        slideL = moClamp(easeOverride_left, -100, 100);\n    }\n    if (easeOverride_up !== null && !isNaN(easeOverride_up)) {\n        slideU = moClamp(easeOverride_up, -100, 100);\n    }\n    if (easeOverride_down !== null && !isNaN(easeOverride_down)) {\n        slideD = moClamp(easeOverride_down, -100, 100);\n    }\n    var easeResultX, easeResultY;\n    if (contrlCurVal[0] >= 0) {\n        resultVal = linear(contrlCurVal[0], 0, myLimit, key1, key2);\n        if (slideR !== 0) {\n            easeResultX = easeSwitch(contrlCurVal[0], 0, myLimit, key1, key2, slideR);\n            resultVal = linear(Math.abs(slideR), 0, 100, resultVal, easeResultX);\n        }\n    } else {\n        resultVal = linear($bm_neg(contrlCurVal[0]), 0, myLimit, key1, key3);\n        if (slideL !== 0) {\n            easeResultX = easeSwitch($bm_neg(contrlCurVal[0]), 0, myLimit, key1, key3, slideL);\n            resultVal = linear(Math.abs(slideL), 0, 100, resultVal, easeResultX);\n        }\n    }\n    var resultAdd = 0;\n    if (contrlCurVal[1] <= 0) {\n        resultAdd = $bm_sub(linear($bm_neg(contrlCurVal[1]), 0, myLimit, key1, key4), key1);\n        if (slideU !== 0) {\n            easeResultY = $bm_sub(easeSwitch($bm_neg(contrlCurVal[1]), 0, myLimit, key1, key4, slideU), key1);\n            resultAdd = linear(Math.abs(slideU), 0, 100, resultAdd, easeResultY);\n        }\n    } else {\n        resultAdd = $bm_sub(linear(contrlCurVal[1], 0, myLimit, key1, key5), key1);\n        if (slideD !== 0) {\n            easeResultY = $bm_sub(easeSwitch(contrlCurVal[1], 0, myLimit, key1, key5, slideD), key1);\n            resultAdd = linear(Math.abs(slideD), 0, 100, resultAdd, easeResultY);\n        }\n    }\n    return $bm_sum($bm_sum(resultVal, resultAdd), $bm_sub(inputResult, key1));\n}\nfunction cosEase(val, min1, max1, input1, input2) {\n    var myCos = [];\n    if ($bm_isInstanceOfArray(input1)) {\n        for (var x = 0; x < input1.length; x++) {\n            myCos.push(getMeCos(val, min1, max1, input1[x], input2[x]));\n        }\n    } else {\n        myCos = getMeCos(val, min1, max1, input1, input2);\n    }\n    return myCos;\n    function getMeCos(val, min1, max1, input1, input2) {\n        var mapVal = moClamp($bm_div(val, $bm_sub(max1, min1)), 0, 1);\n        var c = $bm_sub(input2, input1);\n        var myCos2 = $bm_sum($bm_sum($bm_mul($bm_neg(c), Math.cos($bm_mul(mapVal, $bm_div(Math.PI, 2)))), c), input1);\n        return myCos2;\n    }\n}\nfunction sinEase(val, min1, max1, input1, input2) {\n    var mySin = [];\n    if ($bm_isInstanceOfArray(input1)) {\n        for (var x = 0; x < input1.length; x++) {\n            mySin.push(getMeSin(val, min1, max1, input1[x], input2[x]));\n        }\n    } else {\n        mySin = getMeSin(val, min1, max1, input1, input2);\n    }\n    return mySin;\n    function getMeSin(val, min1, max1, input1, input2) {\n        var mapVal = moClamp($bm_div(val, $bm_sub(max1, min1)), 0, 1);\n        var c = $bm_sub(input2, input1);\n        var mySin2 = $bm_sum($bm_mul(c, Math.sin($bm_mul(mapVal, $bm_div(Math.PI, 2)))), input1);\n        return mySin2;\n    }\n}\nfunction easeSwitch(val, min1, max1, input1, input2, morph) {\n    if (morph < 0) {\n        return cosEase(val, min1, max1, input1, input2);\n    } else {\n        return sinEase(val, min1, max1, input1, input2);\n    }\n}\nfunction unArray(inKey) {\n    if (inKey instanceof Array && inKey.length === 1) {\n        return inKey[0];\n    } else {\n        return inKey;\n    }\n}\nfunction moClamp(a, b, c) {\n    if (!(a instanceof Array)) {\n        return Math.max(b, Math.min(c, a));\n    } else {\n        var aryHold = [];\n        for (var x = 0; x < a.length; x++) {\n            aryHold.push(Math.max(b, Math.min(c, a[x])));\n        }\n        return aryHold;\n    }\n}\n$bm_rt = joystick(value);"
        },
        "s": {
          "a": 1,
          "k": [
            {
              "i": { "x": [0.833, 0.833, 0.833], "y": [0.833, 0.833, 0.833] },
              "o": { "x": [0.167, 0.167, 0.167], "y": [0.167, 0.167, 0.167] },
              "t": 0,
              "s": [114, 75, 100],
              "e": [100, 100, 100]
            },
            {
              "i": { "x": [0.833, 0.833, 0.833], "y": [0.833, 0.833, 0.833] },
              "o": { "x": [0.167, 0.167, 0.167], "y": [0.167, 0.167, 0.167] },
              "t": 3,
              "s": [100, 100, 100],
              "e": [100, 100, 100]
            },
            {
              "i": { "x": [0.833, 0.833, 0.833], "y": [0.833, 0.833, 0.833] },
              "o": { "x": [0.167, 0.167, 0.167], "y": [0.167, 0.167, 0.167] },
              "t": 8,
              "s": [100, 100, 100],
              "e": [114, 75, 100]
            },
            {
              "i": { "x": [0.833, 0.833, 0.833], "y": [0.833, 0.833, 0.833] },
              "o": { "x": [0.167, 0.167, 0.167], "y": [0.167, 0.167, 0.167] },
              "t": 11,
              "s": [114, 75, 100],
              "e": [100, 100, 100]
            },
            {
              "i": { "x": [0.833, 0.833, 0.833], "y": [0.833, 0.833, 0.833] },
              "o": { "x": [0.167, 0.167, 0.167], "y": [0.167, 0.167, 0.167] },
              "t": 14,
              "s": [100, 100, 100],
              "e": [100, 100, 100]
            },
            {
              "i": { "x": [0.833, 0.833, 0.833], "y": [0.833, 0.833, 0.833] },
              "o": { "x": [0.167, 0.167, 0.167], "y": [0.167, 0.167, 0.167] },
              "t": 19,
              "s": [100, 100, 100],
              "e": [114, 75, 100]
            },
            { "t": 21.9999980958335 }
          ],
          "ix": 6,
          "x": "var $bm_rt;\nfunction joystick(inputResult) {\n    var slideR, slideL, slideU, slideD;\n    var easeOverride_right = null;\n    var easeOverride_left = null;\n    var easeOverride_up = null;\n    var easeOverride_down = null;\n    var contrl = thisComp.layer('Face');\n    var myLimit = contrl('ADBE Effect Parade')('joystickLimit')('ADBE Slider Control-0001');\n    var contrlCurVal = contrl('ADBE Transform Group')('ADBE Position');\n    var resultVal;\n    var key1 = [\n            100,\n            100,\n            100\n        ];\n    var key2 = [\n            98,\n            100,\n            100\n        ];\n    var key3 = [\n            98,\n            100,\n            100\n        ];\n    var key4 = [\n            100,\n            97,\n            100\n        ];\n    var key5 = [\n            100,\n            97,\n            100\n        ];\n    key1 = unArray(key1);\n    key2 = unArray(key2);\n    key3 = unArray(key3);\n    key4 = unArray(key4);\n    key5 = unArray(key5);\n    try {\n        if (!thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB').active) {\n            throw 'inactive';\n        }\n        slideR = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0001');\n        slideL = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0002');\n        slideU = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0003');\n        slideD = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0004');\n    } catch (err) {\n        slideR = 0;\n        slideL = 0;\n        slideU = 0;\n        slideD = 0;\n    }\n    if (easeOverride_right !== null && !isNaN(easeOverride_right)) {\n        slideR = moClamp(easeOverride_right, -100, 100);\n    }\n    if (easeOverride_left !== null && !isNaN(easeOverride_left)) {\n        slideL = moClamp(easeOverride_left, -100, 100);\n    }\n    if (easeOverride_up !== null && !isNaN(easeOverride_up)) {\n        slideU = moClamp(easeOverride_up, -100, 100);\n    }\n    if (easeOverride_down !== null && !isNaN(easeOverride_down)) {\n        slideD = moClamp(easeOverride_down, -100, 100);\n    }\n    var easeResultX, easeResultY;\n    if (contrlCurVal[0] >= 0) {\n        resultVal = linear(contrlCurVal[0], 0, myLimit, key1, key2);\n        if (slideR !== 0) {\n            easeResultX = easeSwitch(contrlCurVal[0], 0, myLimit, key1, key2, slideR);\n            resultVal = linear(Math.abs(slideR), 0, 100, resultVal, easeResultX);\n        }\n    } else {\n        resultVal = linear($bm_neg(contrlCurVal[0]), 0, myLimit, key1, key3);\n        if (slideL !== 0) {\n            easeResultX = easeSwitch($bm_neg(contrlCurVal[0]), 0, myLimit, key1, key3, slideL);\n            resultVal = linear(Math.abs(slideL), 0, 100, resultVal, easeResultX);\n        }\n    }\n    var resultAdd = 0;\n    if (contrlCurVal[1] <= 0) {\n        resultAdd = $bm_sub(linear($bm_neg(contrlCurVal[1]), 0, myLimit, key1, key4), key1);\n        if (slideU !== 0) {\n            easeResultY = $bm_sub(easeSwitch($bm_neg(contrlCurVal[1]), 0, myLimit, key1, key4, slideU), key1);\n            resultAdd = linear(Math.abs(slideU), 0, 100, resultAdd, easeResultY);\n        }\n    } else {\n        resultAdd = $bm_sub(linear(contrlCurVal[1], 0, myLimit, key1, key5), key1);\n        if (slideD !== 0) {\n            easeResultY = $bm_sub(easeSwitch(contrlCurVal[1], 0, myLimit, key1, key5, slideD), key1);\n            resultAdd = linear(Math.abs(slideD), 0, 100, resultAdd, easeResultY);\n        }\n    }\n    return $bm_sum($bm_sum(resultVal, resultAdd), $bm_sub(inputResult, key1));\n}\nfunction cosEase(val, min1, max1, input1, input2) {\n    var myCos = [];\n    if ($bm_isInstanceOfArray(input1)) {\n        for (var x = 0; x < input1.length; x++) {\n            myCos.push(getMeCos(val, min1, max1, input1[x], input2[x]));\n        }\n    } else {\n        myCos = getMeCos(val, min1, max1, input1, input2);\n    }\n    return myCos;\n    function getMeCos(val, min1, max1, input1, input2) {\n        var mapVal = moClamp($bm_div(val, $bm_sub(max1, min1)), 0, 1);\n        var c = $bm_sub(input2, input1);\n        var myCos2 = $bm_sum($bm_sum($bm_mul($bm_neg(c), Math.cos($bm_mul(mapVal, $bm_div(Math.PI, 2)))), c), input1);\n        return myCos2;\n    }\n}\nfunction sinEase(val, min1, max1, input1, input2) {\n    var mySin = [];\n    if ($bm_isInstanceOfArray(input1)) {\n        for (var x = 0; x < input1.length; x++) {\n            mySin.push(getMeSin(val, min1, max1, input1[x], input2[x]));\n        }\n    } else {\n        mySin = getMeSin(val, min1, max1, input1, input2);\n    }\n    return mySin;\n    function getMeSin(val, min1, max1, input1, input2) {\n        var mapVal = moClamp($bm_div(val, $bm_sub(max1, min1)), 0, 1);\n        var c = $bm_sub(input2, input1);\n        var mySin2 = $bm_sum($bm_mul(c, Math.sin($bm_mul(mapVal, $bm_div(Math.PI, 2)))), input1);\n        return mySin2;\n    }\n}\nfunction easeSwitch(val, min1, max1, input1, input2, morph) {\n    if (morph < 0) {\n        return cosEase(val, min1, max1, input1, input2);\n    } else {\n        return sinEase(val, min1, max1, input1, input2);\n    }\n}\nfunction unArray(inKey) {\n    if (inKey instanceof Array && inKey.length === 1) {\n        return inKey[0];\n    } else {\n        return inKey;\n    }\n}\nfunction moClamp(a, b, c) {\n    if (!(a instanceof Array)) {\n        return Math.max(b, Math.min(c, a));\n    } else {\n        var aryHold = [];\n        for (var x = 0; x < a.length; x++) {\n            aryHold.push(Math.max(b, Math.min(c, a[x])));\n        }\n        return aryHold;\n    }\n}\n$bm_rt = joystick(value);"
        }
      },
      "ao": 0,
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "ind": 0,
              "ty": "sh",
              "ix": 1,
              "ks": {
                "a": 0,
                "k": {
                  "i": [
                    [8.832, 0],
                    [0, 0],
                    [-4.263, 7.735],
                    [0, 0],
                    [-4.412, -8.005],
                    [0, 0]
                  ],
                  "o": [
                    [0, 0],
                    [-8.832, 0],
                    [0, 0],
                    [4.412, -8.005],
                    [0, 0],
                    [4.263, 7.735]
                  ],
                  "v": [
                    [83.804, 149],
                    [-377.804, 149],
                    [-387.968, 131.793],
                    [-157.164, -286.996],
                    [-136.836, -286.996],
                    [93.968, 131.793]
                  ],
                  "c": true
                },
                "ix": 2
              },
              "nm": "Path 1",
              "mn": "ADBE Vector Shape - Group",
              "hd": false
            },
            {
              "ty": "fl",
              "c": {
                "a": 0,
                "k": [0.247058823529, 0.396078431373, 0.988235294118, 1],
                "ix": 4
              },
              "o": {
                "a": 1,
                "k": [
                  {
                    "i": { "x": [0.833], "y": [0.833] },
                    "o": { "x": [0.167], "y": [0.167] },
                    "t": 1,
                    "s": [100],
                    "e": [100]
                  },
                  { "t": 1.99999982689395 }
                ],
                "ix": 5
              },
              "r": 1,
              "bm": 0,
              "nm": "Fill 1",
              "mn": "ADBE Vector Graphic - Fill",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 1,
                "k": [
                  {
                    "i": { "x": 0.833, "y": 0.833 },
                    "o": { "x": 0.167, "y": 0.167 },
                    "t": 1,
                    "s": [0, 0],
                    "e": [0, 0],
                    "to": [0, 0],
                    "ti": [0, 0]
                  },
                  { "t": 1.99999982689395 }
                ],
                "ix": 2
              },
              "a": {
                "a": 1,
                "k": [
                  {
                    "i": { "x": 0.833, "y": 0.833 },
                    "o": { "x": 0.167, "y": 0.167 },
                    "t": 1,
                    "s": [0, 0],
                    "e": [0, 0],
                    "to": [0, 0],
                    "ti": [0, 0]
                  },
                  { "t": 1.99999982689395 }
                ],
                "ix": 1
              },
              "s": {
                "a": 1,
                "k": [
                  {
                    "i": { "x": [0.833, 0.833], "y": [0.833, 0.833] },
                    "o": { "x": [0.167, 0.167], "y": [0.167, 0.167] },
                    "t": 1,
                    "s": [100, 100],
                    "e": [100, 100]
                  },
                  { "t": 1.99999982689395 }
                ],
                "ix": 3
              },
              "r": {
                "a": 1,
                "k": [
                  {
                    "i": { "x": [0.833], "y": [0.833] },
                    "o": { "x": [0.167], "y": [0.167] },
                    "t": 1,
                    "s": [0],
                    "e": [0]
                  },
                  { "t": 1.99999982689395 }
                ],
                "ix": 6
              },
              "o": {
                "a": 1,
                "k": [
                  {
                    "i": { "x": [0.833], "y": [0.833] },
                    "o": { "x": [0.167], "y": [0.167] },
                    "t": 1,
                    "s": [100],
                    "e": [100]
                  },
                  { "t": 1.99999982689395 }
                ],
                "ix": 7
              },
              "sk": {
                "a": 1,
                "k": [
                  {
                    "i": { "x": [0.833], "y": [0.833] },
                    "o": { "x": [0.167], "y": [0.167] },
                    "t": 1,
                    "s": [0],
                    "e": [0]
                  },
                  { "t": 1.99999982689395 }
                ],
                "ix": 4
              },
              "sa": {
                "a": 1,
                "k": [
                  {
                    "i": { "x": [0.833], "y": [0.833] },
                    "o": { "x": [0.167], "y": [0.167] },
                    "t": 1,
                    "s": [0],
                    "e": [0]
                  },
                  { "t": 1.99999982689395 }
                ],
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 1",
          "np": 2,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 59.9999948068185,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 6,
      "ty": 4,
      "nm": "foot_left",
      "parent": 8,
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": {
          "a": 1,
          "k": [
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 0,
              "s": [-75.045],
              "e": [49.455]
            },
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 3,
              "s": [49.455],
              "e": [-49.545]
            },
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 6,
              "s": [-49.545],
              "e": [-49.545]
            },
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 7,
              "s": [-49.545],
              "e": [-68.545]
            },
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 9,
              "s": [-68.545],
              "e": [-52.045]
            },
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 10,
              "s": [-52.045],
              "e": [-43.045]
            },
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 11,
              "s": [-43.045],
              "e": [49.455]
            },
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 14,
              "s": [49.455],
              "e": [-31.545]
            },
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 17,
              "s": [-31.545],
              "e": [-31.545]
            },
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 18,
              "s": [-31.545],
              "e": [-68.545]
            },
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 20,
              "s": [-68.545],
              "e": [-62.045]
            },
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 21,
              "s": [-62.045],
              "e": [-62.045]
            },
            { "t": 21.9999980958335 }
          ],
          "ix": 10
        },
        "p": { "a": 0, "k": [0.355, 1.003, 0], "ix": 2 },
        "a": { "a": 0, "k": [-104.637, 256, 0], "ix": 1 },
        "s": { "a": 0, "k": [100, 100, 100], "ix": 6 }
      },
      "ao": 0,
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "ind": 0,
              "ty": "sh",
              "ix": 1,
              "ks": {
                "a": 0,
                "k": {
                  "i": [
                    [1.365, -4.491],
                    [-11.301, -3.436],
                    [-1.365, 4.491],
                    [11.301, 3.436]
                  ],
                  "o": [
                    [-1.365, 4.491],
                    [11.301, 3.436],
                    [1.365, -4.491],
                    [-11.301, -3.436]
                  ],
                  "v": [
                    [-113.85, 254.279],
                    [-95.859, 268.633],
                    [-72.925, 266.721],
                    [-90.915, 252.367]
                  ],
                  "c": true
                },
                "ix": 2
              },
              "nm": "Path 1",
              "mn": "ADBE Vector Shape - Group",
              "hd": false
            },
            {
              "ty": "fl",
              "c": { "a": 0, "k": [0, 0, 0, 1], "ix": 4 },
              "o": { "a": 0, "k": 100, "ix": 5 },
              "r": 1,
              "bm": 0,
              "nm": "Fill 1",
              "mn": "ADBE Vector Graphic - Fill",
              "hd": false
            },
            {
              "ty": "tr",
              "p": { "a": 0, "k": [0, 0], "ix": 2 },
              "a": { "a": 0, "k": [0, 0], "ix": 1 },
              "s": { "a": 0, "k": [100, 100], "ix": 3 },
              "r": { "a": 0, "k": 0, "ix": 6 },
              "o": { "a": 0, "k": 100, "ix": 7 },
              "sk": { "a": 0, "k": 0, "ix": 4 },
              "sa": { "a": 0, "k": 0, "ix": 5 },
              "nm": "Transform"
            }
          ],
          "nm": "Group 1",
          "np": 2,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 59.9999948068185,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 7,
      "ty": 4,
      "nm": "foot_right",
      "parent": 11,
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": {
          "a": 1,
          "k": [
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 0,
              "s": [70.045],
              "e": [-63.455]
            },
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 3,
              "s": [-63.455],
              "e": [41.545]
            },
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 6,
              "s": [41.545],
              "e": [41.545]
            },
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 7,
              "s": [41.545],
              "e": [55.545]
            },
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 9,
              "s": [55.545],
              "e": [66.045]
            },
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 10,
              "s": [66.045],
              "e": [54.045]
            },
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 11,
              "s": [54.045],
              "e": [-63.455]
            },
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 14,
              "s": [-63.455],
              "e": [41.545]
            },
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 17,
              "s": [41.545],
              "e": [41.545]
            },
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 18,
              "s": [41.545],
              "e": [55.545]
            },
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 20,
              "s": [55.545],
              "e": [54.045]
            },
            {
              "i": { "x": [0.833], "y": [0.833] },
              "o": { "x": [0.167], "y": [0.167] },
              "t": 21,
              "s": [54.045],
              "e": [54.045]
            },
            { "t": 21.9999980958335 }
          ],
          "ix": 10
        },
        "p": { "a": 0, "k": [-0.135, 0.251, 0], "ix": 2 },
        "a": { "a": 0, "k": [-187.137, 255.25, 0], "ix": 1 },
        "s": { "a": 0, "k": [100, 100, 100], "ix": 6 }
      },
      "ao": 0,
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "ind": 0,
              "ty": "sh",
              "ix": 1,
              "ks": {
                "a": 0,
                "k": {
                  "i": [
                    [-1.365, -4.491],
                    [11.301, -3.436],
                    [1.365, 4.491],
                    [-11.301, 3.436]
                  ],
                  "o": [
                    [1.365, 4.491],
                    [-11.301, 3.436],
                    [-1.365, -4.491],
                    [11.301, -3.436]
                  ],
                  "v": [
                    [-178.925, 254.279],
                    [-196.915, 268.633],
                    [-219.85, 266.721],
                    [-201.859, 252.367]
                  ],
                  "c": true
                },
                "ix": 2
              },
              "nm": "Path 1",
              "mn": "ADBE Vector Shape - Group",
              "hd": false
            },
            {
              "ty": "fl",
              "c": { "a": 0, "k": [0, 0, 0, 1], "ix": 4 },
              "o": { "a": 0, "k": 100, "ix": 5 },
              "r": 1,
              "bm": 0,
              "nm": "Fill 1",
              "mn": "ADBE Vector Graphic - Fill",
              "hd": false
            },
            {
              "ty": "tr",
              "p": { "a": 0, "k": [0, 0], "ix": 2 },
              "a": { "a": 0, "k": [0, 0], "ix": 1 },
              "s": { "a": 0, "k": [100, 100], "ix": 3 },
              "r": { "a": 0, "k": 0, "ix": 6 },
              "o": { "a": 0, "k": 100, "ix": 7 },
              "sk": { "a": 0, "k": 0, "ix": 4 },
              "sa": { "a": 0, "k": 0, "ix": 5 },
              "nm": "Transform"
            }
          ],
          "nm": "Group 1",
          "np": 2,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 59.9999948068185,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 8,
      "ty": 4,
      "nm": "leg_left 2::Ankle",
      "hd": true,
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": {
          "a": 0,
          "k": 0,
          "ix": 10,
          "x": "var $bm_rt;\nfunction parentTotal() {\n    var parentVal = 0;\n    var layerChain = 'thisLayer';\n    while (eval([layerChain][0]).hasParent) {\n        layerChain = $bm_sum(layerChain, '.parent');\n        parentVal = $bm_sum(parentVal, eval([layerChain][0]).rotation);\n    }\n    return parentVal;\n}\ntry {\n    var eff = thisLayer(4)('RubberHose 2');\n    var autoRotate = eff('Auto Rotate End');\n    if (autoRotate == 1) {\n        var a = thisComp.layer(thisLayer(2)('Admin')(2)('A')(2)(1)._name).toComp([\n                0,\n                0,\n                0\n            ]);\n        var b = thisComp.layer(thisLayer(2)('Admin')(2)('B')(2)(1)._name).toComp([\n                0,\n                0,\n                0\n            ]);\n        var s = length(a, b);\n        var sFac = eff('Parent Scale');\n        var realism = eff('Realism');\n        var bendDir = $bm_div(eff('Bend Direction'), 100);\n        var hoseLength = $bm_div(eff('Hose Length'), 2);\n        var bendRad = eff('Bend Radius');\n        var autoFlop = eff('AutoFlop');\n        var baseRot = $bm_sub(180, radiansToDegrees(Math.atan2($bm_sub(b[0], a[0]), $bm_sub(b[1], a[1]))));\n        var outerRad = $bm_mul(Math.sin(0.78539816339), s);\n        var straight = $bm_div($bm_mul(1.4142135623731, outerRad), 2);\n        straight /= Math.max(Math.abs(sFac), 0.001);\n        var roundShrink = linear(Math.abs(bendRad), 0, 100, 1, 0.87);\n        var innerRad;\n        if (hoseLength > straight) {\n            innerRad = $bm_sum(straight, $bm_mul(Math.sqrt($bm_sub(Math.pow(hoseLength, 2), Math.pow(straight, 2))), roundShrink));\n            innerRad = linear(realism, 0, 100, hoseLength, innerRad);\n            innerRad = linear(Math.abs(bendDir), straight, innerRad);\n        } else {\n            innerRad = straight;\n        }\n        innerRad = linear(Math.abs(autoFlop), straight, innerRad);\n        var flopDir = 1;\n        if (bendDir < 0) {\n            flopDir = -1;\n        }\n        flopDir *= autoFlop;\n        var opp = $bm_mul($bm_sub(innerRad, straight), flopDir);\n        var theta = Math.atan($bm_div(opp, Math.max(straight, 0.001)));\n        var bendAngle = radiansToDegrees(theta);\n        if (sFac < 0) {\n            baseRot *= -1;\n        }\n        bendRad *= $bm_div($bm_div(theta, $bm_neg(Math.PI)), linear(s, hoseLength, 0, 2, 0.9));\n        var parentRot = hasParent ? parentTotal() : 0;\n        var rotCalc = $bm_sub($bm_sub($bm_sum(baseRot, bendAngle), bendRad), parentRot);\n        $bm_rt = $bm_sum(rotCalc, value);\n    } else {\n        $bm_rt = value;\n    }\n} catch (e) {\n    $bm_rt = value;\n}"
        },
        "p": {
          "a": 1,
          "k": [
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 0,
              "s": [575, 803, 0],
              "e": [565, 725, 0],
              "to": [0, 0, 0],
              "ti": [0, 0, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 3,
              "s": [565, 725, 0],
              "e": [570, 673, 0],
              "to": [0, 0, 0],
              "ti": [0, 0, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 6,
              "s": [570, 673, 0],
              "e": [570, 673, 0],
              "to": [0, 0, 0],
              "ti": [0, 0, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 7,
              "s": [570, 673, 0],
              "e": [575, 803, 0],
              "to": [0, 0, 0],
              "ti": [6.667, -13.333, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 9,
              "s": [575, 803, 0],
              "e": [575, 803, 0],
              "to": [0, 0, 0],
              "ti": [6.667, -13.333, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 10,
              "s": [575, 803, 0],
              "e": [575, 803, 0],
              "to": [0, 0, 0],
              "ti": [6.667, -13.333, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 11,
              "s": [575, 803, 0],
              "e": [565, 725, 0],
              "to": [0, 0, 0],
              "ti": [0, 0, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 14,
              "s": [565, 725, 0],
              "e": [535, 667, 0],
              "to": [0, 0, 0],
              "ti": [0, 0, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 17,
              "s": [535, 667, 0],
              "e": [535, 667, 0],
              "to": [0, 0, 0],
              "ti": [0, 0, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 18,
              "s": [535, 667, 0],
              "e": [575, 803, 0],
              "to": [0, 0, 0],
              "ti": [6.667, -13.333, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 20,
              "s": [575, 803, 0],
              "e": [575, 803, 0],
              "to": [0, 0, 0],
              "ti": [6.667, -13.333, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 21,
              "s": [575, 803, 0],
              "e": [575, 803, 0],
              "to": [0, 0, 0],
              "ti": [6.667, -13.333, 0]
            },
            { "t": 21.9999980958335 }
          ],
          "ix": 2
        },
        "a": { "a": 0, "k": [0, 0, 0], "ix": 1 },
        "s": { "a": 0, "k": [100, 100], "ix": 6 }
      },
      "ao": 0,
      "ef": [
        {
          "ty": 5,
          "nm": "RubberHose 2",
          "np": 18,
          "mn": "Pseudo/3bf5uID/RubberHose_2",
          "ix": 1,
          "en": 1,
          "ef": [
            {
              "ty": 0,
              "nm": "Hose Length",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0001",
              "ix": 1,
              "v": { "a": 0, "k": 100, "ix": 1 }
            },
            {
              "ty": 0,
              "nm": "Bend Radius",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0002",
              "ix": 2,
              "v": { "a": 0, "k": 100, "ix": 2 }
            },
            {
              "ty": 0,
              "nm": "Realism",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0003",
              "ix": 3,
              "v": { "a": 0, "k": 0, "ix": 3 }
            },
            {
              "ty": 0,
              "nm": "Bend Direction",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0004",
              "ix": 4,
              "v": { "a": 0, "k": 100, "ix": 4 }
            },
            {
              "ty": 7,
              "nm": "Auto Rotate Start",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0005",
              "ix": 5,
              "v": { "a": 0, "k": 0, "ix": 5 }
            },
            {
              "ty": 7,
              "nm": "Auto Rotate End",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0006",
              "ix": 6,
              "v": { "a": 0, "k": 1, "ix": 6 }
            },
            {
              "ty": 6,
              "nm": "Math Stuff",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0007",
              "ix": 7,
              "v": 0
            },
            {
              "ty": 3,
              "nm": "A",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0008",
              "ix": 8,
              "v": {
                "a": 0,
                "k": [-78, -79],
                "ix": 8,
                "x": "var $bm_rt;\n$bm_rt = thisLayer.toComp([\n    0,\n    0,\n    0\n]);"
              }
            },
            {
              "ty": 3,
              "nm": "B",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0009",
              "ix": 9,
              "v": {
                "a": 0,
                "k": [0, 0],
                "ix": 9,
                "x": "var $bm_rt;\ntry {\n    var b = thisLayer(2)('Admin')(2)('B')(2)(1)._name;\n    $bm_rt = thisComp.layer(b).toComp([\n        0,\n        0,\n        0\n    ]);\n} catch (err) {\n    $bm_rt = value;\n}"
              }
            },
            {
              "ty": 0,
              "nm": "Outer Radius",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0010",
              "ix": 10,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 10,
                "x": "var $bm_rt;\nvar a = thisLayer(4)('RubberHose 2')('A');\nvar b = thisLayer(4)('RubberHose 2')('B');\nvar s = length(a, b);\n$bm_rt = $bm_mul(Math.sin(0.78539816339), s);"
              }
            },
            {
              "ty": 0,
              "nm": "Inner Radius",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0011",
              "ix": 11,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 11,
                "x": "var $bm_rt;\nvar eff = thisLayer(4)('RubberHose 2');\nvar bendRad = eff('Bend Radius');\nvar hoseLength = $bm_div(eff('Hose Length'), 2);\nvar realism = eff('Realism');\nvar bendDir = $bm_div(eff('Bend Direction'), 100);\nvar sFac = eff('Parent Scale');\nvar straight = eff('Straight');\nvar autoFlop = eff('AutoFlop');\nvar roundShrink = linear(Math.abs(bendRad), 0, 100, 1, 0.87);\nvar innerRad;\nif (hoseLength > straight) {\n    innerRad = $bm_sum(straight, $bm_mul(Math.sqrt($bm_sub(Math.pow(hoseLength, 2), Math.pow(straight, 2))), roundShrink));\n    innerRad = linear(realism, 0, 100, hoseLength, innerRad);\n    innerRad = linear(Math.abs(bendDir), straight, innerRad);\n} else {\n    innerRad = straight;\n}\ninnerRad *= Math.abs(sFac);\ninnerRad = linear(Math.abs(autoFlop), $bm_mul(straight, Math.max(Math.abs(sFac), 0.001)), innerRad);\n$bm_rt = innerRad;"
              }
            },
            {
              "ty": 0,
              "nm": "Straight",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0012",
              "ix": 12,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 12,
                "x": "var $bm_rt;\nvar sFac = thisLayer(4)('RubberHose 2')('Parent Scale');\nvar outerRad = $bm_div(thisLayer(4)('RubberHose 2')('Outer Radius'), Math.max(Math.abs(sFac), 0.001));\n;\n$bm_rt = $bm_div($bm_mul(1.4142135623731, outerRad), 2);"
              }
            },
            {
              "ty": 0,
              "nm": "Base Rotation",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0013",
              "ix": 13,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 13,
                "x": "var $bm_rt;\nvar a = thisLayer(4)('RubberHose 2')('A');\nvar b = thisLayer(4)('RubberHose 2')('B');\n$bm_rt = radiansToDegrees(Math.atan2($bm_sub(a[1], b[1]), $bm_sub(a[0], b[0])));"
              }
            },
            {
              "ty": 0,
              "nm": "AutoFlop",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0014",
              "ix": 14,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 14,
                "x": "var $bm_rt;\nvar hasAF = false, isEnabled = false, output;\ntry {\n    var lyrAF = thisComp.layer($bm_sum(thisLayer._name.split('::')[0], '::AutoFlop'));\n    isEnabled = lyrAF(4)('Enable')(1);\n    var falloffAngle = lyrAF(4)('Falloff')(1);\n    hasAF = true;\n    var a = thisLayer.toComp([\n            0,\n            0,\n            0\n        ]);\n    var b = thisComp.layer(thisLayer(2)('Admin')(2)('B')(2)(1)._name).toComp([\n            0,\n            0,\n            0\n        ]);\n} catch (e) {\n}\nif (hasAF && isEnabled == 1) {\n    var threshRot = lyrAF('ADBE Transform Group')('ADBE Rotate Z');\n    threshRot %= 360;\n    var ctrlAngle = $bm_neg(radiansToDegrees(Math.atan2($bm_sub(b[0], a[0]), $bm_sub(b[1], a[1]))));\n    var offsetAngle = $bm_sub(threshRot, ctrlAngle);\n    offsetAngle %= 360;\n    var sign = offsetAngle > 0 && offsetAngle < 180 || offsetAngle < -180 ? -1 : 1;\n    var absAngle = Math.abs(offsetAngle);\n    if (absAngle > 90) {\n        absAngle = Math.abs($bm_sub(absAngle, 180));\n    }\n    if (absAngle > 90) {\n        absAngle = Math.abs($bm_sub(absAngle, 180));\n    }\n    output = linear(absAngle, 0, falloffAngle, 0, 1);\n    output *= sign;\n} else {\n    output = 1;\n}\n$bm_rt = output;"
              }
            },
            {
              "ty": 0,
              "nm": "Parent Scale",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0015",
              "ix": 15,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 15,
                "x": "var $bm_rt;\nvar sFactor = 1;\nvar scaleNorm = 0;\nvar layerChain = 'thisLayer';\nwhile (eval([layerChain][0]).hasParent) {\n    layerChain = $bm_sum(layerChain, '.parent');\n    scaleNorm = $bm_div(eval(layerChain)('ADBE Transform Group')('ADBE Scale')[0], 100);\n    sFactor = $bm_mul(sFactor, scaleNorm);\n}\n$bm_rt = sFactor;"
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0016",
              "ix": 16,
              "v": 0
            }
          ]
        }
      ],
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "d": 1,
                  "ty": "el",
                  "s": { "a": 0, "k": [100, 100], "ix": 2 },
                  "p": { "a": 0, "k": [0, 0], "ix": 3 },
                  "nm": "Circle",
                  "mn": "ADBE Vector Shape - Ellipse",
                  "hd": false
                },
                {
                  "ind": 1,
                  "ty": "sh",
                  "ix": 2,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [0, 0],
                        [0, 0]
                      ],
                      "o": [
                        [0, 0],
                        [0, 0]
                      ],
                      "v": [
                        [-75, 0],
                        [75, 0]
                      ],
                      "c": false
                    },
                    "ix": 2
                  },
                  "nm": "01",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ind": 2,
                  "ty": "sh",
                  "ix": 3,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [0, 0],
                        [0, 0]
                      ],
                      "o": [
                        [0, 0],
                        [0, 0]
                      ],
                      "v": [
                        [0, -30],
                        [0, 30]
                      ],
                      "c": false
                    },
                    "ix": 2
                  },
                  "nm": "02",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": { "a": 0, "k": [0, 0], "ix": 2 },
                  "a": { "a": 0, "k": [0, 0], "ix": 1 },
                  "s": { "a": 0, "k": [30, 30], "ix": 3 },
                  "r": { "a": 0, "k": 0, "ix": 6 },
                  "o": { "a": 0, "k": 100, "ix": 7 },
                  "sk": { "a": 0, "k": 0, "ix": 4 },
                  "sa": { "a": 0, "k": 0, "ix": 5 },
                  "nm": "Transform"
                }
              ],
              "nm": "ControlShape",
              "np": 3,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "st",
              "c": {
                "a": 0,
                "k": [1, 0.560000002384, 0, 1],
                "ix": 3,
                "x": "var $bm_rt;\nif (thisLayer.active) {\n    try {\n        var eff = thisLayer(4)('RubberHose 2');\n        var a = thisLayer.toComp([\n                0,\n                0,\n                0\n            ]);\n        var b = eff('B');\n        var straight = eff('Straight');\n        var hoseLength = $bm_div(eff('Hose Length'), 2);\n        if (straight > hoseLength) {\n            $bm_rt = [\n                0.51,\n                0.83,\n                0.98,\n                1\n            ];\n        } else {\n            $bm_rt = value;\n        }\n    } catch (err) {\n        $bm_rt = value;\n    }\n} else {\n    $bm_rt = value;\n}"
              },
              "o": { "a": 0, "k": 100, "ix": 4 },
              "w": { "a": 0, "k": 4, "ix": 5 },
              "lc": 1,
              "lj": 1,
              "ml": 4,
              "bm": 0,
              "nm": "Stroke 1",
              "mn": "ADBE Vector Graphic - Stroke",
              "hd": false
            },
            {
              "ty": "tr",
              "p": { "a": 0, "k": [0, 0], "ix": 2 },
              "a": { "a": 0, "k": [0, 0], "ix": 1 },
              "s": { "a": 0, "k": [100, 100], "ix": 3 },
              "r": { "a": 0, "k": 0, "ix": 6 },
              "o": { "a": 0, "k": 100, "ix": 7 },
              "sk": { "a": 0, "k": 0, "ix": 4 },
              "sa": { "a": 0, "k": 0, "ix": 5 },
              "nm": "Transform"
            }
          ],
          "nm": "Control Point",
          "np": 2,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ty": "tr",
                      "p": { "a": 0, "k": [0, 0], "ix": 2 },
                      "a": { "a": 0, "k": [0, 0], "ix": 1 },
                      "s": { "a": 0, "k": [100, 100], "ix": 3 },
                      "r": { "a": 0, "k": 0, "ix": 6 },
                      "o": { "a": 0, "k": 100, "ix": 7 },
                      "sk": { "a": 0, "k": 0, "ix": 4 },
                      "sa": { "a": 0, "k": 0, "ix": 5 },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "leg_left 2::Ankle",
                  "np": 0,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": { "a": 0, "k": [0, 0], "ix": 2 },
                  "a": { "a": 0, "k": [135, 0], "ix": 1 },
                  "s": { "a": 0, "k": [100, 100], "ix": 3 },
                  "r": { "a": 0, "k": 0, "ix": 6 },
                  "o": { "a": 0, "k": 100, "ix": 7 },
                  "sk": { "a": 0, "k": 0, "ix": 4 },
                  "sa": { "a": 0, "k": 0, "ix": 5 },
                  "nm": "Transform"
                }
              ],
              "nm": "A",
              "np": 1,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ty": "tr",
                      "p": { "a": 0, "k": [0, 0], "ix": 2 },
                      "a": { "a": 0, "k": [20, 20], "ix": 1 },
                      "s": { "a": 0, "k": [100, 100], "ix": 3 },
                      "r": { "a": 0, "k": 0, "ix": 6 },
                      "o": { "a": 0, "k": 100, "ix": 7 },
                      "sk": { "a": 0, "k": 0, "ix": 4 },
                      "sa": { "a": 0, "k": 0, "ix": 5 },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "leg_left 2::Hip",
                  "np": 0,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": { "a": 0, "k": [0, 0], "ix": 2 },
                  "a": { "a": 0, "k": [0, 0], "ix": 1 },
                  "s": { "a": 0, "k": [100, 100], "ix": 3 },
                  "r": { "a": 0, "k": 0, "ix": 6 },
                  "o": { "a": 0, "k": 100, "ix": 7 },
                  "sk": { "a": 0, "k": 0, "ix": 4 },
                  "sa": { "a": 0, "k": 0, "ix": 5 },
                  "nm": "Transform"
                }
              ],
              "nm": "B",
              "np": 1,
              "cix": 2,
              "bm": 0,
              "ix": 2,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ty": "tr",
                      "p": { "a": 0, "k": [0, 0], "ix": 2 },
                      "a": { "a": 0, "k": [0, 0], "ix": 1 },
                      "s": { "a": 0, "k": [100, 100], "ix": 3 },
                      "r": { "a": 0, "k": 0, "ix": 6 },
                      "o": { "a": 0, "k": 100, "ix": 7 },
                      "sk": { "a": 0, "k": 0, "ix": 4 },
                      "sa": { "a": 0, "k": 0, "ix": 5 },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "2.09",
                  "np": 0,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false,
                  "cl": "09"
                },
                {
                  "ty": "tr",
                  "p": { "a": 0, "k": [0, 0], "ix": 2 },
                  "a": { "a": 0, "k": [0, 0], "ix": 1 },
                  "s": { "a": 0, "k": [100, 100], "ix": 3 },
                  "r": { "a": 0, "k": 0, "ix": 6 },
                  "o": { "a": 0, "k": 100, "ix": 7 },
                  "sk": { "a": 0, "k": 0, "ix": 4 },
                  "sa": { "a": 0, "k": 0, "ix": 5 },
                  "nm": "Transform"
                }
              ],
              "nm": "Version",
              "np": 1,
              "cix": 2,
              "bm": 0,
              "ix": 3,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": { "a": 0, "k": [0, 0], "ix": 2 },
              "a": { "a": 0, "k": [0, 0], "ix": 1 },
              "s": { "a": 0, "k": [100, 100], "ix": 3 },
              "r": { "a": 0, "k": 0, "ix": 6 },
              "o": { "a": 0, "k": 100, "ix": 7 },
              "sk": { "a": 0, "k": 0, "ix": 4 },
              "sa": { "a": 0, "k": 0, "ix": 5 },
              "nm": "Transform"
            }
          ],
          "nm": "Admin",
          "np": 3,
          "cix": 2,
          "bm": 0,
          "ix": 2,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 59.9999948068185,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 9,
      "ty": 4,
      "nm": "leg_left 2::Hip",
      "parent": 5,
      "hd": true,
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": {
          "a": 0,
          "k": 0,
          "ix": 10,
          "x": "var $bm_rt;\nfunction parentTotal() {\n    var parentVal = 0;\n    var layerChain = 'thisLayer';\n    while (eval([layerChain][0]).hasParent) {\n        layerChain = $bm_sum(layerChain, '.parent');\n        parentVal = $bm_sum(parentVal, eval([layerChain][0]).rotation);\n    }\n    return parentVal;\n}\ntry {\n    var eff = thisComp.layer(thisLayer(2)('Admin')(2)('A')(2)(1)._name)(4)('RubberHose 2');\n    var autoRotate = eff('Auto Rotate Start');\n    if (autoRotate == 1) {\n        var a = thisComp.layer(thisLayer(2)('Admin')(2)('A')(2)(1)._name).toComp([\n                0,\n                0,\n                0\n            ]);\n        var b = thisComp.layer(thisLayer(2)('Admin')(2)('B')(2)(1)._name).toComp([\n                0,\n                0,\n                0\n            ]);\n        var s = length(a, b);\n        var sFac = eff('Parent Scale');\n        var realism = eff('Realism');\n        var bendDir = $bm_div(eff('Bend Direction'), 100);\n        var hoseLength = $bm_div(eff('Hose Length'), 2);\n        var bendRad = eff('Bend Radius');\n        var autoFlop = eff('AutoFlop');\n        var baseRot = $bm_sub(180, radiansToDegrees(Math.atan2($bm_sub(b[0], a[0]), $bm_sub(b[1], a[1]))));\n        var outerRad = $bm_mul(Math.sin(0.78539816339), s);\n        var straight = $bm_div($bm_mul(1.4142135623731, outerRad), 2);\n        straight /= Math.max(Math.abs(sFac), 0.001);\n        var roundShrink = linear(Math.abs(bendRad), 0, 100, 1, 0.87);\n        var innerRad;\n        if (hoseLength > straight) {\n            innerRad = $bm_sum(straight, $bm_mul(Math.sqrt($bm_sub(Math.pow(hoseLength, 2), Math.pow(straight, 2))), roundShrink));\n            innerRad = linear(realism, 0, 100, hoseLength, innerRad);\n            innerRad = linear(Math.abs(bendDir), straight, innerRad);\n        } else {\n            innerRad = straight;\n        }\n        innerRad = linear(Math.abs(autoFlop), straight, innerRad);\n        var flopDir = 1;\n        if (bendDir < 0) {\n            flopDir = -1;\n        }\n        flopDir *= autoFlop;\n        var opp = $bm_mul($bm_sub(innerRad, straight), flopDir);\n        var theta = Math.atan($bm_div(opp, Math.max(straight, 0.001)));\n        var bendAngle = radiansToDegrees(theta);\n        if (sFac < 0) {\n            baseRot *= -1;\n        }\n        bendRad *= $bm_div($bm_div(theta, $bm_neg(Math.PI)), linear(s, hoseLength, 0, 2, 0.9));\n        var parentRot = hasParent ? parentTotal() : 0;\n        var rotCalc = $bm_sub($bm_sum($bm_sub(baseRot, bendAngle), bendRad), parentRot);\n        $bm_rt = $bm_sum(rotCalc, value);\n    } else {\n        $bm_rt = value;\n    }\n} catch (e) {\n    $bm_rt = value;\n}"
        },
        "p": { "a": 0, "k": [-106, 129, 0], "ix": 2 },
        "a": { "a": 0, "k": [0, 0, 0], "ix": 1 },
        "s": { "a": 0, "k": [100, 100], "ix": 6 }
      },
      "ao": 0,
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "d": 1,
                  "ty": "el",
                  "s": { "a": 0, "k": [100, 100], "ix": 2 },
                  "p": { "a": 0, "k": [0, 0], "ix": 3 },
                  "nm": "Circle",
                  "mn": "ADBE Vector Shape - Ellipse",
                  "hd": false
                },
                {
                  "ind": 1,
                  "ty": "sh",
                  "ix": 2,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [0, 0],
                        [0, 0]
                      ],
                      "o": [
                        [0, 0],
                        [0, 0]
                      ],
                      "v": [
                        [-75, 0],
                        [75, 0]
                      ],
                      "c": false
                    },
                    "ix": 2
                  },
                  "nm": "01",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ind": 2,
                  "ty": "sh",
                  "ix": 3,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [0, 0],
                        [0, 0]
                      ],
                      "o": [
                        [0, 0],
                        [0, 0]
                      ],
                      "v": [
                        [0, -30],
                        [0, 30]
                      ],
                      "c": false
                    },
                    "ix": 2
                  },
                  "nm": "02",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": { "a": 0, "k": [0, 0], "ix": 2 },
                  "a": { "a": 0, "k": [0, 0], "ix": 1 },
                  "s": { "a": 0, "k": [30, 30], "ix": 3 },
                  "r": { "a": 0, "k": 0, "ix": 6 },
                  "o": { "a": 0, "k": 100, "ix": 7 },
                  "sk": { "a": 0, "k": 0, "ix": 4 },
                  "sa": { "a": 0, "k": 0, "ix": 5 },
                  "nm": "Transform"
                }
              ],
              "nm": "ControlShape",
              "np": 3,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "st",
              "c": {
                "a": 0,
                "k": [1, 0.560000002384, 0, 1],
                "ix": 3,
                "x": "var $bm_rt;\ntry {\n    var ctrl = thisComp.layer(thisLayer(2)('Admin')(2)('A')(2)(1)._name);\n    $bm_rt = ctrl(2)('Control Point')(2)('Stroke 1')('Color');\n} catch (e) {\n    $bm_rt = value;\n}"
              },
              "o": { "a": 0, "k": 100, "ix": 4 },
              "w": { "a": 0, "k": 3, "ix": 5 },
              "lc": 1,
              "lj": 1,
              "ml": 4,
              "bm": 0,
              "nm": "Stroke 1",
              "mn": "ADBE Vector Graphic - Stroke",
              "hd": false
            },
            {
              "ty": "tr",
              "p": { "a": 0, "k": [0, 0], "ix": 2 },
              "a": { "a": 0, "k": [0, 0], "ix": 1 },
              "s": { "a": 0, "k": [100, 100], "ix": 3 },
              "r": { "a": 0, "k": 0, "ix": 6 },
              "o": { "a": 0, "k": 100, "ix": 7 },
              "sk": { "a": 0, "k": 0, "ix": 4 },
              "sa": { "a": 0, "k": 0, "ix": 5 },
              "nm": "Transform"
            }
          ],
          "nm": "Control Point",
          "np": 2,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ty": "tr",
                      "p": { "a": 0, "k": [0, 0], "ix": 2 },
                      "a": { "a": 0, "k": [0, 0], "ix": 1 },
                      "s": { "a": 0, "k": [100, 100], "ix": 3 },
                      "r": { "a": 0, "k": 0, "ix": 6 },
                      "o": { "a": 0, "k": 100, "ix": 7 },
                      "sk": { "a": 0, "k": 0, "ix": 4 },
                      "sa": { "a": 0, "k": 0, "ix": 5 },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "leg_left 2::Ankle",
                  "np": 0,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": { "a": 0, "k": [0, 0], "ix": 2 },
                  "a": { "a": 0, "k": [135, 0], "ix": 1 },
                  "s": { "a": 0, "k": [100, 100], "ix": 3 },
                  "r": { "a": 0, "k": 0, "ix": 6 },
                  "o": { "a": 0, "k": 100, "ix": 7 },
                  "sk": { "a": 0, "k": 0, "ix": 4 },
                  "sa": { "a": 0, "k": 0, "ix": 5 },
                  "nm": "Transform"
                }
              ],
              "nm": "A",
              "np": 1,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ty": "tr",
                      "p": { "a": 0, "k": [0, 0], "ix": 2 },
                      "a": { "a": 0, "k": [20, 20], "ix": 1 },
                      "s": { "a": 0, "k": [100, 100], "ix": 3 },
                      "r": { "a": 0, "k": 0, "ix": 6 },
                      "o": { "a": 0, "k": 100, "ix": 7 },
                      "sk": { "a": 0, "k": 0, "ix": 4 },
                      "sa": { "a": 0, "k": 0, "ix": 5 },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "leg_left 2::Hip",
                  "np": 0,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": { "a": 0, "k": [0, 0], "ix": 2 },
                  "a": { "a": 0, "k": [0, 0], "ix": 1 },
                  "s": { "a": 0, "k": [100, 100], "ix": 3 },
                  "r": { "a": 0, "k": 0, "ix": 6 },
                  "o": { "a": 0, "k": 100, "ix": 7 },
                  "sk": { "a": 0, "k": 0, "ix": 4 },
                  "sa": { "a": 0, "k": 0, "ix": 5 },
                  "nm": "Transform"
                }
              ],
              "nm": "B",
              "np": 1,
              "cix": 2,
              "bm": 0,
              "ix": 2,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ty": "tr",
                      "p": { "a": 0, "k": [0, 0], "ix": 2 },
                      "a": { "a": 0, "k": [0, 0], "ix": 1 },
                      "s": { "a": 0, "k": [100, 100], "ix": 3 },
                      "r": { "a": 0, "k": 0, "ix": 6 },
                      "o": { "a": 0, "k": 100, "ix": 7 },
                      "sk": { "a": 0, "k": 0, "ix": 4 },
                      "sa": { "a": 0, "k": 0, "ix": 5 },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "2.09",
                  "np": 0,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false,
                  "cl": "09"
                },
                {
                  "ty": "tr",
                  "p": { "a": 0, "k": [0, 0], "ix": 2 },
                  "a": { "a": 0, "k": [0, 0], "ix": 1 },
                  "s": { "a": 0, "k": [100, 100], "ix": 3 },
                  "r": { "a": 0, "k": 0, "ix": 6 },
                  "o": { "a": 0, "k": 100, "ix": 7 },
                  "sk": { "a": 0, "k": 0, "ix": 4 },
                  "sa": { "a": 0, "k": 0, "ix": 5 },
                  "nm": "Transform"
                }
              ],
              "nm": "Version",
              "np": 1,
              "cix": 2,
              "bm": 0,
              "ix": 3,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": { "a": 0, "k": [0, 0], "ix": 2 },
              "a": { "a": 0, "k": [0, 0], "ix": 1 },
              "s": { "a": 0, "k": [100, 100], "ix": 3 },
              "r": { "a": 0, "k": 0, "ix": 6 },
              "o": { "a": 0, "k": 100, "ix": 7 },
              "sk": { "a": 0, "k": 0, "ix": 4 },
              "sa": { "a": 0, "k": 0, "ix": 5 },
              "nm": "Transform"
            }
          ],
          "nm": "Admin",
          "np": 3,
          "cix": 2,
          "bm": 0,
          "ix": 2,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 59.9999948068185,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 10,
      "ty": 4,
      "nm": "leg_left 2",
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": {
          "a": 0,
          "k": 0,
          "ix": 10,
          "x": "var $bm_rt;\nfunction parentTotal() {\n    var parentVal = 0;\n    var layerChain = 'thisLayer';\n    while (eval([layerChain][0]).hasParent) {\n        layerChain = $bm_sum(layerChain, '.parent');\n        parentVal = $bm_sum(parentVal, eval([layerChain][0]).rotation);\n    }\n    return parentVal;\n}\nvar r = 0;\nif (thisLayer.hasParent) {\n    r = $bm_neg(parentTotal());\n}\n$bm_rt = r;"
        },
        "p": {
          "a": 0,
          "k": [540, 540, 0],
          "ix": 2,
          "x": "var $bm_rt;\nvar p = [\n        0,\n        0\n    ];\ntry {\n    if (thisLayer.hasParent) {\n        p = parent.fromComp([\n            0,\n            0,\n            0\n        ]);\n    }\n    $bm_rt = p;\n} catch (err) {\n    $bm_rt = p;\n}"
        },
        "a": { "a": 0, "k": [0, 0], "ix": 1 },
        "s": {
          "a": 0,
          "k": [100, 100, 100],
          "ix": 6,
          "x": "var $bm_rt;\n$bm_rt = value / length(toComp([\n    0,\n    0\n]), toComp([\n    0.7071,\n    0.7071\n])) || 0.001;"
        }
      },
      "ao": 0,
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ty": "sr",
                      "sy": 1,
                      "d": 1,
                      "pt": { "a": 0, "k": 4, "ix": 3 },
                      "p": { "a": 0, "k": [0, 0], "ix": 4 },
                      "r": { "a": 0, "k": 0, "ix": 5 },
                      "ir": {
                        "a": 0,
                        "k": 500,
                        "ix": 6,
                        "x": "var $bm_rt;\nvar p = thisProperty.propertyIndex;\nvar grp = thisProperty.propertyGroup(1).propertyIndex;\n$bm_rt = thisLayer(2)('Admin')(2)('ArcMath')(2)(grp)(p);"
                      },
                      "is": {
                        "a": 0,
                        "k": 0,
                        "ix": 8,
                        "x": "var $bm_rt;\nvar p = thisProperty.propertyIndex;\nvar grp = thisProperty.propertyGroup(1).propertyIndex;\n$bm_rt = thisLayer(2)('Admin')(2)('ArcMath')(2)(grp)(p);"
                      },
                      "or": {
                        "a": 0,
                        "k": 113,
                        "ix": 7,
                        "x": "var $bm_rt;\nvar p = thisProperty.propertyIndex;\nvar grp = thisProperty.propertyGroup(1).propertyIndex;\n$bm_rt = thisLayer(2)('Admin')(2)('ArcMath')(2)(grp)(p);"
                      },
                      "os": {
                        "a": 0,
                        "k": 0,
                        "ix": 9,
                        "x": "var $bm_rt;\nvar p = thisProperty.propertyIndex;\nvar grp = thisProperty.propertyGroup(1).propertyIndex;\n$bm_rt = thisLayer(2)('Admin')(2)('ArcMath')(2)(grp)(p);"
                      },
                      "ix": 1,
                      "nm": "LineForCurve",
                      "mn": "ADBE Vector Shape - Star",
                      "hd": false
                    },
                    {
                      "ty": "tm",
                      "s": {
                        "a": 0,
                        "k": 0,
                        "ix": 1,
                        "x": "var $bm_rt;\nvar p = thisProperty.propertyIndex;\nvar grp = thisProperty.propertyGroup(1).propertyIndex;\n$bm_rt = thisLayer(2)('Admin')(2)('ArcMath')(2)(grp)(p);"
                      },
                      "e": {
                        "a": 0,
                        "k": 0,
                        "ix": 2,
                        "x": "var $bm_rt;\nvar p = thisProperty.propertyIndex;\nvar grp = thisProperty.propertyGroup(1).propertyIndex;\n$bm_rt = thisLayer(2)('Admin')(2)('ArcMath')(2)(grp)(p);"
                      },
                      "o": {
                        "a": 0,
                        "k": -90,
                        "ix": 3,
                        "x": "var $bm_rt;\nvar p = thisProperty.propertyIndex;\nvar grp = thisProperty.propertyGroup(1).propertyIndex;\n$bm_rt = thisLayer(2)('Admin')(2)('ArcMath')(2)(grp)(p);"
                      },
                      "m": 1,
                      "ix": 2,
                      "nm": "Line Halfer",
                      "mn": "ADBE Vector Filter - Trim",
                      "hd": false
                    },
                    {
                      "ty": "tr",
                      "p": {
                        "a": 0,
                        "k": [0, 0],
                        "ix": 2,
                        "x": "var $bm_rt;\nvar p = thisProperty.propertyIndex;\nvar grp = thisProperty.propertyGroup(2).propertyIndex;\n$bm_rt = content('Admin').content('ArcMath')('ADBE Vector Transform Group')(p);"
                      },
                      "a": {
                        "a": 0,
                        "k": [0, 0],
                        "ix": 1,
                        "x": "var $bm_rt;\nvar p = thisProperty.propertyIndex;\nvar grp = thisProperty.propertyGroup(2).propertyIndex;\n$bm_rt = content('Admin').content('ArcMath')('ADBE Vector Transform Group')(p);"
                      },
                      "s": {
                        "a": 0,
                        "k": [100, 100],
                        "ix": 3,
                        "x": "var $bm_rt;\nvar p = thisProperty.propertyIndex;\nvar grp = thisProperty.propertyGroup(2).propertyIndex;\n$bm_rt = content('Admin').content('ArcMath')('ADBE Vector Transform Group')(p);"
                      },
                      "r": {
                        "a": 0,
                        "k": 45,
                        "ix": 6,
                        "x": "var $bm_rt;\nvar p = thisProperty.propertyIndex;\nvar grp = thisProperty.propertyGroup(2).propertyIndex;\n$bm_rt = content('Admin').content('ArcMath')('ADBE Vector Transform Group')(p);"
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 7,
                        "x": "var $bm_rt;\nvar p = thisProperty.propertyIndex;\nvar grp = thisProperty.propertyGroup(2).propertyIndex;\n$bm_rt = content('Admin').content('ArcMath')('ADBE Vector Transform Group')(p);"
                      },
                      "sk": {
                        "a": 0,
                        "k": 0,
                        "ix": 4,
                        "x": "var $bm_rt;\nvar p = thisProperty.propertyIndex;\nvar grp = thisProperty.propertyGroup(2).propertyIndex;\n$bm_rt = content('Admin').content('ArcMath')('ADBE Vector Transform Group')(p);"
                      },
                      "sa": {
                        "a": 0,
                        "k": 0,
                        "ix": 5,
                        "x": "var $bm_rt;\nvar p = thisProperty.propertyIndex;\nvar grp = thisProperty.propertyGroup(2).propertyIndex;\n$bm_rt = content('Admin').content('ArcMath')('ADBE Vector Transform Group')(p);"
                      },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "Arc",
                  "np": 2,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "st",
                  "c": { "a": 0, "k": [0, 0, 0, 1], "ix": 3 },
                  "o": { "a": 0, "k": 100, "ix": 4 },
                  "w": {
                    "a": 0,
                    "k": 15,
                    "ix": 5,
                    "x": "var $bm_rt;\nvar sFac = thisComp.layer(thisLayer(2)('Admin')(2)('A')(2)(1)._name)(4)('RubberHose 2')('Parent Scale');\n$bm_rt = Math.abs($bm_mul(value, sFac));"
                  },
                  "lc": 2,
                  "lj": 2,
                  "bm": 0,
                  "nm": "Stroke 1",
                  "mn": "ADBE Vector Graphic - Stroke",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [0, 0],
                    "ix": 2,
                    "x": "var $bm_rt;\ntry {\n    var ctrl = thisComp.layer(thisLayer(2)('Admin')(2)('A')(2)(1)._name)(4)('RubberHose 2');\n    $bm_rt = ctrl('A');\n} catch (err) {\n    $bm_rt = value;\n}"
                  },
                  "a": { "a": 0, "k": [0, 0], "ix": 1 },
                  "s": { "a": 0, "k": [100, 100], "ix": 3 },
                  "r": { "a": 0, "k": 0, "ix": 6 },
                  "o": { "a": 0, "k": 100, "ix": 7 },
                  "sk": { "a": 0, "k": 0, "ix": 4 },
                  "sa": { "a": 0, "k": 0, "ix": 5 },
                  "nm": "Transform"
                }
              ],
              "nm": "BaseHose",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": { "a": 0, "k": [0, 0], "ix": 2 },
              "a": { "a": 0, "k": [0, 0], "ix": 1 },
              "s": { "a": 0, "k": [100, 100], "ix": 3 },
              "r": { "a": 0, "k": 0, "ix": 6 },
              "o": { "a": 0, "k": 100, "ix": 7 },
              "sk": { "a": 0, "k": 0, "ix": 4 },
              "sa": { "a": 0, "k": 0, "ix": 5 },
              "nm": "Transform"
            }
          ],
          "nm": "Style",
          "np": 1,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ty": "tr",
                      "p": { "a": 0, "k": [0, 0], "ix": 2 },
                      "a": { "a": 0, "k": [0, 0], "ix": 1 },
                      "s": { "a": 0, "k": [100, 100], "ix": 3 },
                      "r": { "a": 0, "k": 0, "ix": 6 },
                      "o": { "a": 0, "k": 100, "ix": 7 },
                      "sk": { "a": 0, "k": 0, "ix": 4 },
                      "sa": { "a": 0, "k": 0, "ix": 5 },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "leg_left 2::Ankle",
                  "np": 0,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": { "a": 0, "k": [0, 0], "ix": 2 },
                  "a": { "a": 0, "k": [135, 0], "ix": 1 },
                  "s": { "a": 0, "k": [100, 100], "ix": 3 },
                  "r": { "a": 0, "k": 0, "ix": 6 },
                  "o": { "a": 0, "k": 100, "ix": 7 },
                  "sk": { "a": 0, "k": 0, "ix": 4 },
                  "sa": { "a": 0, "k": 0, "ix": 5 },
                  "nm": "Transform"
                }
              ],
              "nm": "A",
              "np": 1,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ty": "tr",
                      "p": { "a": 0, "k": [0, 0], "ix": 2 },
                      "a": { "a": 0, "k": [200, 200], "ix": 1 },
                      "s": { "a": 0, "k": [100, 100], "ix": 3 },
                      "r": { "a": 0, "k": 0, "ix": 6 },
                      "o": { "a": 0, "k": 100, "ix": 7 },
                      "sk": { "a": 0, "k": 0, "ix": 4 },
                      "sa": { "a": 0, "k": 0, "ix": 5 },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "leg_left 2::Hip",
                  "np": 0,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": { "a": 0, "k": [0, 0], "ix": 2 },
                  "a": { "a": 0, "k": [0, 0], "ix": 1 },
                  "s": { "a": 0, "k": [100, 100], "ix": 3 },
                  "r": { "a": 0, "k": 0, "ix": 6 },
                  "o": { "a": 0, "k": 100, "ix": 7 },
                  "sk": { "a": 0, "k": 0, "ix": 4 },
                  "sa": { "a": 0, "k": 0, "ix": 5 },
                  "nm": "Transform"
                }
              ],
              "nm": "B",
              "np": 1,
              "cix": 2,
              "bm": 0,
              "ix": 2,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ty": "tr",
                      "p": { "a": 0, "k": [0, 0], "ix": 2 },
                      "a": { "a": 0, "k": [0, 0], "ix": 1 },
                      "s": { "a": 0, "k": [100, 100], "ix": 3 },
                      "r": { "a": 0, "k": 0, "ix": 6 },
                      "o": { "a": 0, "k": 100, "ix": 7 },
                      "sk": { "a": 0, "k": 0, "ix": 4 },
                      "sa": { "a": 0, "k": 0, "ix": 5 },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "2.09",
                  "np": 0,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false,
                  "cl": "09"
                },
                {
                  "ty": "tr",
                  "p": { "a": 0, "k": [0, 0], "ix": 2 },
                  "a": { "a": 0, "k": [0, 0], "ix": 1 },
                  "s": { "a": 0, "k": [100, 100], "ix": 3 },
                  "r": { "a": 0, "k": 0, "ix": 6 },
                  "o": { "a": 0, "k": 100, "ix": 7 },
                  "sk": { "a": 0, "k": 0, "ix": 4 },
                  "sa": { "a": 0, "k": 0, "ix": 5 },
                  "nm": "Transform"
                }
              ],
              "nm": "Version",
              "np": 1,
              "cix": 2,
              "bm": 0,
              "ix": 3,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "sr",
                  "sy": 1,
                  "d": 1,
                  "pt": { "a": 0, "k": 4, "ix": 3 },
                  "p": { "a": 0, "k": [0, 0], "ix": 4 },
                  "r": { "a": 0, "k": 0, "ix": 5 },
                  "ir": {
                    "a": 0,
                    "k": 200,
                    "ix": 6,
                    "x": "var $bm_rt;\ntry {\n    var ctrl = thisComp.layer(thisLayer(2)('Admin')(2)('A')(2)(1)._name)(4)('RubberHose 2');\n    $bm_rt = ctrl('Inner Radius');\n} catch (err) {\n    $bm_rt = value;\n}"
                  },
                  "is": {
                    "a": 0,
                    "k": 100,
                    "ix": 8,
                    "x": "var $bm_rt;\ntry {\n    var ctrl = thisComp.layer(thisLayer(2)('Admin')(2)('A')(2)(1)._name)(4)('RubberHose 2');\n    $bm_rt = ctrl('Bend Radius');\n} catch (err) {\n    $bm_rt = value;\n}"
                  },
                  "or": {
                    "a": 0,
                    "k": 200,
                    "ix": 7,
                    "x": "var $bm_rt;\ntry {\n    var ctrl = thisComp.layer(thisLayer(2)('Admin')(2)('A')(2)(1)._name)(4)('RubberHose 2');\n    $bm_rt = ctrl('Outer Radius');\n} catch (err) {\n    $bm_rt = value;\n}"
                  },
                  "os": { "a": 0, "k": 0, "ix": 9 },
                  "ix": 1,
                  "nm": "LineForCurve",
                  "mn": "ADBE Vector Shape - Star",
                  "hd": false
                },
                {
                  "ty": "tm",
                  "s": { "a": 0, "k": 0.01, "ix": 1 },
                  "e": { "a": 0, "k": 24.99, "ix": 2 },
                  "o": {
                    "a": 0,
                    "k": -90,
                    "ix": 3,
                    "x": "var $bm_rt;\n$bm_rt = -90;"
                  },
                  "m": 1,
                  "ix": 2,
                  "nm": "Line Halfer",
                  "mn": "ADBE Vector Filter - Trim",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": { "a": 0, "k": [0, 0], "ix": 2 },
                  "a": {
                    "a": 0,
                    "k": [0, 0],
                    "ix": 1,
                    "x": "var $bm_rt;\nvar s = thisProperty.propertyGroup(2)(2)(1)(7);\n$bm_rt = [\n    -s,\n    0\n];"
                  },
                  "s": {
                    "a": 0,
                    "k": [100, 100],
                    "ix": 3,
                    "x": "var $bm_rt;\nvar flop;\ntry {\n    var eff = thisComp.layer(thisLayer(2)('Admin')(2)('A')(2)(1)._name)(4)('RubberHose 2');\n    var bendDir = eff('Bend Direction');\n    var autoFlop = eff('AutoFlop');\n    flop = bendDir > 0 ? 1 : -1;\n    autoFlop > 0 ? 0 : flop *= -1;\n    var s = flop == 1 ? [\n            -100,\n            100\n        ] : [\n            100,\n            100\n        ];\n    if (eff('Parent Scale') < 0) {\n        s = [\n            -s[0],\n            s[1]\n        ];\n    }\n    $bm_rt = s;\n} catch (err) {\n    $bm_rt = value;\n}\n;"
                  },
                  "r": {
                    "a": 0,
                    "k": 45,
                    "ix": 6,
                    "x": "var $bm_rt;\ntry {\n    var ctrl = thisComp.layer(thisLayer(2)('Admin')(2)('A')(2)(1)._name)(4)('RubberHose 2');\n    var baseRot = ctrl('Base Rotation');\n    var flop = content('Admin').content('ArcMath').transform.scale[0];\n    var rotOffset = flop < 0 ? -45 : 225;\n    $bm_rt = $bm_sum(baseRot, rotOffset);\n} catch (err) {\n    $bm_rt = value;\n}"
                  },
                  "o": { "a": 0, "k": 100, "ix": 7 },
                  "sk": { "a": 0, "k": 0, "ix": 4 },
                  "sa": { "a": 0, "k": 0, "ix": 5 },
                  "nm": "Transform"
                }
              ],
              "nm": "ArcMath",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 4,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [0, 0],
                "ix": 2,
                "x": "var $bm_rt;\ntry {\n    var ctrl = thisComp.layer(thisLayer(2)('Admin')(2)('A')(2)(1)._name)(4)('RubberHose 2');\n    $bm_rt = ctrl('A');\n} catch (err) {\n    $bm_rt = value;\n}"
              },
              "a": { "a": 0, "k": [0, 0], "ix": 1 },
              "s": { "a": 0, "k": [100, 100], "ix": 3 },
              "r": { "a": 0, "k": 0, "ix": 6 },
              "o": { "a": 0, "k": 100, "ix": 7 },
              "sk": { "a": 0, "k": 0, "ix": 4 },
              "sa": { "a": 0, "k": 0, "ix": 5 },
              "nm": "Transform"
            }
          ],
          "nm": "Admin",
          "np": 4,
          "cix": 2,
          "bm": 0,
          "ix": 2,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 59.9999948068185,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 11,
      "ty": 4,
      "nm": "leg_right 2::Ankle",
      "hd": true,
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": {
          "a": 0,
          "k": 0,
          "ix": 10,
          "x": "var $bm_rt;\nfunction parentTotal() {\n    var parentVal = 0;\n    var layerChain = 'thisLayer';\n    while (eval([layerChain][0]).hasParent) {\n        layerChain = $bm_sum(layerChain, '.parent');\n        parentVal = $bm_sum(parentVal, eval([layerChain][0]).rotation);\n    }\n    return parentVal;\n}\ntry {\n    var eff = thisLayer(4)('RubberHose 2');\n    var autoRotate = eff('Auto Rotate End');\n    if (autoRotate == 1) {\n        var a = thisComp.layer(thisLayer(2)('Admin')(2)('A')(2)(1)._name).toComp([\n                0,\n                0,\n                0\n            ]);\n        var b = thisComp.layer(thisLayer(2)('Admin')(2)('B')(2)(1)._name).toComp([\n                0,\n                0,\n                0\n            ]);\n        var s = length(a, b);\n        var sFac = eff('Parent Scale');\n        var realism = eff('Realism');\n        var bendDir = $bm_div(eff('Bend Direction'), 100);\n        var hoseLength = $bm_div(eff('Hose Length'), 2);\n        var bendRad = eff('Bend Radius');\n        var autoFlop = eff('AutoFlop');\n        var baseRot = $bm_sub(180, radiansToDegrees(Math.atan2($bm_sub(b[0], a[0]), $bm_sub(b[1], a[1]))));\n        var outerRad = $bm_mul(Math.sin(0.78539816339), s);\n        var straight = $bm_div($bm_mul(1.4142135623731, outerRad), 2);\n        straight /= Math.max(Math.abs(sFac), 0.001);\n        var roundShrink = linear(Math.abs(bendRad), 0, 100, 1, 0.87);\n        var innerRad;\n        if (hoseLength > straight) {\n            innerRad = $bm_sum(straight, $bm_mul(Math.sqrt($bm_sub(Math.pow(hoseLength, 2), Math.pow(straight, 2))), roundShrink));\n            innerRad = linear(realism, 0, 100, hoseLength, innerRad);\n            innerRad = linear(Math.abs(bendDir), straight, innerRad);\n        } else {\n            innerRad = straight;\n        }\n        innerRad = linear(Math.abs(autoFlop), straight, innerRad);\n        var flopDir = 1;\n        if (bendDir < 0) {\n            flopDir = -1;\n        }\n        flopDir *= autoFlop;\n        var opp = $bm_mul($bm_sub(innerRad, straight), flopDir);\n        var theta = Math.atan($bm_div(opp, Math.max(straight, 0.001)));\n        var bendAngle = radiansToDegrees(theta);\n        if (sFac < 0) {\n            baseRot *= -1;\n        }\n        bendRad *= $bm_div($bm_div(theta, $bm_neg(Math.PI)), linear(s, hoseLength, 0, 2, 0.9));\n        var parentRot = hasParent ? parentTotal() : 0;\n        var rotCalc = $bm_sub($bm_sub($bm_sum(baseRot, bendAngle), bendRad), parentRot);\n        $bm_rt = $bm_sum(rotCalc, value);\n    } else {\n        $bm_rt = value;\n    }\n} catch (e) {\n    $bm_rt = value;\n}"
        },
        "p": {
          "a": 1,
          "k": [
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 0,
              "s": [490, 803, 0],
              "e": [493, 725, 0],
              "to": [0, 0, 0],
              "ti": [0, 0, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 3,
              "s": [493, 725, 0],
              "e": [532, 669, 0],
              "to": [0, 0, 0],
              "ti": [0, 0, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 6,
              "s": [532, 669, 0],
              "e": [532, 669, 0],
              "to": [0, 0, 0],
              "ti": [0, 0, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 7,
              "s": [532, 669, 0],
              "e": [490, 805, 0],
              "to": [0, 0, 0],
              "ti": [6.667, -13.333, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 9,
              "s": [490, 805, 0],
              "e": [490, 803, 0],
              "to": [0, 0, 0],
              "ti": [6.667, -13.333, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 10,
              "s": [490, 803, 0],
              "e": [490, 803, 0],
              "to": [0, 0, 0],
              "ti": [6.667, -13.333, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 11,
              "s": [490, 803, 0],
              "e": [493, 725, 0],
              "to": [0, 0, 0],
              "ti": [0, 0, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 14,
              "s": [493, 725, 0],
              "e": [502, 669, 0],
              "to": [0, 0, 0],
              "ti": [0, 0, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 17,
              "s": [502, 669, 0],
              "e": [502, 669, 0],
              "to": [0, 0, 0],
              "ti": [0, 0, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 18,
              "s": [502, 669, 0],
              "e": [490, 805, 0],
              "to": [0, 0, 0],
              "ti": [6.667, -13.333, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 20,
              "s": [490, 805, 0],
              "e": [490, 803, 0],
              "to": [0, 0, 0],
              "ti": [6.667, -13.333, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 21,
              "s": [490, 803, 0],
              "e": [490, 803, 0],
              "to": [0, 0, 0],
              "ti": [6.667, -13.333, 0]
            },
            { "t": 21.9999980958335 }
          ],
          "ix": 2
        },
        "a": { "a": 0, "k": [0, 0, 0], "ix": 1 },
        "s": { "a": 0, "k": [100, 100], "ix": 6 }
      },
      "ao": 0,
      "ef": [
        {
          "ty": 5,
          "nm": "RubberHose 2",
          "np": 18,
          "mn": "Pseudo/3bf5uID/RubberHose_2",
          "ix": 1,
          "en": 1,
          "ef": [
            {
              "ty": 0,
              "nm": "Hose Length",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0001",
              "ix": 1,
              "v": { "a": 0, "k": 100, "ix": 1 }
            },
            {
              "ty": 0,
              "nm": "Bend Radius",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0002",
              "ix": 2,
              "v": { "a": 0, "k": 100, "ix": 2 }
            },
            {
              "ty": 0,
              "nm": "Realism",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0003",
              "ix": 3,
              "v": { "a": 0, "k": 0, "ix": 3 }
            },
            {
              "ty": 0,
              "nm": "Bend Direction",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0004",
              "ix": 4,
              "v": { "a": 0, "k": -100, "ix": 4 }
            },
            {
              "ty": 7,
              "nm": "Auto Rotate Start",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0005",
              "ix": 5,
              "v": { "a": 0, "k": 0, "ix": 5 }
            },
            {
              "ty": 7,
              "nm": "Auto Rotate End",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0006",
              "ix": 6,
              "v": { "a": 0, "k": 1, "ix": 6 }
            },
            {
              "ty": 6,
              "nm": "Math Stuff",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0007",
              "ix": 7,
              "v": 0
            },
            {
              "ty": 3,
              "nm": "A",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0008",
              "ix": 8,
              "v": {
                "a": 0,
                "k": [-78, -79],
                "ix": 8,
                "x": "var $bm_rt;\n$bm_rt = thisLayer.toComp([\n    0,\n    0,\n    0\n]);"
              }
            },
            {
              "ty": 3,
              "nm": "B",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0009",
              "ix": 9,
              "v": {
                "a": 0,
                "k": [0, 0],
                "ix": 9,
                "x": "var $bm_rt;\ntry {\n    var b = thisLayer(2)('Admin')(2)('B')(2)(1)._name;\n    $bm_rt = thisComp.layer(b).toComp([\n        0,\n        0,\n        0\n    ]);\n} catch (err) {\n    $bm_rt = value;\n}"
              }
            },
            {
              "ty": 0,
              "nm": "Outer Radius",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0010",
              "ix": 10,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 10,
                "x": "var $bm_rt;\nvar a = thisLayer(4)('RubberHose 2')('A');\nvar b = thisLayer(4)('RubberHose 2')('B');\nvar s = length(a, b);\n$bm_rt = $bm_mul(Math.sin(0.78539816339), s);"
              }
            },
            {
              "ty": 0,
              "nm": "Inner Radius",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0011",
              "ix": 11,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 11,
                "x": "var $bm_rt;\nvar eff = thisLayer(4)('RubberHose 2');\nvar bendRad = eff('Bend Radius');\nvar hoseLength = $bm_div(eff('Hose Length'), 2);\nvar realism = eff('Realism');\nvar bendDir = $bm_div(eff('Bend Direction'), 100);\nvar sFac = eff('Parent Scale');\nvar straight = eff('Straight');\nvar autoFlop = eff('AutoFlop');\nvar roundShrink = linear(Math.abs(bendRad), 0, 100, 1, 0.87);\nvar innerRad;\nif (hoseLength > straight) {\n    innerRad = $bm_sum(straight, $bm_mul(Math.sqrt($bm_sub(Math.pow(hoseLength, 2), Math.pow(straight, 2))), roundShrink));\n    innerRad = linear(realism, 0, 100, hoseLength, innerRad);\n    innerRad = linear(Math.abs(bendDir), straight, innerRad);\n} else {\n    innerRad = straight;\n}\ninnerRad *= Math.abs(sFac);\ninnerRad = linear(Math.abs(autoFlop), $bm_mul(straight, Math.max(Math.abs(sFac), 0.001)), innerRad);\n$bm_rt = innerRad;"
              }
            },
            {
              "ty": 0,
              "nm": "Straight",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0012",
              "ix": 12,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 12,
                "x": "var $bm_rt;\nvar sFac = thisLayer(4)('RubberHose 2')('Parent Scale');\nvar outerRad = $bm_div(thisLayer(4)('RubberHose 2')('Outer Radius'), Math.max(Math.abs(sFac), 0.001));\n;\n$bm_rt = $bm_div($bm_mul(1.4142135623731, outerRad), 2);"
              }
            },
            {
              "ty": 0,
              "nm": "Base Rotation",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0013",
              "ix": 13,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 13,
                "x": "var $bm_rt;\nvar a = thisLayer(4)('RubberHose 2')('A');\nvar b = thisLayer(4)('RubberHose 2')('B');\n$bm_rt = radiansToDegrees(Math.atan2($bm_sub(a[1], b[1]), $bm_sub(a[0], b[0])));"
              }
            },
            {
              "ty": 0,
              "nm": "AutoFlop",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0014",
              "ix": 14,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 14,
                "x": "var $bm_rt;\nvar hasAF = false, isEnabled = false, output;\ntry {\n    var lyrAF = thisComp.layer($bm_sum(thisLayer._name.split('::')[0], '::AutoFlop'));\n    isEnabled = lyrAF(4)('Enable')(1);\n    var falloffAngle = lyrAF(4)('Falloff')(1);\n    hasAF = true;\n    var a = thisLayer.toComp([\n            0,\n            0,\n            0\n        ]);\n    var b = thisComp.layer(thisLayer(2)('Admin')(2)('B')(2)(1)._name).toComp([\n            0,\n            0,\n            0\n        ]);\n} catch (e) {\n}\nif (hasAF && isEnabled == 1) {\n    var threshRot = lyrAF('ADBE Transform Group')('ADBE Rotate Z');\n    threshRot %= 360;\n    var ctrlAngle = $bm_neg(radiansToDegrees(Math.atan2($bm_sub(b[0], a[0]), $bm_sub(b[1], a[1]))));\n    var offsetAngle = $bm_sub(threshRot, ctrlAngle);\n    offsetAngle %= 360;\n    var sign = offsetAngle > 0 && offsetAngle < 180 || offsetAngle < -180 ? -1 : 1;\n    var absAngle = Math.abs(offsetAngle);\n    if (absAngle > 90) {\n        absAngle = Math.abs($bm_sub(absAngle, 180));\n    }\n    if (absAngle > 90) {\n        absAngle = Math.abs($bm_sub(absAngle, 180));\n    }\n    output = linear(absAngle, 0, falloffAngle, 0, 1);\n    output *= sign;\n} else {\n    output = 1;\n}\n$bm_rt = output;"
              }
            },
            {
              "ty": 0,
              "nm": "Parent Scale",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0015",
              "ix": 15,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 15,
                "x": "var $bm_rt;\nvar sFactor = 1;\nvar scaleNorm = 0;\nvar layerChain = 'thisLayer';\nwhile (eval([layerChain][0]).hasParent) {\n    layerChain = $bm_sum(layerChain, '.parent');\n    scaleNorm = $bm_div(eval(layerChain)('ADBE Transform Group')('ADBE Scale')[0], 100);\n    sFactor = $bm_mul(sFactor, scaleNorm);\n}\n$bm_rt = sFactor;"
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/3bf5uID/RubberHose_2-0016",
              "ix": 16,
              "v": 0
            }
          ]
        }
      ],
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "d": 1,
                  "ty": "el",
                  "s": { "a": 0, "k": [100, 100], "ix": 2 },
                  "p": { "a": 0, "k": [0, 0], "ix": 3 },
                  "nm": "Circle",
                  "mn": "ADBE Vector Shape - Ellipse",
                  "hd": false
                },
                {
                  "ind": 1,
                  "ty": "sh",
                  "ix": 2,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [0, 0],
                        [0, 0]
                      ],
                      "o": [
                        [0, 0],
                        [0, 0]
                      ],
                      "v": [
                        [-75, 0],
                        [75, 0]
                      ],
                      "c": false
                    },
                    "ix": 2
                  },
                  "nm": "01",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ind": 2,
                  "ty": "sh",
                  "ix": 3,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [0, 0],
                        [0, 0]
                      ],
                      "o": [
                        [0, 0],
                        [0, 0]
                      ],
                      "v": [
                        [0, -30],
                        [0, 30]
                      ],
                      "c": false
                    },
                    "ix": 2
                  },
                  "nm": "02",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": { "a": 0, "k": [0, 0], "ix": 2 },
                  "a": { "a": 0, "k": [0, 0], "ix": 1 },
                  "s": { "a": 0, "k": [30, 30], "ix": 3 },
                  "r": { "a": 0, "k": 0, "ix": 6 },
                  "o": { "a": 0, "k": 100, "ix": 7 },
                  "sk": { "a": 0, "k": 0, "ix": 4 },
                  "sa": { "a": 0, "k": 0, "ix": 5 },
                  "nm": "Transform"
                }
              ],
              "nm": "ControlShape",
              "np": 3,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "st",
              "c": {
                "a": 0,
                "k": [1, 0.560000002384, 0, 1],
                "ix": 3,
                "x": "var $bm_rt;\nif (thisLayer.active) {\n    try {\n        var eff = thisLayer(4)('RubberHose 2');\n        var a = thisLayer.toComp([\n                0,\n                0,\n                0\n            ]);\n        var b = eff('B');\n        var straight = eff('Straight');\n        var hoseLength = $bm_div(eff('Hose Length'), 2);\n        if (straight > hoseLength) {\n            $bm_rt = [\n                0.51,\n                0.83,\n                0.98,\n                1\n            ];\n        } else {\n            $bm_rt = value;\n        }\n    } catch (err) {\n        $bm_rt = value;\n    }\n} else {\n    $bm_rt = value;\n}"
              },
              "o": { "a": 0, "k": 100, "ix": 4 },
              "w": { "a": 0, "k": 4, "ix": 5 },
              "lc": 1,
              "lj": 1,
              "ml": 4,
              "bm": 0,
              "nm": "Stroke 1",
              "mn": "ADBE Vector Graphic - Stroke",
              "hd": false
            },
            {
              "ty": "tr",
              "p": { "a": 0, "k": [0, 0], "ix": 2 },
              "a": { "a": 0, "k": [0, 0], "ix": 1 },
              "s": { "a": 0, "k": [100, 100], "ix": 3 },
              "r": { "a": 0, "k": 0, "ix": 6 },
              "o": { "a": 0, "k": 100, "ix": 7 },
              "sk": { "a": 0, "k": 0, "ix": 4 },
              "sa": { "a": 0, "k": 0, "ix": 5 },
              "nm": "Transform"
            }
          ],
          "nm": "Control Point",
          "np": 2,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ty": "tr",
                      "p": { "a": 0, "k": [0, 0], "ix": 2 },
                      "a": { "a": 0, "k": [0, 0], "ix": 1 },
                      "s": { "a": 0, "k": [100, 100], "ix": 3 },
                      "r": { "a": 0, "k": 0, "ix": 6 },
                      "o": { "a": 0, "k": 100, "ix": 7 },
                      "sk": { "a": 0, "k": 0, "ix": 4 },
                      "sa": { "a": 0, "k": 0, "ix": 5 },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "leg_right 2::Ankle",
                  "np": 0,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": { "a": 0, "k": [0, 0], "ix": 2 },
                  "a": { "a": 0, "k": [135, 0], "ix": 1 },
                  "s": { "a": 0, "k": [100, 100], "ix": 3 },
                  "r": { "a": 0, "k": 0, "ix": 6 },
                  "o": { "a": 0, "k": 100, "ix": 7 },
                  "sk": { "a": 0, "k": 0, "ix": 4 },
                  "sa": { "a": 0, "k": 0, "ix": 5 },
                  "nm": "Transform"
                }
              ],
              "nm": "A",
              "np": 1,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ty": "tr",
                      "p": { "a": 0, "k": [0, 0], "ix": 2 },
                      "a": { "a": 0, "k": [20, 20], "ix": 1 },
                      "s": { "a": 0, "k": [100, 100], "ix": 3 },
                      "r": { "a": 0, "k": 0, "ix": 6 },
                      "o": { "a": 0, "k": 100, "ix": 7 },
                      "sk": { "a": 0, "k": 0, "ix": 4 },
                      "sa": { "a": 0, "k": 0, "ix": 5 },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "leg_right 2::Hip",
                  "np": 0,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": { "a": 0, "k": [0, 0], "ix": 2 },
                  "a": { "a": 0, "k": [0, 0], "ix": 1 },
                  "s": { "a": 0, "k": [100, 100], "ix": 3 },
                  "r": { "a": 0, "k": 0, "ix": 6 },
                  "o": { "a": 0, "k": 100, "ix": 7 },
                  "sk": { "a": 0, "k": 0, "ix": 4 },
                  "sa": { "a": 0, "k": 0, "ix": 5 },
                  "nm": "Transform"
                }
              ],
              "nm": "B",
              "np": 1,
              "cix": 2,
              "bm": 0,
              "ix": 2,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ty": "tr",
                      "p": { "a": 0, "k": [0, 0], "ix": 2 },
                      "a": { "a": 0, "k": [0, 0], "ix": 1 },
                      "s": { "a": 0, "k": [100, 100], "ix": 3 },
                      "r": { "a": 0, "k": 0, "ix": 6 },
                      "o": { "a": 0, "k": 100, "ix": 7 },
                      "sk": { "a": 0, "k": 0, "ix": 4 },
                      "sa": { "a": 0, "k": 0, "ix": 5 },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "2.09",
                  "np": 0,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false,
                  "cl": "09"
                },
                {
                  "ty": "tr",
                  "p": { "a": 0, "k": [0, 0], "ix": 2 },
                  "a": { "a": 0, "k": [0, 0], "ix": 1 },
                  "s": { "a": 0, "k": [100, 100], "ix": 3 },
                  "r": { "a": 0, "k": 0, "ix": 6 },
                  "o": { "a": 0, "k": 100, "ix": 7 },
                  "sk": { "a": 0, "k": 0, "ix": 4 },
                  "sa": { "a": 0, "k": 0, "ix": 5 },
                  "nm": "Transform"
                }
              ],
              "nm": "Version",
              "np": 1,
              "cix": 2,
              "bm": 0,
              "ix": 3,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": { "a": 0, "k": [0, 0], "ix": 2 },
              "a": { "a": 0, "k": [0, 0], "ix": 1 },
              "s": { "a": 0, "k": [100, 100], "ix": 3 },
              "r": { "a": 0, "k": 0, "ix": 6 },
              "o": { "a": 0, "k": 100, "ix": 7 },
              "sk": { "a": 0, "k": 0, "ix": 4 },
              "sa": { "a": 0, "k": 0, "ix": 5 },
              "nm": "Transform"
            }
          ],
          "nm": "Admin",
          "np": 3,
          "cix": 2,
          "bm": 0,
          "ix": 2,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 59.9999948068185,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 12,
      "ty": 4,
      "nm": "leg_right 2::Hip",
      "parent": 5,
      "hd": true,
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": {
          "a": 0,
          "k": 0,
          "ix": 10,
          "x": "var $bm_rt;\nfunction parentTotal() {\n    var parentVal = 0;\n    var layerChain = 'thisLayer';\n    while (eval([layerChain][0]).hasParent) {\n        layerChain = $bm_sum(layerChain, '.parent');\n        parentVal = $bm_sum(parentVal, eval([layerChain][0]).rotation);\n    }\n    return parentVal;\n}\ntry {\n    var eff = thisComp.layer(thisLayer(2)('Admin')(2)('A')(2)(1)._name)(4)('RubberHose 2');\n    var autoRotate = eff('Auto Rotate Start');\n    if (autoRotate == 1) {\n        var a = thisComp.layer(thisLayer(2)('Admin')(2)('A')(2)(1)._name).toComp([\n                0,\n                0,\n                0\n            ]);\n        var b = thisComp.layer(thisLayer(2)('Admin')(2)('B')(2)(1)._name).toComp([\n                0,\n                0,\n                0\n            ]);\n        var s = length(a, b);\n        var sFac = eff('Parent Scale');\n        var realism = eff('Realism');\n        var bendDir = $bm_div(eff('Bend Direction'), 100);\n        var hoseLength = $bm_div(eff('Hose Length'), 2);\n        var bendRad = eff('Bend Radius');\n        var autoFlop = eff('AutoFlop');\n        var baseRot = $bm_sub(180, radiansToDegrees(Math.atan2($bm_sub(b[0], a[0]), $bm_sub(b[1], a[1]))));\n        var outerRad = $bm_mul(Math.sin(0.78539816339), s);\n        var straight = $bm_div($bm_mul(1.4142135623731, outerRad), 2);\n        straight /= Math.max(Math.abs(sFac), 0.001);\n        var roundShrink = linear(Math.abs(bendRad), 0, 100, 1, 0.87);\n        var innerRad;\n        if (hoseLength > straight) {\n            innerRad = $bm_sum(straight, $bm_mul(Math.sqrt($bm_sub(Math.pow(hoseLength, 2), Math.pow(straight, 2))), roundShrink));\n            innerRad = linear(realism, 0, 100, hoseLength, innerRad);\n            innerRad = linear(Math.abs(bendDir), straight, innerRad);\n        } else {\n            innerRad = straight;\n        }\n        innerRad = linear(Math.abs(autoFlop), straight, innerRad);\n        var flopDir = 1;\n        if (bendDir < 0) {\n            flopDir = -1;\n        }\n        flopDir *= autoFlop;\n        var opp = $bm_mul($bm_sub(innerRad, straight), flopDir);\n        var theta = Math.atan($bm_div(opp, Math.max(straight, 0.001)));\n        var bendAngle = radiansToDegrees(theta);\n        if (sFac < 0) {\n            baseRot *= -1;\n        }\n        bendRad *= $bm_div($bm_div(theta, $bm_neg(Math.PI)), linear(s, hoseLength, 0, 2, 0.9));\n        var parentRot = hasParent ? parentTotal() : 0;\n        var rotCalc = $bm_sub($bm_sum($bm_sub(baseRot, bendAngle), bendRad), parentRot);\n        $bm_rt = $bm_sum(rotCalc, value);\n    } else {\n        $bm_rt = value;\n    }\n} catch (e) {\n    $bm_rt = value;\n}"
        },
        "p": { "a": 0, "k": [-186, 129, 0], "ix": 2 },
        "a": { "a": 0, "k": [0, 0, 0], "ix": 1 },
        "s": { "a": 0, "k": [100, 100], "ix": 6 }
      },
      "ao": 0,
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "d": 1,
                  "ty": "el",
                  "s": { "a": 0, "k": [100, 100], "ix": 2 },
                  "p": { "a": 0, "k": [0, 0], "ix": 3 },
                  "nm": "Circle",
                  "mn": "ADBE Vector Shape - Ellipse",
                  "hd": false
                },
                {
                  "ind": 1,
                  "ty": "sh",
                  "ix": 2,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [0, 0],
                        [0, 0]
                      ],
                      "o": [
                        [0, 0],
                        [0, 0]
                      ],
                      "v": [
                        [-75, 0],
                        [75, 0]
                      ],
                      "c": false
                    },
                    "ix": 2
                  },
                  "nm": "01",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ind": 2,
                  "ty": "sh",
                  "ix": 3,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [0, 0],
                        [0, 0]
                      ],
                      "o": [
                        [0, 0],
                        [0, 0]
                      ],
                      "v": [
                        [0, -30],
                        [0, 30]
                      ],
                      "c": false
                    },
                    "ix": 2
                  },
                  "nm": "02",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": { "a": 0, "k": [0, 0], "ix": 2 },
                  "a": { "a": 0, "k": [0, 0], "ix": 1 },
                  "s": { "a": 0, "k": [30, 30], "ix": 3 },
                  "r": { "a": 0, "k": 0, "ix": 6 },
                  "o": { "a": 0, "k": 100, "ix": 7 },
                  "sk": { "a": 0, "k": 0, "ix": 4 },
                  "sa": { "a": 0, "k": 0, "ix": 5 },
                  "nm": "Transform"
                }
              ],
              "nm": "ControlShape",
              "np": 3,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "st",
              "c": {
                "a": 0,
                "k": [1, 0.560000002384, 0, 1],
                "ix": 3,
                "x": "var $bm_rt;\ntry {\n    var ctrl = thisComp.layer(thisLayer(2)('Admin')(2)('A')(2)(1)._name);\n    $bm_rt = ctrl(2)('Control Point')(2)('Stroke 1')('Color');\n} catch (e) {\n    $bm_rt = value;\n}"
              },
              "o": { "a": 0, "k": 100, "ix": 4 },
              "w": { "a": 0, "k": 3, "ix": 5 },
              "lc": 1,
              "lj": 1,
              "ml": 4,
              "bm": 0,
              "nm": "Stroke 1",
              "mn": "ADBE Vector Graphic - Stroke",
              "hd": false
            },
            {
              "ty": "tr",
              "p": { "a": 0, "k": [0, 0], "ix": 2 },
              "a": { "a": 0, "k": [0, 0], "ix": 1 },
              "s": { "a": 0, "k": [100, 100], "ix": 3 },
              "r": { "a": 0, "k": 0, "ix": 6 },
              "o": { "a": 0, "k": 100, "ix": 7 },
              "sk": { "a": 0, "k": 0, "ix": 4 },
              "sa": { "a": 0, "k": 0, "ix": 5 },
              "nm": "Transform"
            }
          ],
          "nm": "Control Point",
          "np": 2,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ty": "tr",
                      "p": { "a": 0, "k": [0, 0], "ix": 2 },
                      "a": { "a": 0, "k": [0, 0], "ix": 1 },
                      "s": { "a": 0, "k": [100, 100], "ix": 3 },
                      "r": { "a": 0, "k": 0, "ix": 6 },
                      "o": { "a": 0, "k": 100, "ix": 7 },
                      "sk": { "a": 0, "k": 0, "ix": 4 },
                      "sa": { "a": 0, "k": 0, "ix": 5 },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "leg_right 2::Ankle",
                  "np": 0,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": { "a": 0, "k": [0, 0], "ix": 2 },
                  "a": { "a": 0, "k": [135, 0], "ix": 1 },
                  "s": { "a": 0, "k": [100, 100], "ix": 3 },
                  "r": { "a": 0, "k": 0, "ix": 6 },
                  "o": { "a": 0, "k": 100, "ix": 7 },
                  "sk": { "a": 0, "k": 0, "ix": 4 },
                  "sa": { "a": 0, "k": 0, "ix": 5 },
                  "nm": "Transform"
                }
              ],
              "nm": "A",
              "np": 1,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ty": "tr",
                      "p": { "a": 0, "k": [0, 0], "ix": 2 },
                      "a": { "a": 0, "k": [20, 20], "ix": 1 },
                      "s": { "a": 0, "k": [100, 100], "ix": 3 },
                      "r": { "a": 0, "k": 0, "ix": 6 },
                      "o": { "a": 0, "k": 100, "ix": 7 },
                      "sk": { "a": 0, "k": 0, "ix": 4 },
                      "sa": { "a": 0, "k": 0, "ix": 5 },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "leg_right 2::Hip",
                  "np": 0,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": { "a": 0, "k": [0, 0], "ix": 2 },
                  "a": { "a": 0, "k": [0, 0], "ix": 1 },
                  "s": { "a": 0, "k": [100, 100], "ix": 3 },
                  "r": { "a": 0, "k": 0, "ix": 6 },
                  "o": { "a": 0, "k": 100, "ix": 7 },
                  "sk": { "a": 0, "k": 0, "ix": 4 },
                  "sa": { "a": 0, "k": 0, "ix": 5 },
                  "nm": "Transform"
                }
              ],
              "nm": "B",
              "np": 1,
              "cix": 2,
              "bm": 0,
              "ix": 2,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ty": "tr",
                      "p": { "a": 0, "k": [0, 0], "ix": 2 },
                      "a": { "a": 0, "k": [0, 0], "ix": 1 },
                      "s": { "a": 0, "k": [100, 100], "ix": 3 },
                      "r": { "a": 0, "k": 0, "ix": 6 },
                      "o": { "a": 0, "k": 100, "ix": 7 },
                      "sk": { "a": 0, "k": 0, "ix": 4 },
                      "sa": { "a": 0, "k": 0, "ix": 5 },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "2.09",
                  "np": 0,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false,
                  "cl": "09"
                },
                {
                  "ty": "tr",
                  "p": { "a": 0, "k": [0, 0], "ix": 2 },
                  "a": { "a": 0, "k": [0, 0], "ix": 1 },
                  "s": { "a": 0, "k": [100, 100], "ix": 3 },
                  "r": { "a": 0, "k": 0, "ix": 6 },
                  "o": { "a": 0, "k": 100, "ix": 7 },
                  "sk": { "a": 0, "k": 0, "ix": 4 },
                  "sa": { "a": 0, "k": 0, "ix": 5 },
                  "nm": "Transform"
                }
              ],
              "nm": "Version",
              "np": 1,
              "cix": 2,
              "bm": 0,
              "ix": 3,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": { "a": 0, "k": [0, 0], "ix": 2 },
              "a": { "a": 0, "k": [0, 0], "ix": 1 },
              "s": { "a": 0, "k": [100, 100], "ix": 3 },
              "r": { "a": 0, "k": 0, "ix": 6 },
              "o": { "a": 0, "k": 100, "ix": 7 },
              "sk": { "a": 0, "k": 0, "ix": 4 },
              "sa": { "a": 0, "k": 0, "ix": 5 },
              "nm": "Transform"
            }
          ],
          "nm": "Admin",
          "np": 3,
          "cix": 2,
          "bm": 0,
          "ix": 2,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 59.9999948068185,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 13,
      "ty": 4,
      "nm": "leg_right 2",
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": {
          "a": 0,
          "k": 0,
          "ix": 10,
          "x": "var $bm_rt;\nfunction parentTotal() {\n    var parentVal = 0;\n    var layerChain = 'thisLayer';\n    while (eval([layerChain][0]).hasParent) {\n        layerChain = $bm_sum(layerChain, '.parent');\n        parentVal = $bm_sum(parentVal, eval([layerChain][0]).rotation);\n    }\n    return parentVal;\n}\nvar r = 0;\nif (thisLayer.hasParent) {\n    r = $bm_neg(parentTotal());\n}\n$bm_rt = r;"
        },
        "p": {
          "a": 0,
          "k": [540, 540, 0],
          "ix": 2,
          "x": "var $bm_rt;\nvar p = [\n        0,\n        0\n    ];\ntry {\n    if (thisLayer.hasParent) {\n        p = parent.fromComp([\n            0,\n            0,\n            0\n        ]);\n    }\n    $bm_rt = p;\n} catch (err) {\n    $bm_rt = p;\n}"
        },
        "a": { "a": 0, "k": [0, 0], "ix": 1 },
        "s": {
          "a": 0,
          "k": [100, 100, 100],
          "ix": 6,
          "x": "var $bm_rt;\n$bm_rt = value / length(toComp([\n    0,\n    0\n]), toComp([\n    0.7071,\n    0.7071\n])) || 0.001;"
        }
      },
      "ao": 0,
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ty": "sr",
                      "sy": 1,
                      "d": 1,
                      "pt": { "a": 0, "k": 4, "ix": 3 },
                      "p": { "a": 0, "k": [0, 0], "ix": 4 },
                      "r": { "a": 0, "k": 0, "ix": 5 },
                      "ir": {
                        "a": 0,
                        "k": 500,
                        "ix": 6,
                        "x": "var $bm_rt;\nvar p = thisProperty.propertyIndex;\nvar grp = thisProperty.propertyGroup(1).propertyIndex;\n$bm_rt = thisLayer(2)('Admin')(2)('ArcMath')(2)(grp)(p);"
                      },
                      "is": {
                        "a": 0,
                        "k": 0,
                        "ix": 8,
                        "x": "var $bm_rt;\nvar p = thisProperty.propertyIndex;\nvar grp = thisProperty.propertyGroup(1).propertyIndex;\n$bm_rt = thisLayer(2)('Admin')(2)('ArcMath')(2)(grp)(p);"
                      },
                      "or": {
                        "a": 0,
                        "k": 113,
                        "ix": 7,
                        "x": "var $bm_rt;\nvar p = thisProperty.propertyIndex;\nvar grp = thisProperty.propertyGroup(1).propertyIndex;\n$bm_rt = thisLayer(2)('Admin')(2)('ArcMath')(2)(grp)(p);"
                      },
                      "os": {
                        "a": 0,
                        "k": 0,
                        "ix": 9,
                        "x": "var $bm_rt;\nvar p = thisProperty.propertyIndex;\nvar grp = thisProperty.propertyGroup(1).propertyIndex;\n$bm_rt = thisLayer(2)('Admin')(2)('ArcMath')(2)(grp)(p);"
                      },
                      "ix": 1,
                      "nm": "LineForCurve",
                      "mn": "ADBE Vector Shape - Star",
                      "hd": false
                    },
                    {
                      "ty": "tm",
                      "s": {
                        "a": 0,
                        "k": 0,
                        "ix": 1,
                        "x": "var $bm_rt;\nvar p = thisProperty.propertyIndex;\nvar grp = thisProperty.propertyGroup(1).propertyIndex;\n$bm_rt = thisLayer(2)('Admin')(2)('ArcMath')(2)(grp)(p);"
                      },
                      "e": {
                        "a": 0,
                        "k": 0,
                        "ix": 2,
                        "x": "var $bm_rt;\nvar p = thisProperty.propertyIndex;\nvar grp = thisProperty.propertyGroup(1).propertyIndex;\n$bm_rt = thisLayer(2)('Admin')(2)('ArcMath')(2)(grp)(p);"
                      },
                      "o": {
                        "a": 0,
                        "k": -90,
                        "ix": 3,
                        "x": "var $bm_rt;\nvar p = thisProperty.propertyIndex;\nvar grp = thisProperty.propertyGroup(1).propertyIndex;\n$bm_rt = thisLayer(2)('Admin')(2)('ArcMath')(2)(grp)(p);"
                      },
                      "m": 1,
                      "ix": 2,
                      "nm": "Line Halfer",
                      "mn": "ADBE Vector Filter - Trim",
                      "hd": false
                    },
                    {
                      "ty": "tr",
                      "p": {
                        "a": 0,
                        "k": [0, 0],
                        "ix": 2,
                        "x": "var $bm_rt;\nvar p = thisProperty.propertyIndex;\nvar grp = thisProperty.propertyGroup(2).propertyIndex;\n$bm_rt = content('Admin').content('ArcMath')('ADBE Vector Transform Group')(p);"
                      },
                      "a": {
                        "a": 0,
                        "k": [0, 0],
                        "ix": 1,
                        "x": "var $bm_rt;\nvar p = thisProperty.propertyIndex;\nvar grp = thisProperty.propertyGroup(2).propertyIndex;\n$bm_rt = content('Admin').content('ArcMath')('ADBE Vector Transform Group')(p);"
                      },
                      "s": {
                        "a": 0,
                        "k": [100, 100],
                        "ix": 3,
                        "x": "var $bm_rt;\nvar p = thisProperty.propertyIndex;\nvar grp = thisProperty.propertyGroup(2).propertyIndex;\n$bm_rt = content('Admin').content('ArcMath')('ADBE Vector Transform Group')(p);"
                      },
                      "r": {
                        "a": 0,
                        "k": 45,
                        "ix": 6,
                        "x": "var $bm_rt;\nvar p = thisProperty.propertyIndex;\nvar grp = thisProperty.propertyGroup(2).propertyIndex;\n$bm_rt = content('Admin').content('ArcMath')('ADBE Vector Transform Group')(p);"
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 7,
                        "x": "var $bm_rt;\nvar p = thisProperty.propertyIndex;\nvar grp = thisProperty.propertyGroup(2).propertyIndex;\n$bm_rt = content('Admin').content('ArcMath')('ADBE Vector Transform Group')(p);"
                      },
                      "sk": {
                        "a": 0,
                        "k": 0,
                        "ix": 4,
                        "x": "var $bm_rt;\nvar p = thisProperty.propertyIndex;\nvar grp = thisProperty.propertyGroup(2).propertyIndex;\n$bm_rt = content('Admin').content('ArcMath')('ADBE Vector Transform Group')(p);"
                      },
                      "sa": {
                        "a": 0,
                        "k": 0,
                        "ix": 5,
                        "x": "var $bm_rt;\nvar p = thisProperty.propertyIndex;\nvar grp = thisProperty.propertyGroup(2).propertyIndex;\n$bm_rt = content('Admin').content('ArcMath')('ADBE Vector Transform Group')(p);"
                      },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "Arc",
                  "np": 2,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "st",
                  "c": { "a": 0, "k": [0, 0, 0, 1], "ix": 3 },
                  "o": { "a": 0, "k": 100, "ix": 4 },
                  "w": {
                    "a": 0,
                    "k": 15,
                    "ix": 5,
                    "x": "var $bm_rt;\nvar sFac = thisComp.layer(thisLayer(2)('Admin')(2)('A')(2)(1)._name)(4)('RubberHose 2')('Parent Scale');\n$bm_rt = Math.abs($bm_mul(value, sFac));"
                  },
                  "lc": 2,
                  "lj": 2,
                  "bm": 0,
                  "nm": "Stroke 1",
                  "mn": "ADBE Vector Graphic - Stroke",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [0, 0],
                    "ix": 2,
                    "x": "var $bm_rt;\ntry {\n    var ctrl = thisComp.layer(thisLayer(2)('Admin')(2)('A')(2)(1)._name)(4)('RubberHose 2');\n    $bm_rt = ctrl('A');\n} catch (err) {\n    $bm_rt = value;\n}"
                  },
                  "a": { "a": 0, "k": [0, 0], "ix": 1 },
                  "s": { "a": 0, "k": [100, 100], "ix": 3 },
                  "r": { "a": 0, "k": 0, "ix": 6 },
                  "o": { "a": 0, "k": 100, "ix": 7 },
                  "sk": { "a": 0, "k": 0, "ix": 4 },
                  "sa": { "a": 0, "k": 0, "ix": 5 },
                  "nm": "Transform"
                }
              ],
              "nm": "BaseHose",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": { "a": 0, "k": [0, 0], "ix": 2 },
              "a": { "a": 0, "k": [0, 0], "ix": 1 },
              "s": { "a": 0, "k": [100, 100], "ix": 3 },
              "r": { "a": 0, "k": 0, "ix": 6 },
              "o": { "a": 0, "k": 100, "ix": 7 },
              "sk": { "a": 0, "k": 0, "ix": 4 },
              "sa": { "a": 0, "k": 0, "ix": 5 },
              "nm": "Transform"
            }
          ],
          "nm": "Style",
          "np": 1,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ty": "tr",
                      "p": { "a": 0, "k": [0, 0], "ix": 2 },
                      "a": { "a": 0, "k": [0, 0], "ix": 1 },
                      "s": { "a": 0, "k": [100, 100], "ix": 3 },
                      "r": { "a": 0, "k": 0, "ix": 6 },
                      "o": { "a": 0, "k": 100, "ix": 7 },
                      "sk": { "a": 0, "k": 0, "ix": 4 },
                      "sa": { "a": 0, "k": 0, "ix": 5 },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "leg_right 2::Ankle",
                  "np": 0,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": { "a": 0, "k": [0, 0], "ix": 2 },
                  "a": { "a": 0, "k": [135, 0], "ix": 1 },
                  "s": { "a": 0, "k": [100, 100], "ix": 3 },
                  "r": { "a": 0, "k": 0, "ix": 6 },
                  "o": { "a": 0, "k": 100, "ix": 7 },
                  "sk": { "a": 0, "k": 0, "ix": 4 },
                  "sa": { "a": 0, "k": 0, "ix": 5 },
                  "nm": "Transform"
                }
              ],
              "nm": "A",
              "np": 1,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ty": "tr",
                      "p": { "a": 0, "k": [0, 0], "ix": 2 },
                      "a": { "a": 0, "k": [200, 200], "ix": 1 },
                      "s": { "a": 0, "k": [100, 100], "ix": 3 },
                      "r": { "a": 0, "k": 0, "ix": 6 },
                      "o": { "a": 0, "k": 100, "ix": 7 },
                      "sk": { "a": 0, "k": 0, "ix": 4 },
                      "sa": { "a": 0, "k": 0, "ix": 5 },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "leg_right 2::Hip",
                  "np": 0,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": { "a": 0, "k": [0, 0], "ix": 2 },
                  "a": { "a": 0, "k": [0, 0], "ix": 1 },
                  "s": { "a": 0, "k": [100, 100], "ix": 3 },
                  "r": { "a": 0, "k": 0, "ix": 6 },
                  "o": { "a": 0, "k": 100, "ix": 7 },
                  "sk": { "a": 0, "k": 0, "ix": 4 },
                  "sa": { "a": 0, "k": 0, "ix": 5 },
                  "nm": "Transform"
                }
              ],
              "nm": "B",
              "np": 1,
              "cix": 2,
              "bm": 0,
              "ix": 2,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ty": "tr",
                      "p": { "a": 0, "k": [0, 0], "ix": 2 },
                      "a": { "a": 0, "k": [0, 0], "ix": 1 },
                      "s": { "a": 0, "k": [100, 100], "ix": 3 },
                      "r": { "a": 0, "k": 0, "ix": 6 },
                      "o": { "a": 0, "k": 100, "ix": 7 },
                      "sk": { "a": 0, "k": 0, "ix": 4 },
                      "sa": { "a": 0, "k": 0, "ix": 5 },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "2.09",
                  "np": 0,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false,
                  "cl": "09"
                },
                {
                  "ty": "tr",
                  "p": { "a": 0, "k": [0, 0], "ix": 2 },
                  "a": { "a": 0, "k": [0, 0], "ix": 1 },
                  "s": { "a": 0, "k": [100, 100], "ix": 3 },
                  "r": { "a": 0, "k": 0, "ix": 6 },
                  "o": { "a": 0, "k": 100, "ix": 7 },
                  "sk": { "a": 0, "k": 0, "ix": 4 },
                  "sa": { "a": 0, "k": 0, "ix": 5 },
                  "nm": "Transform"
                }
              ],
              "nm": "Version",
              "np": 1,
              "cix": 2,
              "bm": 0,
              "ix": 3,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "sr",
                  "sy": 1,
                  "d": 1,
                  "pt": { "a": 0, "k": 4, "ix": 3 },
                  "p": { "a": 0, "k": [0, 0], "ix": 4 },
                  "r": { "a": 0, "k": 0, "ix": 5 },
                  "ir": {
                    "a": 0,
                    "k": 200,
                    "ix": 6,
                    "x": "var $bm_rt;\ntry {\n    var ctrl = thisComp.layer(thisLayer(2)('Admin')(2)('A')(2)(1)._name)(4)('RubberHose 2');\n    $bm_rt = ctrl('Inner Radius');\n} catch (err) {\n    $bm_rt = value;\n}"
                  },
                  "is": {
                    "a": 0,
                    "k": 100,
                    "ix": 8,
                    "x": "var $bm_rt;\ntry {\n    var ctrl = thisComp.layer(thisLayer(2)('Admin')(2)('A')(2)(1)._name)(4)('RubberHose 2');\n    $bm_rt = ctrl('Bend Radius');\n} catch (err) {\n    $bm_rt = value;\n}"
                  },
                  "or": {
                    "a": 0,
                    "k": 200,
                    "ix": 7,
                    "x": "var $bm_rt;\ntry {\n    var ctrl = thisComp.layer(thisLayer(2)('Admin')(2)('A')(2)(1)._name)(4)('RubberHose 2');\n    $bm_rt = ctrl('Outer Radius');\n} catch (err) {\n    $bm_rt = value;\n}"
                  },
                  "os": { "a": 0, "k": 0, "ix": 9 },
                  "ix": 1,
                  "nm": "LineForCurve",
                  "mn": "ADBE Vector Shape - Star",
                  "hd": false
                },
                {
                  "ty": "tm",
                  "s": { "a": 0, "k": 0.01, "ix": 1 },
                  "e": { "a": 0, "k": 24.99, "ix": 2 },
                  "o": {
                    "a": 0,
                    "k": -90,
                    "ix": 3,
                    "x": "var $bm_rt;\n$bm_rt = -90;"
                  },
                  "m": 1,
                  "ix": 2,
                  "nm": "Line Halfer",
                  "mn": "ADBE Vector Filter - Trim",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": { "a": 0, "k": [0, 0], "ix": 2 },
                  "a": {
                    "a": 0,
                    "k": [0, 0],
                    "ix": 1,
                    "x": "var $bm_rt;\nvar s = thisProperty.propertyGroup(2)(2)(1)(7);\n$bm_rt = [\n    -s,\n    0\n];"
                  },
                  "s": {
                    "a": 0,
                    "k": [100, 100],
                    "ix": 3,
                    "x": "var $bm_rt;\nvar flop;\ntry {\n    var eff = thisComp.layer(thisLayer(2)('Admin')(2)('A')(2)(1)._name)(4)('RubberHose 2');\n    var bendDir = eff('Bend Direction');\n    var autoFlop = eff('AutoFlop');\n    flop = bendDir > 0 ? 1 : -1;\n    autoFlop > 0 ? 0 : flop *= -1;\n    var s = flop == 1 ? [\n            -100,\n            100\n        ] : [\n            100,\n            100\n        ];\n    if (eff('Parent Scale') < 0) {\n        s = [\n            -s[0],\n            s[1]\n        ];\n    }\n    $bm_rt = s;\n} catch (err) {\n    $bm_rt = value;\n}\n;"
                  },
                  "r": {
                    "a": 0,
                    "k": 45,
                    "ix": 6,
                    "x": "var $bm_rt;\ntry {\n    var ctrl = thisComp.layer(thisLayer(2)('Admin')(2)('A')(2)(1)._name)(4)('RubberHose 2');\n    var baseRot = ctrl('Base Rotation');\n    var flop = content('Admin').content('ArcMath').transform.scale[0];\n    var rotOffset = flop < 0 ? -45 : 225;\n    $bm_rt = $bm_sum(baseRot, rotOffset);\n} catch (err) {\n    $bm_rt = value;\n}"
                  },
                  "o": { "a": 0, "k": 100, "ix": 7 },
                  "sk": { "a": 0, "k": 0, "ix": 4 },
                  "sa": { "a": 0, "k": 0, "ix": 5 },
                  "nm": "Transform"
                }
              ],
              "nm": "ArcMath",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 4,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [0, 0],
                "ix": 2,
                "x": "var $bm_rt;\ntry {\n    var ctrl = thisComp.layer(thisLayer(2)('Admin')(2)('A')(2)(1)._name)(4)('RubberHose 2');\n    $bm_rt = ctrl('A');\n} catch (err) {\n    $bm_rt = value;\n}"
              },
              "a": { "a": 0, "k": [0, 0], "ix": 1 },
              "s": { "a": 0, "k": [100, 100], "ix": 3 },
              "r": { "a": 0, "k": 0, "ix": 6 },
              "o": { "a": 0, "k": 100, "ix": 7 },
              "sk": { "a": 0, "k": 0, "ix": 4 },
              "sa": { "a": 0, "k": 0, "ix": 5 },
              "nm": "Transform"
            }
          ],
          "nm": "Admin",
          "np": 4,
          "cix": 2,
          "bm": 0,
          "ix": 2,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 59.9999948068185,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 14,
      "ty": 4,
      "nm": "Shape Layer 1",
      "hd": true,
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": { "a": 0, "k": 0, "ix": 10 },
        "p": { "a": 0, "k": [540, 540, 0], "ix": 2 },
        "a": { "a": 0, "k": [0, 0, 0], "ix": 1 },
        "s": { "a": 0, "k": [100, 100, 100], "ix": 6 }
      },
      "ao": 0,
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "ty": "rc",
              "d": 1,
              "s": { "a": 0, "k": [1080, 1080], "ix": 2 },
              "p": { "a": 0, "k": [0, 0], "ix": 3 },
              "r": { "a": 0, "k": 0, "ix": 4 },
              "nm": "Rectangle Path 1",
              "mn": "ADBE Vector Shape - Rect",
              "hd": false
            },
            {
              "ty": "st",
              "c": { "a": 0, "k": [0, 0, 0, 1], "ix": 3 },
              "o": { "a": 0, "k": 100, "ix": 4 },
              "w": { "a": 0, "k": 15, "ix": 5 },
              "lc": 1,
              "lj": 1,
              "ml": 4,
              "bm": 0,
              "nm": "Stroke 1",
              "mn": "ADBE Vector Graphic - Stroke",
              "hd": false
            },
            {
              "ty": "fl",
              "c": { "a": 0, "k": [1, 1, 1, 1], "ix": 4 },
              "o": { "a": 0, "k": 100, "ix": 5 },
              "r": 1,
              "bm": 0,
              "nm": "Fill 1",
              "mn": "ADBE Vector Graphic - Fill",
              "hd": false
            },
            {
              "ty": "tr",
              "p": { "a": 0, "k": [0, 0], "ix": 2 },
              "a": { "a": 0, "k": [0, 0], "ix": 1 },
              "s": { "a": 0, "k": [100, 100], "ix": 3 },
              "r": { "a": 0, "k": 0, "ix": 6 },
              "o": { "a": 0, "k": 100, "ix": 7 },
              "sk": { "a": 0, "k": 0, "ix": 4 },
              "sa": { "a": 0, "k": 0, "ix": 5 },
              "nm": "Transform"
            }
          ],
          "nm": "Rectangle 1",
          "np": 3,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 59.9999948068185,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 15,
      "ty": 4,
      "nm": "shadow",
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 15, "ix": 11 },
        "r": { "a": 0, "k": 0, "ix": 10 },
        "p": {
          "a": 1,
          "k": [
            {
              "i": { "x": 0, "y": 1 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 0,
              "s": [531.242, 811.078, 0],
              "e": [544.242, 811.078, 0],
              "to": [2.167, 0, 0],
              "ti": [0, 0, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 1, "y": 0 },
              "t": 6,
              "s": [544.242, 811.078, 0],
              "e": [531.242, 811.078, 0],
              "to": [0, 0, 0],
              "ti": [2.167, 0, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 9,
              "s": [531.242, 811.078, 0],
              "e": [531.242, 811.078, 0],
              "to": [0, 0, 0],
              "ti": [0, 0, 0]
            },
            {
              "i": { "x": 0, "y": 1 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 11,
              "s": [531.242, 811.078, 0],
              "e": [514.242, 811.078, 0],
              "to": [-2.833, 0, 0],
              "ti": [0, 0, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 1, "y": 0 },
              "t": 17,
              "s": [514.242, 811.078, 0],
              "e": [531.242, 811.078, 0],
              "to": [0, 0, 0],
              "ti": [-2.833, 0, 0]
            },
            {
              "i": { "x": 0.833, "y": 0.833 },
              "o": { "x": 0.167, "y": 0.167 },
              "t": 20,
              "s": [531.242, 811.078, 0],
              "e": [531.242, 811.078, 0],
              "to": [0, 0, 0],
              "ti": [0, 0, 0]
            },
            { "t": 21.9999980958335 }
          ],
          "ix": 2
        },
        "a": { "a": 0, "k": [-8.758, 290.078, 0], "ix": 1 },
        "s": {
          "a": 1,
          "k": [
            {
              "i": { "x": [0, 0, 0], "y": [1, 1, 1] },
              "o": { "x": [0.167, 0.167, 0.167], "y": [0.167, 0.167, 0] },
              "t": 0,
              "s": [140, 100, 100],
              "e": [60, 60, 100]
            },
            {
              "i": { "x": [0.833, 0.833, 0.833], "y": [0.833, 0.833, 1] },
              "o": { "x": [1, 1, 1], "y": [0, 0, 0] },
              "t": 6,
              "s": [60, 60, 100],
              "e": [140, 100, 100]
            },
            {
              "i": { "x": [0, 0, 0], "y": [1, 1, 1] },
              "o": { "x": [0.167, 0.167, 0.167], "y": [0.167, 0.167, 0] },
              "t": 11,
              "s": [140, 100, 100],
              "e": [60, 60, 100]
            },
            {
              "i": { "x": [0.833, 0.833, 0.833], "y": [0.833, 0.833, 1] },
              "o": { "x": [1, 1, 1], "y": [0, 0, 0] },
              "t": 17,
              "s": [60, 60, 100],
              "e": [140, 100, 100]
            },
            { "t": 21.9999980958335 }
          ],
          "ix": 6
        }
      },
      "ao": 0,
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "d": 1,
              "ty": "el",
              "s": { "a": 0, "k": [250.484, 30.156], "ix": 2 },
              "p": { "a": 0, "k": [0, 0], "ix": 3 },
              "nm": "Ellipse Path 1",
              "mn": "ADBE Vector Shape - Ellipse",
              "hd": false
            },
            {
              "ty": "st",
              "c": { "a": 0, "k": [0, 0, 0, 1], "ix": 3 },
              "o": { "a": 0, "k": 100, "ix": 4 },
              "w": { "a": 0, "k": 0, "ix": 5 },
              "lc": 1,
              "lj": 1,
              "ml": 4,
              "bm": 0,
              "nm": "Stroke 1",
              "mn": "ADBE Vector Graphic - Stroke",
              "hd": false
            },
            {
              "ty": "fl",
              "c": { "a": 0, "k": [0, 0, 0, 1], "ix": 4 },
              "o": { "a": 0, "k": 100, "ix": 5 },
              "r": 1,
              "bm": 0,
              "nm": "Fill 1",
              "mn": "ADBE Vector Graphic - Fill",
              "hd": false
            },
            {
              "ty": "tr",
              "p": { "a": 0, "k": [-8.758, 290.078], "ix": 2 },
              "a": { "a": 0, "k": [0, 0], "ix": 1 },
              "s": { "a": 0, "k": [100, 100], "ix": 3 },
              "r": { "a": 0, "k": 0, "ix": 6 },
              "o": { "a": 0, "k": 100, "ix": 7 },
              "sk": { "a": 0, "k": 0, "ix": 4 },
              "sa": { "a": 0, "k": 0, "ix": 5 },
              "nm": "Transform"
            }
          ],
          "nm": "Ellipse 1",
          "np": 3,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 144.999987449811,
      "st": 0,
      "bm": 0
    }
  ],
  "markers": [
    { "tm": 0, "cm": "", "dr": 0 },
    { "tm": 10.9999990479167, "cm": "", "dr": 0 },
    { "tm": 21.9999980958335, "cm": "", "dr": 0 }
  ],
  "chars": [
    {
      "ch": "!",
      "size": 342.081817626953,
      "style": "Heavy",
      "w": 29.6,
      "data": {
        "shapes": [
          {
            "ty": "gr",
            "it": [
              {
                "ind": 0,
                "ty": "sh",
                "ix": 1,
                "ks": {
                  "a": 0,
                  "k": {
                    "i": [
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0]
                    ],
                    "o": [
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0]
                    ],
                    "v": [
                      [20.8, -70.8],
                      [8.8, -70.8],
                      [8.8, -22.2],
                      [20.8, -22.2]
                    ],
                    "c": true
                  },
                  "ix": 2
                },
                "nm": "!",
                "mn": "ADBE Vector Shape - Group",
                "hd": false
              },
              {
                "ind": 1,
                "ty": "sh",
                "ix": 2,
                "ks": {
                  "a": 0,
                  "k": {
                    "i": [
                      [-0.434, -0.933],
                      [-0.734, -0.666],
                      [-0.967, -0.4],
                      [-1.067, 0],
                      [-1.567, 1.534],
                      [0, 2.134],
                      [1.6, 1.467],
                      [2.133, 0],
                      [1.566, -1.533],
                      [0, -2.133]
                    ],
                    "o": [
                      [0.433, 0.934],
                      [0.733, 0.667],
                      [0.966, 0.4],
                      [2.2, 0],
                      [1.566, -1.533],
                      [0, -2.133],
                      [-1.6, -1.466],
                      [-2.2, 0],
                      [-1.567, 1.534],
                      [0, 1.067]
                    ],
                    "v": [
                      [7.45, -4],
                      [9.2, -1.6],
                      [11.75, 0],
                      [14.8, 0.6],
                      [20.45, -1.7],
                      [22.8, -7.2],
                      [20.4, -12.6],
                      [14.8, -14.8],
                      [9.15, -12.5],
                      [6.8, -7]
                    ],
                    "c": true
                  },
                  "ix": 2
                },
                "nm": "!",
                "mn": "ADBE Vector Shape - Group",
                "hd": false
              }
            ],
            "nm": "!",
            "np": 5,
            "cix": 2,
            "bm": 0,
            "ix": 1,
            "mn": "ADBE Vector Group",
            "hd": false
          }
        ]
      },
      "fFamily": "Avenir"
    }
  ]
}
